{"version":3,"sources":["webpack:///path---tag-talking-a4367822a0fdc0fa8427.js","webpack:///./.cache/json/tag-talking.json"],"names":["webpackJsonp","2731","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,ugEAAAC,MAA6hEC,SAAA,cAAwBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,8BAAAC,KAAA,6GAAAC,YAAwKC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,qCAA6CC,aAAgBR,KAAA,UAAAC,IAAA","file":"path---tag-talking-a4367822a0fdc0fa8427.js","sourcesContent":["webpackJsonp([173102682291240],{\n\n/***/ 2731:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Slides: http://comonad.com/haskell/Lenses-Folds-and-Traversals-NYC.pdf\\n\\nThis was a talk I gave at the second New York Haskell User Group Meeting (http://www.meetup.com/NY-Haskell/) on the new lens library, which provides a highly composable toolbox for accessing and modifying multiple parts of data structures.\\n\\nStarting with building blocks such as fmap and (.), we build up combinators suitable for working with a wide array of data structures. These generalize the notions you already know how to use into a form that is easier to compose and simultaneously allow them to be used for monomorphic containers such as Data.Text. \\n\\nAll without compromising on your ability to reason about them using laws!\\n\\nFinally, once I've built up some foundations, I do a bit of a deep dive, exploring consequences of this design. In particular we discuss the efficient generic programming programming framework exported by lens, and type-safe Traversal-based zippers.\\n\\nFamiliarity with the Applicative and Traversable classes from the Haskell base libraries will be helpful (links provided below), but a basic understanding of the concepts get introduced as I go along. \\n\\nUseful (but not mandatory) references:\\n\\nThe lens library and documentation: http://hackage.haskell.org/package/lens\\nA previous, more introductory talk on how to use the lenses Edward Kmett wrote for the scalaz in the Scala programming language: https://www.youtube.com/watch?v=efv0SQNde5Q\\nThe original Applicative paper: http://www.soi.city.ac.uk/~ross/papers/Applicative.pdf\\nLots of information on Traversable: http://www.cs.ox.ac.uk/jeremy.gibbons/publications/iterator.pdf\\nA write-up of this talk, as presented at the Bay Area Haskell Users Group: http://google-opensource.blogspot.com/2012/10/lenses-folds-and-traversals-haskell.html\\n\\nThe original Keynote version of the slides are available from http://comonad.com/haskell/Lenses-Folds-and-Traversals-NYC.key\\n\\nThanks go to Johan Kiviniemi, who worked magic when it came to cleaning up the audio for this recording!\",\"meta\":{\"duration\":\"PT1H54M46S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"cefnmjtAolY\",\"provider\":\"youtube\"},\"slug\":\"lenses-folds-and-traversals\",\"tag\":[\"Haskell\",\"Functional Programming\",\"Haskell\",\"Mathematics\",\"Lecture\",\"Talk\",\"Academic\",\"Talking\",\"Computer\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/cefnmjtAolY/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Lenses, Folds, and Traversals\"}}]}},\"pathContext\":{\"slug\":\"talking\",\"tag\":\"Talking\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-talking-a4367822a0fdc0fa8427.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Slides: http://comonad.com/haskell/Lenses-Folds-and-Traversals-NYC.pdf\\n\\nThis was a talk I gave at the second New York Haskell User Group Meeting (http://www.meetup.com/NY-Haskell/) on the new lens library, which provides a highly composable toolbox for accessing and modifying multiple parts of data structures.\\n\\nStarting with building blocks such as fmap and (.), we build up combinators suitable for working with a wide array of data structures. These generalize the notions you already know how to use into a form that is easier to compose and simultaneously allow them to be used for monomorphic containers such as Data.Text. \\n\\nAll without compromising on your ability to reason about them using laws!\\n\\nFinally, once I've built up some foundations, I do a bit of a deep dive, exploring consequences of this design. In particular we discuss the efficient generic programming programming framework exported by lens, and type-safe Traversal-based zippers.\\n\\nFamiliarity with the Applicative and Traversable classes from the Haskell base libraries will be helpful (links provided below), but a basic understanding of the concepts get introduced as I go along. \\n\\nUseful (but not mandatory) references:\\n\\nThe lens library and documentation: http://hackage.haskell.org/package/lens\\nA previous, more introductory talk on how to use the lenses Edward Kmett wrote for the scalaz in the Scala programming language: https://www.youtube.com/watch?v=efv0SQNde5Q\\nThe original Applicative paper: http://www.soi.city.ac.uk/~ross/papers/Applicative.pdf\\nLots of information on Traversable: http://www.cs.ox.ac.uk/jeremy.gibbons/publications/iterator.pdf\\nA write-up of this talk, as presented at the Bay Area Haskell Users Group: http://google-opensource.blogspot.com/2012/10/lenses-folds-and-traversals-haskell.html\\n\\nThe original Keynote version of the slides are available from http://comonad.com/haskell/Lenses-Folds-and-Traversals-NYC.key\\n\\nThanks go to Johan Kiviniemi, who worked magic when it came to cleaning up the audio for this recording!\",\"meta\":{\"duration\":\"PT1H54M46S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"cefnmjtAolY\",\"provider\":\"youtube\"},\"slug\":\"lenses-folds-and-traversals\",\"tag\":[\"Haskell\",\"Functional Programming\",\"Haskell\",\"Mathematics\",\"Lecture\",\"Talk\",\"Academic\",\"Talking\",\"Computer\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/cefnmjtAolY/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Lenses, Folds, and Traversals\"}}]}},\"pathContext\":{\"slug\":\"talking\",\"tag\":\"Talking\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-talking.json\n// module id = 2731\n// module chunks = 173102682291240"],"sourceRoot":""}