{"version":3,"sources":["webpack:///path---speaker-martin-fowler-71de5c541f3648929277.js","webpack:///./.cache/json/speaker-martin-fowler.json"],"names":["webpackJsonp","1906","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext","speaker"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,yrBAAAC,MAA+sBC,SAAA,WAAqBC,WAAcC,KAAA,iBAAuBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,iDAAAC,KAAA,uCAAAC,YAAqHC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,oDAA6DhB,MAAQC,YAAA,osBAAAC,MAA0tBC,SAAA,YAAsBC,WAAcC,KAAA,iBAAuBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,wBAAAC,KAAA,uCAAAC,YAA4FC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,6BAAwChB,MAAQC,YAAA,gXAAAC,MAAsYC,SAAA,YAAsBC,WAAcC,KAAA,iBAAuBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,wBAAAC,KAAA,2BAAAC,YAAgFC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,2BAAoChB,MAAQC,YAAA,ilBAAAC,MAAumBC,SAAA,WAAqBC,WAAcC,KAAA,iBAAuBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,4BAAAC,KAAA,kCAAAC,YAA2FC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,gCAAwCC,aAAgBC,QAAA","file":"path---speaker-martin-fowler-71de5c541f3648929277.js","sourcesContent":["webpackJsonp([66974431140783],{\n\n/***/ 1906:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Towards the end of last year I attended a workshop with my colleagues in ThoughtWorks to discuss the nature of “event-driven” applications. Over the last few years we've been building lots of systems that make a lot of use of events, and they've been often praised, and often damned. Our North American office organized a summit, and ThoughtWorks senior developers from all over the world showed up to share ideas.\\nThe biggest outcome of the summit was recognizing that when people talk about “events”, they actually mean some quite different things. So we spent a lot of time trying to tease out what some useful patterns might be. This note is a brief summary of the main ones we identified.\",\"meta\":{\"duration\":\"PT50M6S\"},\"presenter\":{\"name\":\"Martin Fowler\"},\"source\":{\"id\":\"STKCRSUsyP0\",\"provider\":\"youtube\"},\"slug\":\"the-many-meanings-of-event-driven-architecture\",\"tag\":[\"GOTO Conference\",\"Chicago\",\"Keynote\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/STKCRSUsyP0/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"The Many Meanings of Event-Driven Architecture\"}},{\"node\":{\"description\":\"This is the second part of Martin Fowlers keynote at OOP 2014 in Munich and is a tricky talk to describe. Usually Martin likes a title and abstract to describe what the talk is about - but this talk is a journey, and he doesn't want to tell you where he's going, but instead to explore the ground with him. Martin Fowler will say that it starts with his biggest problem with most adoption of agile software development - the nature of the interaction between users, analysts, and programmers. It goes on to explore these roles, raising questions about the relationship of programmers to users, our responsibilities to them, and finally the Two Great Challenges that I think programmers need to face up to.\",\"meta\":{\"duration\":\"PT24M12S\"},\"presenter\":{\"name\":\"Martin Fowler\"},\"source\":{\"id\":\"Z8aECe4lp44\",\"provider\":\"youtube\"},\"slug\":\"not-just-code-monkeys\",\"tag\":[\"OOP2014\",\"Munich\",\"Food For Thought\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/Z8aECe4lp44/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"\\\"Not Just Code Monkeys\\\"\"}},{\"node\":{\"description\":\"Martin gives a rapid introduction to NoSQL databases: where they came from, the nature of the data models they use, and the different way you have to think about consistency. From this he outlines what kinds of circumstances you should consider using them, why they will not make relational databases obsolete, and the important consequence of polyglot persistence.\",\"meta\":{\"duration\":\"PT54M52S\"},\"presenter\":{\"name\":\"Martin Fowler\"},\"source\":{\"id\":\"qI_g07C_Q5I\",\"provider\":\"youtube\"},\"slug\":\"introduction-to-nosql\",\"tag\":[\"GOTO Conference\",\"NoSql\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/qI_g07C_Q5I/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Introduction to NoSQL\"}},{\"node\":{\"description\":\"Over the last decade or so, Refactoring has become a widely used technique to keep a high internal quality for a codebase. However most teams don't make enough use of refactoring because they aren't aware of the various workflows in which you can use it. In this keynote talk from OOP 2014 in Munich, Martin Fowler explores some of these workflows: such as Litter-Pickup Refactoring, Comprehension Refactoring, and Preparatory Refactoring. Martin also reminds people why common justifications for refactoring will sabotage your best efforts. (This talk also has a treatment as an infodeck.)\",\"meta\":{\"duration\":\"PT27M5S\"},\"presenter\":{\"name\":\"Martin Fowler\"},\"source\":{\"id\":\"vqEg37e4Mkw\",\"provider\":\"youtube\"},\"slug\":\"-workflows-of-refactoring\",\"tag\":[\"OOP2014\",\"Munich\",\"Refactoring\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/vqEg37e4Mkw/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Workflows of Refactoring\"}}]}},\"pathContext\":{\"speaker\":\"Martin Fowler\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---speaker-martin-fowler-71de5c541f3648929277.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Towards the end of last year I attended a workshop with my colleagues in ThoughtWorks to discuss the nature of “event-driven” applications. Over the last few years we've been building lots of systems that make a lot of use of events, and they've been often praised, and often damned. Our North American office organized a summit, and ThoughtWorks senior developers from all over the world showed up to share ideas.\\nThe biggest outcome of the summit was recognizing that when people talk about “events”, they actually mean some quite different things. So we spent a lot of time trying to tease out what some useful patterns might be. This note is a brief summary of the main ones we identified.\",\"meta\":{\"duration\":\"PT50M6S\"},\"presenter\":{\"name\":\"Martin Fowler\"},\"source\":{\"id\":\"STKCRSUsyP0\",\"provider\":\"youtube\"},\"slug\":\"the-many-meanings-of-event-driven-architecture\",\"tag\":[\"GOTO Conference\",\"Chicago\",\"Keynote\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/STKCRSUsyP0/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"The Many Meanings of Event-Driven Architecture\"}},{\"node\":{\"description\":\"This is the second part of Martin Fowlers keynote at OOP 2014 in Munich and is a tricky talk to describe. Usually Martin likes a title and abstract to describe what the talk is about - but this talk is a journey, and he doesn't want to tell you where he's going, but instead to explore the ground with him. Martin Fowler will say that it starts with his biggest problem with most adoption of agile software development - the nature of the interaction between users, analysts, and programmers. It goes on to explore these roles, raising questions about the relationship of programmers to users, our responsibilities to them, and finally the Two Great Challenges that I think programmers need to face up to.\",\"meta\":{\"duration\":\"PT24M12S\"},\"presenter\":{\"name\":\"Martin Fowler\"},\"source\":{\"id\":\"Z8aECe4lp44\",\"provider\":\"youtube\"},\"slug\":\"not-just-code-monkeys\",\"tag\":[\"OOP2014\",\"Munich\",\"Food For Thought\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/Z8aECe4lp44/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"\\\"Not Just Code Monkeys\\\"\"}},{\"node\":{\"description\":\"Martin gives a rapid introduction to NoSQL databases: where they came from, the nature of the data models they use, and the different way you have to think about consistency. From this he outlines what kinds of circumstances you should consider using them, why they will not make relational databases obsolete, and the important consequence of polyglot persistence.\",\"meta\":{\"duration\":\"PT54M52S\"},\"presenter\":{\"name\":\"Martin Fowler\"},\"source\":{\"id\":\"qI_g07C_Q5I\",\"provider\":\"youtube\"},\"slug\":\"introduction-to-nosql\",\"tag\":[\"GOTO Conference\",\"NoSql\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/qI_g07C_Q5I/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Introduction to NoSQL\"}},{\"node\":{\"description\":\"Over the last decade or so, Refactoring has become a widely used technique to keep a high internal quality for a codebase. However most teams don't make enough use of refactoring because they aren't aware of the various workflows in which you can use it. In this keynote talk from OOP 2014 in Munich, Martin Fowler explores some of these workflows: such as Litter-Pickup Refactoring, Comprehension Refactoring, and Preparatory Refactoring. Martin also reminds people why common justifications for refactoring will sabotage your best efforts. (This talk also has a treatment as an infodeck.)\",\"meta\":{\"duration\":\"PT27M5S\"},\"presenter\":{\"name\":\"Martin Fowler\"},\"source\":{\"id\":\"vqEg37e4Mkw\",\"provider\":\"youtube\"},\"slug\":\"-workflows-of-refactoring\",\"tag\":[\"OOP2014\",\"Munich\",\"Refactoring\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/vqEg37e4Mkw/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Workflows of Refactoring\"}}]}},\"pathContext\":{\"speaker\":\"Martin Fowler\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/speaker-martin-fowler.json\n// module id = 1906\n// module chunks = 66974431140783"],"sourceRoot":""}