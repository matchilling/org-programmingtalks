{"version":3,"sources":["webpack:///path---tag-acm-63f28366ef8aaa57811c.js","webpack:///./.cache/json/tag-acm.json"],"names":["webpackJsonp","1978","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,gkBAAAC,MAAslBC,SAAA,WAAqBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,+BAAAC,KAAA,0NAAAC,YAAsRC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,oCAA4CC,aAAgBR,KAAA,MAAAC,IAAA","file":"path---tag-acm-63f28366ef8aaa57811c.js","sourcesContent":["webpackJsonp([62597005335230],{\n\n/***/ 1978:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Talk by ACM A.M. Turing Laureate Dana S. Scott during the ACM A.M. Turing Centenary Celebration, June, 2012.\\n\\nAbstract:\\n\\nA very fast development in the early 1930s, following Hilbert's codification of Mathematical Logic, led to the Incompleteness Theorems, Computable Functions, Undecidability Theorems, and the general formulation of recursive Function Theory. The so-called Lambda Calculus played a key role. The history of these developments will be traced, and the much later place of Lambda Calculus in Mathematics and Programming-Language Theory will be outlined.\",\"meta\":{\"duration\":\"PT30M8S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"SphBW9ILVPU\",\"provider\":\"youtube\"},\"slug\":\"lambda-calculus-then-and-now\",\"tag\":[\"Calculus\",\"Dana S. Scott\",\"ACM\",\"ACM A.M. Turing Award\",\"Alan Turing\",\"Nobel Prize\",\"in\",\"computing\",\"Contest\",\"Entry\",\"Computer\",\"Electronics\",\"Gadget\",\"Technology\",\"Space\",\"Physics\",\"Mechanics\",\"Experiment\",\"Math\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/SphBW9ILVPU/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Lambda Calculus Then and Now\"}}]}},\"pathContext\":{\"slug\":\"acm\",\"tag\":\"ACM\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-acm-63f28366ef8aaa57811c.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Talk by ACM A.M. Turing Laureate Dana S. Scott during the ACM A.M. Turing Centenary Celebration, June, 2012.\\n\\nAbstract:\\n\\nA very fast development in the early 1930s, following Hilbert's codification of Mathematical Logic, led to the Incompleteness Theorems, Computable Functions, Undecidability Theorems, and the general formulation of recursive Function Theory. The so-called Lambda Calculus played a key role. The history of these developments will be traced, and the much later place of Lambda Calculus in Mathematics and Programming-Language Theory will be outlined.\",\"meta\":{\"duration\":\"PT30M8S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"SphBW9ILVPU\",\"provider\":\"youtube\"},\"slug\":\"lambda-calculus-then-and-now\",\"tag\":[\"Calculus\",\"Dana S. Scott\",\"ACM\",\"ACM A.M. Turing Award\",\"Alan Turing\",\"Nobel Prize\",\"in\",\"computing\",\"Contest\",\"Entry\",\"Computer\",\"Electronics\",\"Gadget\",\"Technology\",\"Space\",\"Physics\",\"Mechanics\",\"Experiment\",\"Math\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/SphBW9ILVPU/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Lambda Calculus Then and Now\"}}]}},\"pathContext\":{\"slug\":\"acm\",\"tag\":\"ACM\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-acm.json\n// module id = 1978\n// module chunks = 62597005335230"],"sourceRoot":""}