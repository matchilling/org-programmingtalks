{"version":3,"sources":["webpack:///path---talk-propositions-as-types-by-philip-wadler-dadb1ffc4d18d7de7f8d.js","webpack:///./.cache/json/talk-propositions-as-types-by-philip-wadler.json"],"names":["webpackJsonp","3123","module","exports","data","talkJson","description","meta","duration","presenter","name","slug","source","id","provider","tag","title","allTalkJson","pathContext","tags"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,UAAYC,YAAA,u7CAAAC,MAA68CC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,KAAA,yCAAAC,QAA2DC,GAAA,cAAAC,SAAA,WAAwCC,OAAAC,MAAA,4CAA+DC,YAAA,MAAoBC,aAAgBP,KAAA,yCAAAQ","file":"path---talk-propositions-as-types-by-philip-wadler-dadb1ffc4d18d7de7f8d.js","sourcesContent":["webpackJsonp([47459505488989],{\n\n/***/ 3123:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"talkJson\":{\"description\":\"The principle of Propositions as Types links logic to computation. At first sight it appears to be a simple coincidence---almost a pun---but it turns out to be remarkably robust, inspiring the design of theorem provers and programming languages, and continuing to influence the forefronts of computing. Propositions as Types has many names and many origins, and is a notion with depth, breadth, and mystery. Learn why functional programming is (and is not) the universal programming language.\\n\\nPhilip Wadler\\nUNIVERSITY OF EDINBURGH\\n@PhilipWadler\\n\\nPhilip Wadler is Professor of Theoretical Computer Science at the University of Edinburgh. He is an ACM Fellow and a Fellow of the Royal Society of Edinburgh, past chair of ACM SIGPLAN, past holder of a Royal Society-Wolfson Research Merit Fellowship, and a winner of the POPL Most Influential Paper Award. Previously, he worked or studied at Stanford, Xerox Parc, CMU, Oxford, Chalmers, Glasgow, Bell Labs, and Avaya Labs, and visited as a guest professor in Copenhagen, Sydney, and Paris. He has an h-index of 60, with more than 18,000 citations to his work according to Google Scholar. He contributed to the designs of Haskell, Java, and XQuery, and is a co-author of Introduction to Functional Programming (Prentice Hall, 1988), XQuery from the Experts (Addison Wesley, 2004) and Generics and Collections in Java (O'Reilly, 2006). He has delivered invited talks in locations ranging from Aizu to Zurich.\",\"meta\":{\"duration\":\"PT42M43S\"},\"presenter\":{\"name\":null},\"slug\":\"propositions-as-types-by-philip-wadler\",\"source\":{\"id\":\"IOiZatlZtGU\",\"provider\":\"youtube\"},\"tag\":[],\"title\":\"\\\"Propositions as Types\\\" by Philip Wadler\"},\"allTalkJson\":null},\"pathContext\":{\"slug\":\"propositions-as-types-by-philip-wadler\",\"tags\":[]}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---talk-propositions-as-types-by-philip-wadler-dadb1ffc4d18d7de7f8d.js","module.exports = {\"data\":{\"talkJson\":{\"description\":\"The principle of Propositions as Types links logic to computation. At first sight it appears to be a simple coincidence---almost a pun---but it turns out to be remarkably robust, inspiring the design of theorem provers and programming languages, and continuing to influence the forefronts of computing. Propositions as Types has many names and many origins, and is a notion with depth, breadth, and mystery. Learn why functional programming is (and is not) the universal programming language.\\n\\nPhilip Wadler\\nUNIVERSITY OF EDINBURGH\\n@PhilipWadler\\n\\nPhilip Wadler is Professor of Theoretical Computer Science at the University of Edinburgh. He is an ACM Fellow and a Fellow of the Royal Society of Edinburgh, past chair of ACM SIGPLAN, past holder of a Royal Society-Wolfson Research Merit Fellowship, and a winner of the POPL Most Influential Paper Award. Previously, he worked or studied at Stanford, Xerox Parc, CMU, Oxford, Chalmers, Glasgow, Bell Labs, and Avaya Labs, and visited as a guest professor in Copenhagen, Sydney, and Paris. He has an h-index of 60, with more than 18,000 citations to his work according to Google Scholar. He contributed to the designs of Haskell, Java, and XQuery, and is a co-author of Introduction to Functional Programming (Prentice Hall, 1988), XQuery from the Experts (Addison Wesley, 2004) and Generics and Collections in Java (O'Reilly, 2006). He has delivered invited talks in locations ranging from Aizu to Zurich.\",\"meta\":{\"duration\":\"PT42M43S\"},\"presenter\":{\"name\":null},\"slug\":\"propositions-as-types-by-philip-wadler\",\"source\":{\"id\":\"IOiZatlZtGU\",\"provider\":\"youtube\"},\"tag\":[],\"title\":\"\\\"Propositions as Types\\\" by Philip Wadler\"},\"allTalkJson\":null},\"pathContext\":{\"slug\":\"propositions-as-types-by-philip-wadler\",\"tags\":[]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/talk-propositions-as-types-by-philip-wadler.json\n// module id = 3123\n// module chunks = 47459505488989"],"sourceRoot":""}