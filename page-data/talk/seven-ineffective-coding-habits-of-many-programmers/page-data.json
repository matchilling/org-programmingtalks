{"componentChunkName":"component---src-templates-talk-index-js","path":"/talk/seven-ineffective-coding-habits-of-many-programmers","result":{"data":{"talkJson":{"description":"Habits help you manage the complexity of code. You apply existing skill and knowledge automatically to the detail while focusing on the bigger picture. But because you acquire habits largely by imitation, and rarely question them, how do you know your habits are effective? Many of the habits that programmers have for naming, formatting, commenting and unit testing do not stand up as rational and practical on closer inspection. Kevlin Henney examines seven coding habits that are not as effective as programmers believe, and to suggest alternatives.","meta":{"duration":"PT46M29S"},"presenter":{"name":"Kevlin Henney"},"slug":"seven-ineffective-coding-habits-of-many-programmers","source":{"id":"ZsHMHukIlJY","provider":"youtube"},"tag":["Software Architecture","Software Design"],"title":"Seven Ineffective Coding Habits of Many Programmers"},"allTalkJson":{"edges":[{"node":{"description":"Software gets complicated fast. Most of good architecture and design practise is about trying to slow the rate at which software gets complicated. You can’t stop it, it’s a form of entropy. You can only slow it down and do your level best to stay on top of things.\n\nOne way to manage the mess is to maximise the likelihood that everyone knows what’s going on in the codebase. This requires two things: consistency and replaceability. Consistency implies you can make reasonable assumptions about unfamiliar parts of the application. Replaceability means you can kill code easily and replace it with something better.\n\nDan North argues that code should either be new enough that someone remembers writing it, or well-enough established that everyone knows how it works. It’s code in that awkward middle stage, between brand new and part-of-the-furniture, that gets forgotten about and starts to smell. If code is going to die it should die quickly. If it is going to stick around it should be stable.\n\nIn this talk, Dan describes a model for thinking about the age of code and argues for replaceability as a first class concern. He also discovers that if you optimise for both replaceability and consistency you can end up with something that looks a lot like microservices.","meta":{"duration":"PT37M22S"},"presenter":{"name":"Dan North"},"source":{"id":"4Y0tOi7QWqM","provider":"youtube"},"slug":"software-that-fits-in-your-head","tag":["Agile","GOTO Conference","Mircoservices","Software Architecture"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/4Y0tOi7QWqM/default.jpg","height":90,"width":120}},"title":"Software that Fits in Your Head"}},{"node":{"description":"Everything is changing. Everything is new. Frameworks, platforms and trends are displaced on a weekly basis. Skills are churning.\n\nAnd yet... Beneath this seemingly turbulent flow there is a slow current, strong and steady, changing relatively little over the decades. Concepts with a long history appear in new forms and fads and technologies. Principles are revisited. Ideas once lost to the mainstream are found again.\n\nIn this keynote we revisit the present through the past, looking at the enduring principles that shape programming languages, architecture, development practice and development process, the ideas that cycle round, each time becoming perhaps a little better defined, a little more mature, and look to see what else might be on the horizon.","meta":{"duration":"PT50M23S"},"presenter":{"name":"Kevlin Henney"},"source":{"id":"AbgsfeGvg3E","provider":"youtube"},"slug":"old-is-the-new-new","tag":["GOTO Conference","Keynote","Software Architecture","Languages"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/AbgsfeGvg3E/default.jpg","height":90,"width":120}},"title":"Old Is the New New"}},{"node":{"description":"Rich Hickey, author of Clojure, and designer of Datomic presents a new way to look at database architectures in this talk from JaxConf 2012.","meta":{"duration":"PT1H6M24S"},"presenter":{"name":"Rich Hickey"},"source":{"id":"Cym4TZwTCNU","provider":"youtube"},"slug":"deconstructing-the-database","tag":["Database","JaxConf 2012","Software Architecture"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/Cym4TZwTCNU/default.jpg","height":90,"width":120}},"title":"Deconstructing the Database"}}]}},"pageContext":{"slug":"seven-ineffective-coding-habits-of-many-programmers","tags":["Software Architecture","Software Design"]}}}