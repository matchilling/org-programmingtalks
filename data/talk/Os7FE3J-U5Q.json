{
  "description": "Contemporary compilers are among the most complex of software systems, typically being required to handle sophisticated high-level source languages, generate efficient code for multiple hardware architectures and operating systems, and support source-level debuggers, profilers, and other program development tools. Nanopass frameworks are designed to help manage this complexity. A nanopass compiler is comprised of many single-task passes with formally defined intermediate languages. The nanopass compiler technique evolved from a methodology for teaching a compiler course at Indiana University, into a full-fledged framework, capable of implementing a replacement for the Chez Scheme compiler that runs on par with the original compiler. This talk will discuss the idea of a nanopass compiler and the implementation of a simple language using the framework in Chez Scheme, along with the challenges and opportunities of using these techniques in Clojure.\n\nAndy is a postdoc at the University of Utah, currently working on malware detection in Android Apps, using both Scala and miniKanren to write abstract analyzers in Matt Might's lab. Andy completed his Ph.D. at Indiana University, defending his dissertation, \"A Nanopass Framework for Commercial Compiler Development\", in December 2012 and will be presenting a paper related to this work at this year's International Conference on Functional Programming. This project focused on replacing Chez Scheme's compiler with a nanopass compiler, along with his adviser R. Kent Dybvig. Before returning to graduate school in 2007, Andy worked in industry as a web developer, first for the consulting firms Razorfish and Gotham Broadband, along with some independent consulting work for Viacom, and later worked full time at Teach For America, maintaining both front-end and back-end web applications.",
  "id": "778e79d1-3d68-4c65-812a-ec3b3a883efb",
  "meta": { "duration": "PT40M48S" },
  "presenter": { "name": null },
  "slug": "andy-keep-writing-a-nanopass-compiler",
  "source": { "id": "Os7FE3J-U5Q", "provider": "youtube" },
  "tag": ["clojure"],
  "title": "Andy Keep - Writing a Nanopass Compiler",
  "thumbnails": {
    "default": {
      "url": "https://i.ytimg.com/vi/Os7FE3J-U5Q/default.jpg",
      "width": 120,
      "height": 90
    },
    "medium": {
      "url": "https://i.ytimg.com/vi/Os7FE3J-U5Q/mqdefault.jpg",
      "width": 320,
      "height": 180
    },
    "high": {
      "url": "https://i.ytimg.com/vi/Os7FE3J-U5Q/hqdefault.jpg",
      "width": 480,
      "height": 360
    }
  }
}
