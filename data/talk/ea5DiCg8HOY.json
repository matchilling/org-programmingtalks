{
  "description":
    "Day 1 - Contemporary computer architectures make it possible for slow code to work reasonably well. They also make it difficult to write really fast code that exploits the CPU amenities to their fullest. And the smart money is on fast codeâ€”we're running out of cool things to do with slow code, and the battle will be on doing really interesting and challenging things at the envelope of what the computing fabric endures.\n\nSo how to write quick code, quickly? Turns out it's quite difficult because today's complex architectures defy simple rules to be applied everywhere. It is not uncommon that innocuous high-level artifacts have a surprisingly high impact on the bottom line of an application's run time (and power consumed).\n\nThis talk is an attempt to set forth a few pieces of tactical advice for writing quick code in C++. Applying these is not guaranteed to produce optimal code, but is likely to put it reasonably within the ballpark. \n\nThese tips are based on practical experience but also motivated by the inner workings of modern CPUs.",
  "id": "f469f9a7-07f1-4fd9-b95d-0b30f2b8ba00",
  "meta": { "duration": "PT1H11M37S" },
  "presenter": { "name": null },
  "slug": "writing-quick-code-in-c-quickly",
  "source": { "id": "ea5DiCg8HOY", "provider": "youtube" },
  "tag": ["c++", "goingnative", "goingnative 2013"],
  "title": "Writing Quick Code in C++, Quickly",
  "thumbnails": {
    "default": {
      "url": "https://i.ytimg.com/vi/ea5DiCg8HOY/default.jpg",
      "width": 120,
      "height": 90
    },
    "medium": {
      "url": "https://i.ytimg.com/vi/ea5DiCg8HOY/mqdefault.jpg",
      "width": 320,
      "height": 180
    },
    "high": {
      "url": "https://i.ytimg.com/vi/ea5DiCg8HOY/hqdefault.jpg",
      "width": 480,
      "height": 360
    }
  }
}
