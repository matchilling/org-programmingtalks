webpackJsonp([0xb6bdfebb9119],{2706:function(e,a){e.exports={data:{allTalkJson:{edges:[{node:{description:'This presentation was recorded at GOTO Chicago 2014\nhttp://gotochgo.com\n\nAdrian Cockcroft - Technology Fellow at Battery Ventures and Former Netflix Cloud Architect Pioneer\n\nABSTRACT\nTo deliver software products at high velocity requires four things. First, a culture of innovation that can see and respond to opportunities. Second, the data and analytics to evaluate alternatives. Third, a culture that can make decisions and assign resources quickly. Fourth, agile development and self service deployment. A fine grain loosely coupled architecture scales as the team size grows, a freedom and responsibility culture provides autonomy for innovation and fast decision making, unstructured "Big Data" analytics gets answers quickly, cloud removes the latency of resource allocation, and DevOps removes the coordination latency that slows down deployment. Traditional enterprise architectures are based on monolithic applications and relational databases. Cloud native architectures are based on buiding single function REST-based microservices that support integration across denormalized NoSQL data stores and a wide range of web services. This talk will also discuss strategies, patterns and pathways to perform a gradual migration towards cloud native.\n\nLink to slides: http://gotocon.com/dl/goto-chicago-20...\n\nhttps://twitter.com/gotochgo\nhttps://www.facebook.com/GOTOConference\nhttp://gotocon.com',meta:{duration:"PT1H4M52S"},presenter:{name:null},source:{id:"BeNrVl2_nyI",provider:"youtube"},slug:"speed-and-scale-how-to-get-there-adrian-cockcroft",tag:["Software Engineering (Industry)","Innovation (Quotation Subject)","Database (Software Genre)","DevOps","big data","pathways","adrian cockcroft","GOTO Conference","GOTO Conference","GOTO Conference","Adrian Cockcroft","Speed & Scale"],thumbnails:{default:{url:"https://i.ytimg.com/vi/BeNrVl2_nyI/default.jpg",height:90,width:120}},title:"Speed & Scale: How to get there • Adrian Cockcroft"}},{node:{description:"Meetup: http://www.meetup.com/papers-we-love/events/214400572/\nPaper: http://www.cs.cmu.edu/~crary/819-f09/Hoare69.pdf\nSlides: https://speakerdeck.com/paperswelove/jean-yang-on-an-axiomatic-basis-for-computer-programming\nAudio: http://www.mixcloud.com/paperswelove/jean-yang-on-an-axiomatic-basis-for-computer-programming/\n---------------------------------------------------------------------------------------------\nSponsored by The Ladders (@TheLaddersDev)\n---------------------------------------------------------------------------------------------\n\nDescription\n---------------\nOur lives now run on software. Bugs are becoming not just annoyances for software developers, but sources of potentially catastrophic failures. A careless programmer mistake could leak our social security numbers or crash our cars. While testing provides some assurance, it is difficult to test all possibilities in complex systems--and practically impossible in concurrent systems. For the critical systems in our lives, we should demand mathematical guarantees that the software behaves the way the programmer expected.\n\nA single paper influenced much of the work towards providing these mathematical guarantees. C.A.R. Hoare’s seminal 1969 paper “An Axiomatic Basis for Computer Programming” introduces a method of reasoning about program correctness now known as Hoare logic. In this paper, Hoare provides a technique that 1) allows programmers to express program properties and 2) allows these properties to be automatically checked. These ideas have influenced decades of research in automated reasoning about software correctness.\n\nIn this talk, I will describe the main ideas in Hoare logic, as well as the impact of these ideas. I will talk about my personal experience using Hoare logic to verify memory guarantees in an operating system. I will also discuss takeaway lessons for working programmers.\n\nBio\n----\nJean Yang (@jeanqasaur) is a final-year PhD student at MIT. For her PhD thesis she has created Jeeves, a programming language for automatically enforcing information flow policies for security and privacy. You may be more familiar with one of her other projects, Haskell Ryan Gosling.",meta:{duration:"PT1H4M32S"},presenter:{name:null},source:{id:"GQi-6-d5ooQ",provider:"youtube"},slug:"jean-yang-on-an-axiomatic-basis-for-computer-programming",tag:["Computer Programming (Conference Subject)","Mathematics (Field Of Study)","Software Engineering (Industry)","Program Correctness","Ryan Gosling","Hoare Logic","Type Checking","Computer (Industry)","Programming Language"],thumbnails:{default:{url:"https://i.ytimg.com/vi/GQi-6-d5ooQ/default.jpg",height:90,width:120}},title:"Jean Yang on An Axiomatic Basis for Computer Programming"}},{node:{description:"This presentation was recorded at GOTO Chicago 2015\nhttp://gotochgo.com\n\nCorey Haines - Author, Speaker, Teacher & all around Groovy Guy\n\nABSTRACT\nYou've probably heard about the lambda calculus, building up our computing structures from just the treasured lambda. But how much have you played with it? In this talk, armed only with Vim and the CLI, we'll explore [...]\nDownload slides and read the full abstract here:\nhttp://gotocon.com/chicago-2015/presentation/Fun%20with%20the%20lambda%20calculus\n\nhttps://twitter.com/gotochgo\nhttps://www.facebook.com/GOTOConference\nhttp://gotocon.com",meta:{duration:"PT48M49S"},presenter:{name:null},source:{id:"QPqoFCHpLF4",provider:"youtube"},slug:"fun-with-the-lambda-calculus-corey-haines",tag:["Corey Haines","GOTO Conference","GOTO Conference","GOTO Conference","Lambda","Programming Language","Software Engineering (Industry)","Software Development (Industry)","Anonymous Function"],thumbnails:{default:{url:"https://i.ytimg.com/vi/QPqoFCHpLF4/default.jpg",height:90,width:120}},title:"Fun with the Lambda Calculus • Corey Haines"}},{node:{description:'Learn from John Papa\'s talk "10 AngularJS Patterns" from Code on the Beach 2014 at One Ocean Resort & Spa, Atlantic Beach, Florida. Sunday, August 10, 2014. www.codeonthebeach.com\n\nAbstract:\n"Once you get beyond the AngularJS basics there are many decisions to be made on how to build robust and maintainable apps. Come learn how to build AngularJS apps that manage multiple screens, structure your application code, maintain clean code with popular patterns, implement CRUD, perform robust HTML validation, use local storage, pass unit tests, and use a automated build tasks. This session explores solutions to several of the common challenges that AngularJS developers face while building business applications."',meta:{duration:"PT1H1M27S"},presenter:{name:null},source:{id:"UlvCbnKAH3g",provider:"youtube"},slug:"john-papa-10-angularjs-patterns-code-on-the-beach-2014",tag:["John Papa","AngularJS (Software)","Beach","JavaScript","Single Page Apps","Patterns","Code on the Beach","conference","Software Engineering (Industry)","Software Development (Industry)","Software Design Pattern (Field Of Study)","Programming Language","programming","Jacksonville (City/Town/Village)","Florida (US State)"],thumbnails:{default:{url:"https://i.ytimg.com/vi/UlvCbnKAH3g/default.jpg",height:90,width:120}},title:"John Papa - 10 AngularJS Patterns - Code on the Beach 2014"}}]}},pathContext:{slug:"software-engineering-industry",tag:"Software Engineering (Industry)"}}}});
//# sourceMappingURL=path---tag-software-engineering-industry-aed69a59064a842cbe00.js.map