webpackJsonp([28582360424642],{2089:function(e,o){e.exports={data:{allTalkJson:{edges:[{node:{description:"Sameer Ajmani \n\nConcurrency is the key to designing high performance network services. This talk expands on last year's popular Go Concurrency Patterns talk to dive deeper into Go's concurrency primitives, and see how tricky concurrency problems can be solved gracefully with simple Go code.\n\nFor all I/O 2013 sessions, go to https://developers.google.com/live",meta:{duration:"PT34M11S"},presenter:{name:null},source:{id:"QDDwwePbDtw",provider:"youtube"},slug:"google-io-2013-advanced-go-concurrency-patterns",tag:["gdl","i-o","cloud"],thumbnails:{default:{url:"https://i.ytimg.com/vi/QDDwwePbDtw/default.jpg",height:90,width:120}},title:"Google I/O 2013 - Advanced Go Concurrency Patterns"}},{node:{description:"Rob Pike\n\nConcurrency is the key to designing high performance network services. Go's concurrency primitives (goroutines and channels) provide a simple and efficient means of expressing concurrent execution. In this talk we see how tricky concurrency problems can be solved gracefully with simple Go code.\n\nFor all I/O 2012 sessions, go to https://developers.google.com/io/",meta:{duration:"PT51M27S"},presenter:{name:null},source:{id:"f6kdp27TYZs",provider:"youtube"},slug:"google-io-2012-go-concurrency-patterns",tag:["gdl","cloud"],thumbnails:{default:{url:"https://i.ytimg.com/vi/f6kdp27TYZs/default.jpg",height:90,width:120}},title:"Google I/O 2012 - Go Concurrency Patterns"}}]}},pathContext:{slug:"cloud",tag:"cloud"}}}});
//# sourceMappingURL=path---tag-cloud-e001e2405e16fe92e8eb.js.map