{"version":3,"sources":["webpack:///path---tag-jvm-119f85f40d7f4bb7353e.js","webpack:///./.cache/json/tag-jvm.json"],"names":["webpackJsonp","2432","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,uRAAAC,MAA6SC,SAAA,aAAuBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,+BAAAC,KAAA,4CAAAC,YAAwGC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,oCAA6ChB,MAAQC,YAAA,8rBAAAC,MAAotBC,SAAA,WAAqBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,4EAAAC,KAAA,0FAAAC,YAAmMC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,kFAA2FhB,MAAQC,YAAA,8RAAAC,MAAoTC,SAAA,WAAqBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,oCAAAC,KAAA,4CAAAC,YAA6GC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,yCAAkDhB,MAAQC,YAAA,s9BAAAC,MAA8+BC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,kDAAAC,KAAA,4DAAAC,YAA2IC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,yDAAiEC,aAAgBR,KAAA,MAAAC,IAAA","file":"path---tag-jvm-119f85f40d7f4bb7353e.js","sourcesContent":["webpackJsonp([211589986059970],{\n\n/***/ 2432:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"JVMLS 2015 - VM Design Choices - Cliff Click\\n\\nThe JVM Language Summit is an open technical collaboration among language designers, compiler writers, tool builders, runtime engineers, and VM architects. In 2015, it convened at Oracle's Santa Clara, CA campus on August 10-12.\",\"meta\":{\"duration\":\"PT1H1M39S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"BdjcPgIUbnA\",\"provider\":\"youtube\"},\"slug\":\"jvmls-2015-vm-design-choices\",\"tag\":[\"Java\",\"JVM\",\"JVMLS\",\"JVM Language Summit\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/BdjcPgIUbnA/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"JVMLS 2015 - VM Design Choices\"}},{\"node\":{\"description\":\"Ever since Java's inception, in 1995, people have been compiling languages that aren't Java to bytecode and deploying them on the JVM. Lately, we are seeing an explosion in JVM languages. This is partly, but not only, because of Java 7, the first JVM to ship with invokedynamic, which is a quantum leap in polyglot runtime implementation. This session explains why emerging language implementations are becoming more common and more feasible to implement on the JVM with satisfactory performance. It tells you how we got there and walks through the technology already in place (such as invokedynamic) and that which is in progress. The future for the JVM is bright indeed. Filmed at JAX London 2013.\",\"meta\":{\"duration\":\"PT51M4S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"OKJgMwTLmEY\",\"provider\":\"youtube\"},\"slug\":\"marcus-lagergren-the-java-virtual-machine-is-over-the-polyglot-vm-is-here\",\"tag\":[\"JVM\",\"Marcus Lagergreen\",\"Java\",\"invokedynamic\",\"polyglot\",\"bytecode\",\"JAX London 2013\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/OKJgMwTLmEY/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Marcus Lagergren: The Java Virtual Machine is Over - The Polyglot VM is here\"}},{\"node\":{\"description\":\"JVMLS 2015 - Multi-Language Runtime - Mark Stoodley\\n\\nThe JVM Language Summit is an open technical collaboration among language designers, compiler writers, tool builders, runtime engineers, and VM architects. In 2015, it convened at Oracle's Santa Clara, CA campus on August 10-12.\",\"meta\":{\"duration\":\"PT47M8S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"kOnyJurioyw\",\"provider\":\"youtube\"},\"slug\":\"jvmls-2015-multi-language-runtime\",\"tag\":[\"Java\",\"JVM\",\"JVMLS\",\"JVM Language Summit\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/kOnyJurioyw/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"JVMLS 2015 - Multi-Language Runtime\"}},{\"node\":{\"description\":\"You've written applications for the JVM, using various frameworks and maybe even various languages. You understand how to rig up the CLASSPATH, get .class files to load, compile source, and set up an IDE. But you've always wanted a better understanding of the plumbing underneath. How does JVM bytecode work? How does the JVM itself work? This presentation walks you through JVM and JVM bytecode basics, with lots of examples of how to bend the JVM to your whims.\\n\\nCopyright © 2013 Oracle and/or its affiliates. Oracle® is a registered trademark of Oracle and/or its affiliates. All rights reserved. Oracle disclaims any warranties or representations as to the accuracy or completeness of this recording, demonstration, and/or written materials (the \\\"Materials\\\"). The Materials are provided \\\"as is\\\" without any warranty of any kind, either express or implied, including without limitation warranties of merchantability, fitness for a particular purpose, and non-infringement.\",\"meta\":{\"duration\":\"PT50M34S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"rPyqB1l4gko\",\"provider\":\"youtube\"},\"slug\":\"jvm-bytecode-for-dummies-and-the-rest-of-us-too\",\"tag\":[\"Java\",\"JavaOne\",\"2012\",\"JVM\",\"bytecode\",\"IDE\",\"CLASSPATH\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/rPyqB1l4gko/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"JVM Bytecode for Dummies (and the Rest of Us Too)\"}}]}},\"pathContext\":{\"slug\":\"jvm\",\"tag\":\"JVM\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-jvm-119f85f40d7f4bb7353e.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"JVMLS 2015 - VM Design Choices - Cliff Click\\n\\nThe JVM Language Summit is an open technical collaboration among language designers, compiler writers, tool builders, runtime engineers, and VM architects. In 2015, it convened at Oracle's Santa Clara, CA campus on August 10-12.\",\"meta\":{\"duration\":\"PT1H1M39S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"BdjcPgIUbnA\",\"provider\":\"youtube\"},\"slug\":\"jvmls-2015-vm-design-choices\",\"tag\":[\"Java\",\"JVM\",\"JVMLS\",\"JVM Language Summit\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/BdjcPgIUbnA/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"JVMLS 2015 - VM Design Choices\"}},{\"node\":{\"description\":\"Ever since Java's inception, in 1995, people have been compiling languages that aren't Java to bytecode and deploying them on the JVM. Lately, we are seeing an explosion in JVM languages. This is partly, but not only, because of Java 7, the first JVM to ship with invokedynamic, which is a quantum leap in polyglot runtime implementation. This session explains why emerging language implementations are becoming more common and more feasible to implement on the JVM with satisfactory performance. It tells you how we got there and walks through the technology already in place (such as invokedynamic) and that which is in progress. The future for the JVM is bright indeed. Filmed at JAX London 2013.\",\"meta\":{\"duration\":\"PT51M4S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"OKJgMwTLmEY\",\"provider\":\"youtube\"},\"slug\":\"marcus-lagergren-the-java-virtual-machine-is-over-the-polyglot-vm-is-here\",\"tag\":[\"JVM\",\"Marcus Lagergreen\",\"Java\",\"invokedynamic\",\"polyglot\",\"bytecode\",\"JAX London 2013\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/OKJgMwTLmEY/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Marcus Lagergren: The Java Virtual Machine is Over - The Polyglot VM is here\"}},{\"node\":{\"description\":\"JVMLS 2015 - Multi-Language Runtime - Mark Stoodley\\n\\nThe JVM Language Summit is an open technical collaboration among language designers, compiler writers, tool builders, runtime engineers, and VM architects. In 2015, it convened at Oracle's Santa Clara, CA campus on August 10-12.\",\"meta\":{\"duration\":\"PT47M8S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"kOnyJurioyw\",\"provider\":\"youtube\"},\"slug\":\"jvmls-2015-multi-language-runtime\",\"tag\":[\"Java\",\"JVM\",\"JVMLS\",\"JVM Language Summit\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/kOnyJurioyw/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"JVMLS 2015 - Multi-Language Runtime\"}},{\"node\":{\"description\":\"You've written applications for the JVM, using various frameworks and maybe even various languages. You understand how to rig up the CLASSPATH, get .class files to load, compile source, and set up an IDE. But you've always wanted a better understanding of the plumbing underneath. How does JVM bytecode work? How does the JVM itself work? This presentation walks you through JVM and JVM bytecode basics, with lots of examples of how to bend the JVM to your whims.\\n\\nCopyright © 2013 Oracle and/or its affiliates. Oracle® is a registered trademark of Oracle and/or its affiliates. All rights reserved. Oracle disclaims any warranties or representations as to the accuracy or completeness of this recording, demonstration, and/or written materials (the \\\"Materials\\\"). The Materials are provided \\\"as is\\\" without any warranty of any kind, either express or implied, including without limitation warranties of merchantability, fitness for a particular purpose, and non-infringement.\",\"meta\":{\"duration\":\"PT50M34S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"rPyqB1l4gko\",\"provider\":\"youtube\"},\"slug\":\"jvm-bytecode-for-dummies-and-the-rest-of-us-too\",\"tag\":[\"Java\",\"JavaOne\",\"2012\",\"JVM\",\"bytecode\",\"IDE\",\"CLASSPATH\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/rPyqB1l4gko/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"JVM Bytecode for Dummies (and the Rest of Us Too)\"}}]}},\"pathContext\":{\"slug\":\"jvm\",\"tag\":\"JVM\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-jvm.json\n// module id = 2432\n// module chunks = 211589986059970"],"sourceRoot":""}