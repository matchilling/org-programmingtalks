{"version":3,"sources":["webpack:///path---talk-monads-and-gonads-d44873952a8b59d9b731.js","webpack:///./.cache/json/talk-monads-and-gonads.json"],"names":["webpackJsonp","3092","module","exports","data","talkJson","description","meta","duration","presenter","name","slug","source","id","provider","tag","title","allTalkJson","edges","node","thumbnails","default","url","height","width","pathContext","tags"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,UAAYC,YAAA,2jBAAAC,MAAilBC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,KAAA,oBAAAC,QAAsCC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,qEAAAC,MAAA,qBAAyGC,aAAgBC,QAAUC,MAAQb,YAAA,wcAAAC,MAA8dC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,oDAAAI,KAAA,uKAAAK,YAAwPC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,uDAAgEG,MAAQb,YAAA,sqBAAAC,MAA4rBC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,gCAAAI,KAAA,gHAAAK,YAA6KC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,qCAA8CG,MAAQb,YAAA,szDAAAC,MAA40DC,SAAA,aAAuBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,oCAAAI,KAAA,qFAAAK,YAAsJC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,2CAAmDS,aAAgBd,KAAA,oBAAAe,MAAA","file":"path---talk-monads-and-gonads-d44873952a8b59d9b731.js","sourcesContent":["webpackJsonp([115876144828655],{\n\n/***/ 3092:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"talkJson\":{\"description\":\"Google Tech Talk\\nJanuary 15, 2013\\n(more info below)\\n\\nPresented by Douglas Crockford\\n\\nABSTRACT\\n\\nThe wonders of monads are finally revealed without resorting to Category Theory or Haskell. It turns out that monads are trivially expressed in JavaScript, and are one of the key enablers of Ajax. Monads are amazing. They are simple things, almost trivially implemented, with enormous power to manage complexity. But understanding them is surprisingly difficult, and most people, once they have that ah-ha moment, seem to lose the ability to explain them to others.\",\"meta\":{\"duration\":\"PT49M48S\"},\"presenter\":{\"name\":null},\"slug\":\"monads-and-gonads\",\"source\":{\"id\":\"b0EF0VTs9Dc\",\"provider\":\"youtube\"},\"tag\":[\"monads\",\"Google Tech Talk\",\"Douglas Crockford\",\"Javascript\",\"Ajax\"],\"title\":\"Monads and Gonads\"},\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"For more videos & goodies join:  http://HiRez.io\\n\\nThis is an overview of the steps required in order to build Javascript apps and get them ready for deployment. \\nYou'll learn about Grunt, and how it helps us to validate, minimize and package our code.\\n\\nThis Lecture was filmed during a XBSoftware meetup in Minsk, Belarus, thanks to Wix I was able to fly there and meet these awesome people.\\n\\nSlides: http://goo.gl/j1pYOt\\n\\nJoin: http://HiRez.io\",\"meta\":{\"duration\":\"PT40M51S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"BpMKxF-HUqA\",\"provider\":\"youtube\"},\"slug\":\"build-production-ready-javascript-apps-with-grunt\",\"tag\":[\"Javascript\",\"Build Javascript\",\"Production Javascript\",\"Grunt\",\"Gruntjs\",\"Yeoman\",\"build script\",\"Shai Reznik\",\"HiRez.io\",\"hirez\",\"minify\",\"uglify\",\"concat\",\"funny\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/BpMKxF-HUqA/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Build Production Ready Javascript Apps With Grunt\"}},{\"node\":{\"description\":\"Check out our upcoming conferences at http://gotocon.com\\nSubscribe to GOTO Conference's YouTube Channel at http://www.youtube.com/user/GOTOConferences?sub_confirmation=1\\n\\nDouglas Crockford - JSON Creator & Yahoo! JS Architect\\n\\nABSTRACT\\nMuch of programming language design is dictated by fashion. As a consequence, opinions about programming languages tend to be strong, shallow, and deeply emotional. The best languages are brilliant and sadly unfashionable. But we love our stylish, over-rated syntax, and this talk presents an amazing parsing technique that helps achieve it.\\n\\nhttps://twitter.com/gotocon\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT49M40S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"Nlqv6NtBXcA\",\"provider\":\"youtube\"},\"slug\":\"syntaxation-douglas-crockford\",\"tag\":[\"Programming Language\",\"Syntaxation\",\"Douglas Crockford\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/Nlqv6NtBXcA/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Syntaxation â€¢ Douglas Crockford\"}},{\"node\":{\"description\":\"Cross posted from msdn's channel 9.\\n\\nFunctional programming is increasing in popularity these days given the inherent problems with shared mutable state that is rife in the imperative world. As we march on to a world of multi and many-core chipsets, software engineering must evolve to better equip software engineers with the tools to exploit the vast power of multiple core processors as it won't come for free as it did in the recent past which was predictably based on Moore's law.\\n\\nOf course, learning new ways to think about programming semantics and code patterns are not always straight forward. For example, most imperative programmers (which include most of us who build software for a living...) are somewhat perplexed by the notion of functions as first class data structures that can be combined to create powerful and composable systems. Languages like Haskell are pure functional languages and require programmers to think in a different way, often in a precise mathematical fashion where composing and chaining functions is \\\"the Way\\\".\\n\\nDr. Brian Beckman, a Channel 9 celebrity, astrophysicist and senior software engineer thought it would be a very good idea to address the complexity of monads in an easy to understand way: a technical conversation at the whiteboard with yours truly for Channel 9.\\n\\nThis video interview is the result of Brian's idea that he can in fact remove the fear of monads from anybody who pays attention to his explanation. Of course, you can't just cover monads in a vacuum (category theory is not really addressed here) so the context is functional programming (Brian covers functions and composable functional structures (function chains) and of course monoids and then monads).\\n\\nTune in. There's a lot to learn here and only Brian can make monads easy to understand for the rest of us!\",\"meta\":{\"duration\":\"PT1H7M11S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"ZhuHCtR3xq8\",\"provider\":\"youtube\"},\"slug\":\"brian-beckman-dont-fear-the-monad\",\"tag\":[\"haskell\",\"monads\",\"programming\",\"brian beckman\",\"functional programming\",\"Haskell\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/ZhuHCtR3xq8/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Brian Beckman: Don't fear the Monad\"}}]}},\"pathContext\":{\"slug\":\"monads-and-gonads\",\"tags\":[\"monads\",\"Google Tech Talk\",\"Douglas Crockford\",\"Javascript\",\"Ajax\"]}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---talk-monads-and-gonads-d44873952a8b59d9b731.js","module.exports = {\"data\":{\"talkJson\":{\"description\":\"Google Tech Talk\\nJanuary 15, 2013\\n(more info below)\\n\\nPresented by Douglas Crockford\\n\\nABSTRACT\\n\\nThe wonders of monads are finally revealed without resorting to Category Theory or Haskell. It turns out that monads are trivially expressed in JavaScript, and are one of the key enablers of Ajax. Monads are amazing. They are simple things, almost trivially implemented, with enormous power to manage complexity. But understanding them is surprisingly difficult, and most people, once they have that ah-ha moment, seem to lose the ability to explain them to others.\",\"meta\":{\"duration\":\"PT49M48S\"},\"presenter\":{\"name\":null},\"slug\":\"monads-and-gonads\",\"source\":{\"id\":\"b0EF0VTs9Dc\",\"provider\":\"youtube\"},\"tag\":[\"monads\",\"Google Tech Talk\",\"Douglas Crockford\",\"Javascript\",\"Ajax\"],\"title\":\"Monads and Gonads\"},\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"For more videos & goodies join:  http://HiRez.io\\n\\nThis is an overview of the steps required in order to build Javascript apps and get them ready for deployment. \\nYou'll learn about Grunt, and how it helps us to validate, minimize and package our code.\\n\\nThis Lecture was filmed during a XBSoftware meetup in Minsk, Belarus, thanks to Wix I was able to fly there and meet these awesome people.\\n\\nSlides: http://goo.gl/j1pYOt\\n\\nJoin: http://HiRez.io\",\"meta\":{\"duration\":\"PT40M51S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"BpMKxF-HUqA\",\"provider\":\"youtube\"},\"slug\":\"build-production-ready-javascript-apps-with-grunt\",\"tag\":[\"Javascript\",\"Build Javascript\",\"Production Javascript\",\"Grunt\",\"Gruntjs\",\"Yeoman\",\"build script\",\"Shai Reznik\",\"HiRez.io\",\"hirez\",\"minify\",\"uglify\",\"concat\",\"funny\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/BpMKxF-HUqA/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Build Production Ready Javascript Apps With Grunt\"}},{\"node\":{\"description\":\"Check out our upcoming conferences at http://gotocon.com\\nSubscribe to GOTO Conference's YouTube Channel at http://www.youtube.com/user/GOTOConferences?sub_confirmation=1\\n\\nDouglas Crockford - JSON Creator & Yahoo! JS Architect\\n\\nABSTRACT\\nMuch of programming language design is dictated by fashion. As a consequence, opinions about programming languages tend to be strong, shallow, and deeply emotional. The best languages are brilliant and sadly unfashionable. But we love our stylish, over-rated syntax, and this talk presents an amazing parsing technique that helps achieve it.\\n\\nhttps://twitter.com/gotocon\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT49M40S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"Nlqv6NtBXcA\",\"provider\":\"youtube\"},\"slug\":\"syntaxation-douglas-crockford\",\"tag\":[\"Programming Language\",\"Syntaxation\",\"Douglas Crockford\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/Nlqv6NtBXcA/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Syntaxation â€¢ Douglas Crockford\"}},{\"node\":{\"description\":\"Cross posted from msdn's channel 9.\\n\\nFunctional programming is increasing in popularity these days given the inherent problems with shared mutable state that is rife in the imperative world. As we march on to a world of multi and many-core chipsets, software engineering must evolve to better equip software engineers with the tools to exploit the vast power of multiple core processors as it won't come for free as it did in the recent past which was predictably based on Moore's law.\\n\\nOf course, learning new ways to think about programming semantics and code patterns are not always straight forward. For example, most imperative programmers (which include most of us who build software for a living...) are somewhat perplexed by the notion of functions as first class data structures that can be combined to create powerful and composable systems. Languages like Haskell are pure functional languages and require programmers to think in a different way, often in a precise mathematical fashion where composing and chaining functions is \\\"the Way\\\".\\n\\nDr. Brian Beckman, a Channel 9 celebrity, astrophysicist and senior software engineer thought it would be a very good idea to address the complexity of monads in an easy to understand way: a technical conversation at the whiteboard with yours truly for Channel 9.\\n\\nThis video interview is the result of Brian's idea that he can in fact remove the fear of monads from anybody who pays attention to his explanation. Of course, you can't just cover monads in a vacuum (category theory is not really addressed here) so the context is functional programming (Brian covers functions and composable functional structures (function chains) and of course monoids and then monads).\\n\\nTune in. There's a lot to learn here and only Brian can make monads easy to understand for the rest of us!\",\"meta\":{\"duration\":\"PT1H7M11S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"ZhuHCtR3xq8\",\"provider\":\"youtube\"},\"slug\":\"brian-beckman-dont-fear-the-monad\",\"tag\":[\"haskell\",\"monads\",\"programming\",\"brian beckman\",\"functional programming\",\"Haskell\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/ZhuHCtR3xq8/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Brian Beckman: Don't fear the Monad\"}}]}},\"pathContext\":{\"slug\":\"monads-and-gonads\",\"tags\":[\"monads\",\"Google Tech Talk\",\"Douglas Crockford\",\"Javascript\",\"Ajax\"]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/talk-monads-and-gonads.json\n// module id = 3092\n// module chunks = 115876144828655"],"sourceRoot":""}