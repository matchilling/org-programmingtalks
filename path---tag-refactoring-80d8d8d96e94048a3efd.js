webpackJsonp([0xf0dfdf827dca],{2660:function(e,t){e.exports={data:{allTalkJson:{edges:[{node:{description:"Most developers know enough about refactoring to write code that's pretty good. They create short methods, and classes with one responsibility. They're also familiar with a good handful of refactorings, and the code smells that motivate them.\n\nThis talk is about the next level of knowledge: the things advanced developers know that let them turn good code into great. Code that's easy to read and a breeze to change.\n\nThese topics will be covered solely by LIVE CODING; no slides. We'll boldly refactor right on stage, and pray the tests stay green. You might even learn some vim tricks as well as an expert user shows you his workflow.\n\nTopics include:\n\nThe Open-Closed Principle The types of coupling, and their dangers Why composition is so damn great A powerful refactoring that Kent Beck refers to as \"deep deep magic\" How to destroy conditionals with a NullObject The beauty of the Decorator pattern Testing smells, including Mystery Guest and stubbing the system under test The stuff from the last halves of Refactoring and Clean Code that you never quite got to.",meta:{duration:"PT44M19S"},presenter:{name:"Ben Orenstein"},source:{id:"DC-pQPq0acs",provider:"youtube"},slug:"refactoring-from-good-to-great",tag:["Aloha Ruby 2012","Refactoring","Ruby","Hawaii"],thumbnails:{default:{url:"https://i.ytimg.com/vi/DC-pQPq0acs/default.jpg",height:90,width:120}},title:"Refactoring from Good to Great"}},{node:{description:"Over the last decade or so, Refactoring has become a widely used technique to keep a high internal quality for a codebase. However most teams don't make enough use of refactoring because they aren't aware of the various workflows in which you can use it. In this keynote talk from OOP 2014 in Munich, Martin Fowler explores some of these workflows: such as Litter-Pickup Refactoring, Comprehension Refactoring, and Preparatory Refactoring. Martin also reminds people why common justifications for refactoring will sabotage your best efforts. (This talk also has a treatment as an infodeck.)",meta:{duration:"PT27M5S"},presenter:{name:"Martin Fowler"},source:{id:"vqEg37e4Mkw",provider:"youtube"},slug:"-workflows-of-refactoring",tag:["OOP2014","Munich","Refactoring"],thumbnails:{default:{url:"https://i.ytimg.com/vi/vqEg37e4Mkw/default.jpg",height:90,width:120}},title:"Workflows of Refactoring"}}]}},pathContext:{slug:"refactoring",tag:"Refactoring"}}}});
//# sourceMappingURL=path---tag-refactoring-80d8d8d96e94048a3efd.js.map