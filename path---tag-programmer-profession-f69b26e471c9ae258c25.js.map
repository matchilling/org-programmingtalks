{"version":3,"sources":["webpack:///path---tag-programmer-profession-f69b26e471c9ae258c25.js","webpack:///./.cache/json/tag-programmer-profession.json"],"names":["webpackJsonp","2605","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,gxBAAAC,MAAsyBC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,kEAAAC,KAAA,yJAAAC,YAAwPC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,yEAAkFhB,MAAQC,YAAA,glCAAAC,MAAwmCC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,yCAAAC,KAAA,4MAAAC,YAAkRC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,8CAAuDhB,MAAQC,YAAA,6EAAAC,MAAmGC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,wEAAAC,KAAA,kMAAAC,YAAuSC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,mFAA2FC,aAAgBR,KAAA,wBAAAC,IAAA","file":"path---tag-programmer-profession-f69b26e471c9ae258c25.js","sourcesContent":["webpackJsonp([279935644007170],{\n\n/***/ 2605:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"The time has come to think concurrently. Traditional software concurrency management leads to non-deterministic race conditions and deadlocks that are hard to reproduce and debug, leading to unreliable software. That means it's time to introduce math. Tony Hoare's paradigm of communicating sequential processes, or CSP, is not only a robust way to manage concurrency, but it's fun too! Join us to learn more about how CSP in the Go programming language allows us to reason more clearly about many things happening at once.\\n\\nAbout Eric:\\n\\nEric Shull is a software consultant and developer at Atomic Object. He enjoys working in Go and ClojureScript, writing, sketchnoting, doing math, creating data visualizations, making experimental programming languages, and much, much more.\",\"meta\":{\"duration\":\"PT43M22S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"3gXWA6WEvOM\",\"provider\":\"youtube\"},\"slug\":\"eric-shull-communicating-sequential-processes-september-22-2015\",\"tag\":[\"Communicating Sequential Processes (Programming Language)\",\"Eric Shull\",\"Atomic Object\",\"Programming Language\",\"Programmer (Profession)\",\"Software GR\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/3gXWA6WEvOM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Eric Shull: Communicating Sequential Processes (September 22, 2015)\"}},{\"node\":{\"description\":\"This presentation was recorded at GOTO Chicago 2014\\nhttp://gotochgo.com\\n\\nDan North - Agile Troublemaker, Developer, Originator of BDD\\n\\nABSTRACT\\nWithout rigorous care and attention software quickly becomes messy and unmanageable. Even with the best intentions entropy and complexity are a fact of life in growing applications. As in many other contexts it is easier to tackle the symptoms than the cause. Systems Thinking calls this behaviour \\\"Shifting the Burden\\\" and it is more widespread than you might think. From your IDE to your automated build, from DDD’s ACLs to TDD and other TLAs, from backlogs to burn-ups, we are surrounded by props for coping with complexity. As appealing as these are, they also make us less likely to address the underlying problem of complexity itself. Dan believes you can learn to recognise these coping mechanisms for what they are, and intends to set you on the path to simplicating your programming life. \\n\\nLink to slides: http://gotocon.com/dl/goto-chicago-20...\\n\\nhttps://twitter.com/gotochgo\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT55M31S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"XqgwHXsQA1g\",\"provider\":\"youtube\"},\"slug\":\"kicking-the-complexity-habit-dan-north\",\"tag\":[\"Software As A Service (Industry)\",\"Application Software (Software Genre)\",\"Programming Language\",\"dan north\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\",\"Programmer (Profession)\",\"complexity\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/XqgwHXsQA1g/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Kicking the Complexity Habit • Dan North\"}},{\"node\":{\"description\":\"Curry On Prague, July 7th 2015\\nhttp://curry-on.org\\nhttp://2015.ecoop.org\",\"meta\":{\"duration\":\"PT58M24S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"oYk8CKH7OhE\",\"provider\":\"youtube\"},\"slug\":\"evan-czaplicki-lets-be-mainstream-user-focused-design-in-elm-curry-on\",\"tag\":[\"Programming Language\",\"Programmer (Profession)\",\"Conference\",\"Curry On\",\"Prague (City/Town/Village)\",\"Elm Programming Language\",\"Front-End\",\"Functional Reactive Programming\",\"Language design\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/oYk8CKH7OhE/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Evan Czaplicki - Let's be mainstream! User focused design in Elm - Curry On\"}}]}},\"pathContext\":{\"slug\":\"programmer-profession\",\"tag\":\"Programmer (Profession)\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-programmer-profession-f69b26e471c9ae258c25.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"The time has come to think concurrently. Traditional software concurrency management leads to non-deterministic race conditions and deadlocks that are hard to reproduce and debug, leading to unreliable software. That means it's time to introduce math. Tony Hoare's paradigm of communicating sequential processes, or CSP, is not only a robust way to manage concurrency, but it's fun too! Join us to learn more about how CSP in the Go programming language allows us to reason more clearly about many things happening at once.\\n\\nAbout Eric:\\n\\nEric Shull is a software consultant and developer at Atomic Object. He enjoys working in Go and ClojureScript, writing, sketchnoting, doing math, creating data visualizations, making experimental programming languages, and much, much more.\",\"meta\":{\"duration\":\"PT43M22S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"3gXWA6WEvOM\",\"provider\":\"youtube\"},\"slug\":\"eric-shull-communicating-sequential-processes-september-22-2015\",\"tag\":[\"Communicating Sequential Processes (Programming Language)\",\"Eric Shull\",\"Atomic Object\",\"Programming Language\",\"Programmer (Profession)\",\"Software GR\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/3gXWA6WEvOM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Eric Shull: Communicating Sequential Processes (September 22, 2015)\"}},{\"node\":{\"description\":\"This presentation was recorded at GOTO Chicago 2014\\nhttp://gotochgo.com\\n\\nDan North - Agile Troublemaker, Developer, Originator of BDD\\n\\nABSTRACT\\nWithout rigorous care and attention software quickly becomes messy and unmanageable. Even with the best intentions entropy and complexity are a fact of life in growing applications. As in many other contexts it is easier to tackle the symptoms than the cause. Systems Thinking calls this behaviour \\\"Shifting the Burden\\\" and it is more widespread than you might think. From your IDE to your automated build, from DDD’s ACLs to TDD and other TLAs, from backlogs to burn-ups, we are surrounded by props for coping with complexity. As appealing as these are, they also make us less likely to address the underlying problem of complexity itself. Dan believes you can learn to recognise these coping mechanisms for what they are, and intends to set you on the path to simplicating your programming life. \\n\\nLink to slides: http://gotocon.com/dl/goto-chicago-20...\\n\\nhttps://twitter.com/gotochgo\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT55M31S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"XqgwHXsQA1g\",\"provider\":\"youtube\"},\"slug\":\"kicking-the-complexity-habit-dan-north\",\"tag\":[\"Software As A Service (Industry)\",\"Application Software (Software Genre)\",\"Programming Language\",\"dan north\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\",\"Programmer (Profession)\",\"complexity\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/XqgwHXsQA1g/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Kicking the Complexity Habit • Dan North\"}},{\"node\":{\"description\":\"Curry On Prague, July 7th 2015\\nhttp://curry-on.org\\nhttp://2015.ecoop.org\",\"meta\":{\"duration\":\"PT58M24S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"oYk8CKH7OhE\",\"provider\":\"youtube\"},\"slug\":\"evan-czaplicki-lets-be-mainstream-user-focused-design-in-elm-curry-on\",\"tag\":[\"Programming Language\",\"Programmer (Profession)\",\"Conference\",\"Curry On\",\"Prague (City/Town/Village)\",\"Elm Programming Language\",\"Front-End\",\"Functional Reactive Programming\",\"Language design\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/oYk8CKH7OhE/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Evan Czaplicki - Let's be mainstream! User focused design in Elm - Curry On\"}}]}},\"pathContext\":{\"slug\":\"programmer-profession\",\"tag\":\"Programmer (Profession)\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-programmer-profession.json\n// module id = 2605\n// module chunks = 279935644007170"],"sourceRoot":""}