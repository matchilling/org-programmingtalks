{"version":3,"sources":["webpack:///path---talk-andrew-odlyzko-turing-and-the-riemann-zeta-function-1a967b23465085526fdb.js","webpack:///./.cache/json/talk-andrew-odlyzko-turing-and-the-riemann-zeta-function.json"],"names":["webpackJsonp","2875","module","exports","data","talkJson","description","meta","duration","presenter","name","slug","source","id","provider","tag","title","allTalkJson","edges","node","thumbnails","default","url","height","width","pathContext","tags"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,UAAYC,YAAA,4RAAAC,MAAmTC,SAAA,aAAuBC,WAAcC,KAAA,MAAYC,KAAA,sDAAAC,QAAwEC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,kRAAAC,MAAA,wDAAyVC,aAAgBC,QAAUC,MAAQb,YAAA,6dAAAC,MAAmfC,SAAA,aAAuBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,qCAAAI,KAAA,8IAAAK,YAAgNC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,0CAAmDG,MAAQb,YAAA,muBAAAC,MAAyvBC,SAAA,cAAwBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,qCAAAI,KAAA,uEAAAK,YAAyIC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,yCAAkDG,MAAQb,YAAA,gkBAAAC,MAAslBC,SAAA,WAAqBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,+BAAAI,KAAA,0NAAAK,YAAsRC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,kCAA2CG,MAAQb,YAAA,kjBAAAC,MAAwkBC,SAAA,cAAwBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,2BAAAI,KAAA,+LAAAK,YAAuPC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,8BAAuCG,MAAQb,YAAA,sEAAAC,MAA4FC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,gDAAAI,KAAA,wEAAAK,YAAqJC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,sDAA+DG,MAAQb,YAAA,+tCAAAC,MAAqvCC,SAAA,cAAwBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,oEAAAI,KAAA,8IAAAK,YAA+OC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,uEAAgFG,MAAQb,YAAA,qUAAAC,MAA4VC,SAAA,aAAuBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,gDAAAI,KAAA,0GAAAK,YAAuLC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,sDAA8DS,aAAgBd,KAAA,sDAAAe,MAAA","file":"path---talk-andrew-odlyzko-turing-and-the-riemann-zeta-function-1a967b23465085526fdb.js","sourcesContent":["webpackJsonp([216995489755096],{\n\n/***/ 2875:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"talkJson\":{\"description\":\"Andrew Odlyzko, Professor of Mathematics at the University of Minnesota, discusses \\\"Turing and the Riemann zeta function\\\" in a lecture given on the occasion of Princeton University's centennial celebration of Alan Turing. Learn more at www.princeton.edu/turing\\n\\n#turingprinceton\",\"meta\":{\"duration\":\"PT1H6M54S\"},\"presenter\":{\"name\":null},\"slug\":\"andrew-odlyzko-turing-and-the-riemann-zeta-function\",\"source\":{\"id\":\"pQS7X_8iTCA\",\"provider\":\"youtube\"},\"tag\":[\"in\",\"lecture\",\"given\",\"on\",\"the\",\"occasion\",\"of\",\"Princeton\",\"University's\",\"centennial\",\"celebration\",\"Alan\",\"Turing.\",\"Learn\",\"more\",\"at\",\"Odlyzko\",\"#turingprinceton\",\"University of Minnesota\",\"Riemann zeta function\",\"Alan Turing\",\"Turing centennial\",\"computer science\"],\"title\":\"Andrew Odlyzko: Turing and the Riemann zeta function\"},\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Philip Wadler, Professor of Theoretical Computer Science at the University of Edinburgh, contends that the foundations of computing lay in a coincidence: Church's lambda calculus (1933), Herbrand and Godel's recursive functions (1934), and Turing's machines (1935) all defined the same model of computation. \\n\\n\\nHe gave this lecture on the occasion of Princeton University's centennial celebration of Alan Turing. Learn more at www.princeton.edu/turing\\n\\n#turingprinceton\",\"meta\":{\"duration\":\"PT1H3M41S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"2PJ_DbKGFUA\",\"provider\":\"youtube\"},\"slug\":\"philip-wadler-churchs-coincidences\",\"tag\":[\"Philip Wadler\",\"University of Edinburgh\",\"Princeton\",\"Alan Turing\",\"computer science\",\"lambda calculus\",\"Turing machine\",\"#turingprinceton\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/2PJ_DbKGFUA/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Philip Wadler: Church's Coincidences\"}},{\"node\":{\"description\":\"In this tutorial we will give an introduction to two advanced data storage formats. HDF5 and NetCDF were designed to efficiently store the results of supercomputing applications like climate model outputs, or the data streams received from NASA's fleet of earth observing satellites. They provide a lot of optimizations concerning transparent file compression, speed of access or working with multiple files as if it were one large data set.A couple of Python libraries exist that allow fast and pythonic access to these formats.We will show you how to create and access these types of files from Python, and how to use their advanced features to tune them for maximum efficiency.Tutorial prerequisites and instructions.\\n\\nThomas Pfaff\",\"meta\":{\"duration\":\"PT1H19M39S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"AXlp7qxqu8E\",\"provider\":\"youtube\"},\"slug\":\"thomas-pfaff-advanced-data-storage\",\"tag\":[\"pydata\",\"Berlin\",\"Python\",\"programming language\",\"lecture\",\"science\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/AXlp7qxqu8E/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Thomas Pfaff: Advanced Data Storage\"}},{\"node\":{\"description\":\"Talk by ACM A.M. Turing Laureate Dana S. Scott during the ACM A.M. Turing Centenary Celebration, June, 2012.\\n\\nAbstract:\\n\\nA very fast development in the early 1930s, following Hilbert's codification of Mathematical Logic, led to the Incompleteness Theorems, Computable Functions, Undecidability Theorems, and the general formulation of recursive Function Theory. The so-called Lambda Calculus played a key role. The history of these developments will be traced, and the much later place of Lambda Calculus in Mathematics and Programming-Language Theory will be outlined.\",\"meta\":{\"duration\":\"PT30M8S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"SphBW9ILVPU\",\"provider\":\"youtube\"},\"slug\":\"lambda-calculus-then-and-now\",\"tag\":[\"Calculus\",\"Dana S. Scott\",\"ACM\",\"ACM A.M. Turing Award\",\"Alan Turing\",\"Nobel Prize\",\"in\",\"computing\",\"Contest\",\"Entry\",\"Computer\",\"Electronics\",\"Gadget\",\"Technology\",\"Space\",\"Physics\",\"Mechanics\",\"Experiment\",\"Math\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/SphBW9ILVPU/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Lambda Calculus Then and Now\"}},{\"node\":{\"description\":\"(February 9, 2011) Matthew Might focuses on a new way to write parsers and how it will affect computer science in the future. Might discusses these parsers and overall language theory, to help explain how there is demand for better parsing tools and how computer science will be improved in the future. \\n\\n\\nStanford University:\\nhttp://www.stanford.edu/\\n\\nSchool of Engineering:\\nhttp://soe.stanford.edu/\\n\\nStanford Center for Professional Development:\\nhttp://scpd.stanford.edu/\\n\\nStanford University Channel on YouTube:\\nhttp://www.youtube.com/stanford\",\"meta\":{\"duration\":\"PT1H13M10S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"ZzsK8Am6dKU\",\"provider\":\"youtube\"},\"slug\":\"parsing-with-derivatives\",\"tag\":[\"computer science\",\"electrical engineering\",\"parser\",\"code\",\"parsing\",\"computer systems\",\"language\",\"language theory\",\"derivatives\",\"unstructured\",\"structure\",\"sequence\",\"tree\",\"expression\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/ZzsK8Am6dKU/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Parsing with Derivatives\"}},{\"node\":{\"description\":\"Help us caption & translate this video!\\n\\nhttp://amara.org/v/FGYe/\",\"meta\":{\"duration\":\"PT59M32S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"aZXc11eOEpI\",\"provider\":\"youtube\"},\"slug\":\"elixir-conf-2014-keynote-elixir-by-jose-valim\",\"tag\":[\"computer science\",\"technology\",\"elixir\",\"apps\",\"programming\",\"mobile\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/aZXc11eOEpI/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Elixir Conf 2014 - Keynote: Elixir by Jose Valim\"}},{\"node\":{\"description\":\"Meetup: http://www.meetup.com/papers-we-love/events/220902753/\\nPaper: http://www.cs.cmu.edu/~crary/819-f09/Strachey67.pdf\\nSlides: http://bit.ly/1BnBb08\\nAudio: http://bit.ly/1HAdXci\\n\\n---------------------------------------------------------------------------------------------\\nSponsored by Two Sigma (@twosigma) and The Ladders (@TheLaddersDev)\\n---------------------------------------------------------------------------------------------\\n\\nDescription\\n---------------\\nStrachey's lectures on \\\"Fundamental Concepts in Programming Languages\\\" provided an extremely broad survey of core issues in programming language design that provided much of the terminology we use today, including definitions of the kinds of polymorphism and the kinds of expressions we see in programming languages. Published as a paper many years later, Strachey's lectures provide an especially readable overview of programming languages concepts.\\n\\nBio\\n----\\nJohn Myles White (@johnmyleswhite) is a Julia hacker who loves thinking about the ways in which the design of technical programming languages influences the way in which we think about statistics and machine learning. He's written two books about machine learning for O'Reilly and works at Facebook.\",\"meta\":{\"duration\":\"PT1H16M39S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"cO41uoi5cZs\",\"provider\":\"youtube\"},\"slug\":\"john-myles-white-on-fundamental-concepts-in-programming-languages\",\"tag\":[\"programming languages\",\"paperswelove\",\"Papers We Love\",\"computer science\",\"john myles white\",\"julia\",\"semantics\",\"foundations of computing\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/cO41uoi5cZs/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"John Myles White on Fundamental Concepts in Programming Languages\"}},{\"node\":{\"description\":\"Barbara Liskov, Professor of Electrical Engineering and Computer Science\\nat the Massachusetts Institute of Technology, discusses \\\"Programming the Turing Machine\\\" in a lecture given on the occasion of Princeton University's centennial celebration of Alan Turing. Learn more at www.princeton.edu/turing\\n\\n#turingprinceton\",\"meta\":{\"duration\":\"PT1H6M10S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"ibRar7sWulM\",\"provider\":\"youtube\"},\"slug\":\"barbara-liskov-programming-the-turing-machine\",\"tag\":[\"Barbara Liskov\",\"MIT\",\"Turing machine\",\"Princeton\",\"Turing centennial\",\"Alan Turing\",\"#turingprinceton\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/ibRar7sWulM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Barbara Liskov: Programming the Turing Machine\"}}]}},\"pathContext\":{\"slug\":\"andrew-odlyzko-turing-and-the-riemann-zeta-function\",\"tags\":[\"in\",\"lecture\",\"given\",\"on\",\"the\",\"occasion\",\"of\",\"Princeton\",\"University's\",\"centennial\",\"celebration\",\"Alan\",\"Turing.\",\"Learn\",\"more\",\"at\",\"Odlyzko\",\"#turingprinceton\",\"University of Minnesota\",\"Riemann zeta function\",\"Alan Turing\",\"Turing centennial\",\"computer science\"]}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---talk-andrew-odlyzko-turing-and-the-riemann-zeta-function-1a967b23465085526fdb.js","module.exports = {\"data\":{\"talkJson\":{\"description\":\"Andrew Odlyzko, Professor of Mathematics at the University of Minnesota, discusses \\\"Turing and the Riemann zeta function\\\" in a lecture given on the occasion of Princeton University's centennial celebration of Alan Turing. Learn more at www.princeton.edu/turing\\n\\n#turingprinceton\",\"meta\":{\"duration\":\"PT1H6M54S\"},\"presenter\":{\"name\":null},\"slug\":\"andrew-odlyzko-turing-and-the-riemann-zeta-function\",\"source\":{\"id\":\"pQS7X_8iTCA\",\"provider\":\"youtube\"},\"tag\":[\"in\",\"lecture\",\"given\",\"on\",\"the\",\"occasion\",\"of\",\"Princeton\",\"University's\",\"centennial\",\"celebration\",\"Alan\",\"Turing.\",\"Learn\",\"more\",\"at\",\"Odlyzko\",\"#turingprinceton\",\"University of Minnesota\",\"Riemann zeta function\",\"Alan Turing\",\"Turing centennial\",\"computer science\"],\"title\":\"Andrew Odlyzko: Turing and the Riemann zeta function\"},\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Philip Wadler, Professor of Theoretical Computer Science at the University of Edinburgh, contends that the foundations of computing lay in a coincidence: Church's lambda calculus (1933), Herbrand and Godel's recursive functions (1934), and Turing's machines (1935) all defined the same model of computation. \\n\\n\\nHe gave this lecture on the occasion of Princeton University's centennial celebration of Alan Turing. Learn more at www.princeton.edu/turing\\n\\n#turingprinceton\",\"meta\":{\"duration\":\"PT1H3M41S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"2PJ_DbKGFUA\",\"provider\":\"youtube\"},\"slug\":\"philip-wadler-churchs-coincidences\",\"tag\":[\"Philip Wadler\",\"University of Edinburgh\",\"Princeton\",\"Alan Turing\",\"computer science\",\"lambda calculus\",\"Turing machine\",\"#turingprinceton\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/2PJ_DbKGFUA/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Philip Wadler: Church's Coincidences\"}},{\"node\":{\"description\":\"In this tutorial we will give an introduction to two advanced data storage formats. HDF5 and NetCDF were designed to efficiently store the results of supercomputing applications like climate model outputs, or the data streams received from NASA's fleet of earth observing satellites. They provide a lot of optimizations concerning transparent file compression, speed of access or working with multiple files as if it were one large data set.A couple of Python libraries exist that allow fast and pythonic access to these formats.We will show you how to create and access these types of files from Python, and how to use their advanced features to tune them for maximum efficiency.Tutorial prerequisites and instructions.\\n\\nThomas Pfaff\",\"meta\":{\"duration\":\"PT1H19M39S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"AXlp7qxqu8E\",\"provider\":\"youtube\"},\"slug\":\"thomas-pfaff-advanced-data-storage\",\"tag\":[\"pydata\",\"Berlin\",\"Python\",\"programming language\",\"lecture\",\"science\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/AXlp7qxqu8E/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Thomas Pfaff: Advanced Data Storage\"}},{\"node\":{\"description\":\"Talk by ACM A.M. Turing Laureate Dana S. Scott during the ACM A.M. Turing Centenary Celebration, June, 2012.\\n\\nAbstract:\\n\\nA very fast development in the early 1930s, following Hilbert's codification of Mathematical Logic, led to the Incompleteness Theorems, Computable Functions, Undecidability Theorems, and the general formulation of recursive Function Theory. The so-called Lambda Calculus played a key role. The history of these developments will be traced, and the much later place of Lambda Calculus in Mathematics and Programming-Language Theory will be outlined.\",\"meta\":{\"duration\":\"PT30M8S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"SphBW9ILVPU\",\"provider\":\"youtube\"},\"slug\":\"lambda-calculus-then-and-now\",\"tag\":[\"Calculus\",\"Dana S. Scott\",\"ACM\",\"ACM A.M. Turing Award\",\"Alan Turing\",\"Nobel Prize\",\"in\",\"computing\",\"Contest\",\"Entry\",\"Computer\",\"Electronics\",\"Gadget\",\"Technology\",\"Space\",\"Physics\",\"Mechanics\",\"Experiment\",\"Math\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/SphBW9ILVPU/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Lambda Calculus Then and Now\"}},{\"node\":{\"description\":\"(February 9, 2011) Matthew Might focuses on a new way to write parsers and how it will affect computer science in the future. Might discusses these parsers and overall language theory, to help explain how there is demand for better parsing tools and how computer science will be improved in the future. \\n\\n\\nStanford University:\\nhttp://www.stanford.edu/\\n\\nSchool of Engineering:\\nhttp://soe.stanford.edu/\\n\\nStanford Center for Professional Development:\\nhttp://scpd.stanford.edu/\\n\\nStanford University Channel on YouTube:\\nhttp://www.youtube.com/stanford\",\"meta\":{\"duration\":\"PT1H13M10S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"ZzsK8Am6dKU\",\"provider\":\"youtube\"},\"slug\":\"parsing-with-derivatives\",\"tag\":[\"computer science\",\"electrical engineering\",\"parser\",\"code\",\"parsing\",\"computer systems\",\"language\",\"language theory\",\"derivatives\",\"unstructured\",\"structure\",\"sequence\",\"tree\",\"expression\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/ZzsK8Am6dKU/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Parsing with Derivatives\"}},{\"node\":{\"description\":\"Help us caption & translate this video!\\n\\nhttp://amara.org/v/FGYe/\",\"meta\":{\"duration\":\"PT59M32S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"aZXc11eOEpI\",\"provider\":\"youtube\"},\"slug\":\"elixir-conf-2014-keynote-elixir-by-jose-valim\",\"tag\":[\"computer science\",\"technology\",\"elixir\",\"apps\",\"programming\",\"mobile\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/aZXc11eOEpI/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Elixir Conf 2014 - Keynote: Elixir by Jose Valim\"}},{\"node\":{\"description\":\"Meetup: http://www.meetup.com/papers-we-love/events/220902753/\\nPaper: http://www.cs.cmu.edu/~crary/819-f09/Strachey67.pdf\\nSlides: http://bit.ly/1BnBb08\\nAudio: http://bit.ly/1HAdXci\\n\\n---------------------------------------------------------------------------------------------\\nSponsored by Two Sigma (@twosigma) and The Ladders (@TheLaddersDev)\\n---------------------------------------------------------------------------------------------\\n\\nDescription\\n---------------\\nStrachey's lectures on \\\"Fundamental Concepts in Programming Languages\\\" provided an extremely broad survey of core issues in programming language design that provided much of the terminology we use today, including definitions of the kinds of polymorphism and the kinds of expressions we see in programming languages. Published as a paper many years later, Strachey's lectures provide an especially readable overview of programming languages concepts.\\n\\nBio\\n----\\nJohn Myles White (@johnmyleswhite) is a Julia hacker who loves thinking about the ways in which the design of technical programming languages influences the way in which we think about statistics and machine learning. He's written two books about machine learning for O'Reilly and works at Facebook.\",\"meta\":{\"duration\":\"PT1H16M39S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"cO41uoi5cZs\",\"provider\":\"youtube\"},\"slug\":\"john-myles-white-on-fundamental-concepts-in-programming-languages\",\"tag\":[\"programming languages\",\"paperswelove\",\"Papers We Love\",\"computer science\",\"john myles white\",\"julia\",\"semantics\",\"foundations of computing\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/cO41uoi5cZs/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"John Myles White on Fundamental Concepts in Programming Languages\"}},{\"node\":{\"description\":\"Barbara Liskov, Professor of Electrical Engineering and Computer Science\\nat the Massachusetts Institute of Technology, discusses \\\"Programming the Turing Machine\\\" in a lecture given on the occasion of Princeton University's centennial celebration of Alan Turing. Learn more at www.princeton.edu/turing\\n\\n#turingprinceton\",\"meta\":{\"duration\":\"PT1H6M10S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"ibRar7sWulM\",\"provider\":\"youtube\"},\"slug\":\"barbara-liskov-programming-the-turing-machine\",\"tag\":[\"Barbara Liskov\",\"MIT\",\"Turing machine\",\"Princeton\",\"Turing centennial\",\"Alan Turing\",\"#turingprinceton\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/ibRar7sWulM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Barbara Liskov: Programming the Turing Machine\"}}]}},\"pathContext\":{\"slug\":\"andrew-odlyzko-turing-and-the-riemann-zeta-function\",\"tags\":[\"in\",\"lecture\",\"given\",\"on\",\"the\",\"occasion\",\"of\",\"Princeton\",\"University's\",\"centennial\",\"celebration\",\"Alan\",\"Turing.\",\"Learn\",\"more\",\"at\",\"Odlyzko\",\"#turingprinceton\",\"University of Minnesota\",\"Riemann zeta function\",\"Alan Turing\",\"Turing centennial\",\"computer science\"]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/talk-andrew-odlyzko-turing-and-the-riemann-zeta-function.json\n// module id = 2875\n// module chunks = 216995489755096"],"sourceRoot":""}