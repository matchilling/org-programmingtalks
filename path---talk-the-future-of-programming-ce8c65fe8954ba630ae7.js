webpackJsonp([0xadd091213d30],{3203:function(e,o){e.exports={data:{talkJson:{description:"\"The most dangerous thought you can have as a creative person is to think you know what you're doing.\"\nPresented at Dropbox's DBX conference on July 9, 2013.\nAll of the slides are available at: http://worrydream.com/dbx/\n\nFor his recent DBX Conference talk, Victor took attendees back to the year 1973, donning the uniform of an IBM systems engineer of the times, delivering his presentation on an overhead projector. The '60s and early '70s were a fertile time for CS ideas, reminds Victor, but even more importantly, it was a time of unfettered thinking, unconstrained by programming dogma, authority, and tradition. 'The most dangerous thought that you can have as a creative person is to think that you know what you're doing,' explains Victor. 'Because once you think you know what you're doing you stop looking around for other ways of doing things and you stop being able to see other ways of doing things. You become blind.' He concludes, 'I think you have to say: \"We don't know what programming is. We don't know what computing is. We don't even know what a computer is.\" And once you truly understand that, and once you truly believe that, then you're free, and you can think anything.'\"",meta:{duration:"PT32M56S"},presenter:{name:"Bret Victor"},slug:"the-future-of-programming",source:{id:"8pTEmbeENF4",provider:"youtube"},tag:["Inspiring","Funny","DBX conference 2013"],title:"The Future of Programming"},allTalkJson:{edges:[{node:{description:"It is all to easy to dismiss problematic codebases on some nebulous idea of bad practice or bad programmers. Poor code, however, is rarely arbitrary and random in its structure or formulation. Systems of code, well or poorly structured, emerge from systems of practice, whether effective or ineffective. To improve code quality, it makes more sense to pick apart the specific practices and see their interplay — the cause — than to simply focus on the code itself — the effect. This talk looks at how a handful of coding habits, design practices and assumptions can systematically balloon code and compound its accidental complexity.",meta:{duration:"PT1H11M23S"},presenter:{name:"Kevlin Henney"},source:{id:"FyCYva9DhsI",provider:"youtube"},slug:"clean-coders-hate-what-happens-to-your-code-when-you-use-these-enterprise-programming-tricks",tag:["NDC Conferences","Clean Code"],thumbnails:{default:{url:"https://i.ytimg.com/vi/FyCYva9DhsI/default.jpg",height:90,width:120}},title:"Clean Coders Hate What Happens to Your Code When You Use These Enterprise Programming Tricks"}}]}},pathContext:{slug:"the-future-of-programming",tags:["Clean Code"]}}}});
//# sourceMappingURL=path---talk-the-future-of-programming-ce8c65fe8954ba630ae7.js.map