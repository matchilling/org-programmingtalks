{"version":3,"sources":["webpack:///path---tag-jsconf-2014-09531865265aa4fd7ab5.js","webpack:///./.cache/json/tag-jsconf-2014.json"],"names":["webpackJsonp","2401","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,07BAAAC,MAAg9BC,SAAA,WAAqBC,WAAcC,KAAA,eAAqBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,iDAAAC,KAAA,4BAAAC,YAA0GC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,uDAA+DC,aAAgBR,KAAA,cAAAC,IAAA","file":"path---tag-jsconf-2014-09531865265aa4fd7ab5.js","sourcesContent":["webpackJsonp([165130973379849],{\n\n/***/ 2401:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"We live in a time of vast computational resources - many of us carry around in our pockets what just thirty years ago would have been considered a supercomputer. But it's not just the hardware, these bite sized supercomputers run software using state of the art dynamic compilation techniques to deliver stellar performance without sacrificing flexibility.\\n\\nWhile all of this may sound incredibly futuristic, many of us still program these Dream Machines with miserly techniques not far removed from the best practices of the 1960s.\\n\\nWe have cycles to spare, by investing some of them into immutable data structures our programs get new wonderful properties that enable us to design solutions at a much higher level of abstraction. Om is a new library I've created just to explore these possibilities. While Om itself is written in ClojureScript, we'll focus primarily on the big ideas present in Om all of which are easily portable to JavaScript.\",\"meta\":{\"duration\":\"PT22M6S\"},\"presenter\":{\"name\":\"David Nolen\"},\"source\":{\"id\":\"SiFwRtCnxv4\",\"provider\":\"youtube\"},\"slug\":\"immutability-putting-the-dream-machine-to-work\",\"tag\":[\"JSConf 2014\",\"JavaScript\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/SiFwRtCnxv4/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Immutability: Putting The Dream Machine To Work\"}}]}},\"pathContext\":{\"slug\":\"jsconf-2014\",\"tag\":\"JSConf 2014\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-jsconf-2014-09531865265aa4fd7ab5.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"We live in a time of vast computational resources - many of us carry around in our pockets what just thirty years ago would have been considered a supercomputer. But it's not just the hardware, these bite sized supercomputers run software using state of the art dynamic compilation techniques to deliver stellar performance without sacrificing flexibility.\\n\\nWhile all of this may sound incredibly futuristic, many of us still program these Dream Machines with miserly techniques not far removed from the best practices of the 1960s.\\n\\nWe have cycles to spare, by investing some of them into immutable data structures our programs get new wonderful properties that enable us to design solutions at a much higher level of abstraction. Om is a new library I've created just to explore these possibilities. While Om itself is written in ClojureScript, we'll focus primarily on the big ideas present in Om all of which are easily portable to JavaScript.\",\"meta\":{\"duration\":\"PT22M6S\"},\"presenter\":{\"name\":\"David Nolen\"},\"source\":{\"id\":\"SiFwRtCnxv4\",\"provider\":\"youtube\"},\"slug\":\"immutability-putting-the-dream-machine-to-work\",\"tag\":[\"JSConf 2014\",\"JavaScript\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/SiFwRtCnxv4/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Immutability: Putting The Dream Machine To Work\"}}]}},\"pathContext\":{\"slug\":\"jsconf-2014\",\"tag\":\"JSConf 2014\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-jsconf-2014.json\n// module id = 2401\n// module chunks = 165130973379849"],"sourceRoot":""}