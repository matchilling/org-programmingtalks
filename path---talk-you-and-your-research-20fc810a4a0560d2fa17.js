webpackJsonp([38306219572633],{3225:function(e,t){e.exports={data:{talkJson:{description:"You and Your Research is the blueprint for a successful career in any discipline, not just research; in fact, the talk has the nickname “You and Your Career”. In this lecture, Richard Hamming shares his observations on “why do so few scientists make significant contributions and so many are forgotten in the long run?’’ Some of the key ideas include courage, luck, drive (“knowledge and productivity are like compound interest”), a focus on important problems (“If you do not work on an important problem, it’s unlikely you’ll do important work”), open doors, selling the work (“I suggest that when you open a journal, as you turn the pages, you ask why you read some articles and not others”), and much more. This should be required viewing for every high school student.",meta:{duration:"PT44M3S"},presenter:{name:"Richard Hamming"},slug:"you-and-your-research",source:{id:"a1zDuOPkMSw",provider:"youtube"},tag:["Inspiring","Career","Educational"],title:"You and Your Research"},allTalkJson:{edges:[{node:{description:"Facebook COO Sheryl Sandberg looks at why a smaller percentage of women than men reach the top of their professions -- and offers 3 powerful pieces of advice to women aiming for the C-suite.",meta:{duration:"PT15M29S"},presenter:{name:"Sheryl Sandberg"},source:{id:"18uDutylDa4",provider:"youtube"},slug:"why-we-have-too-few-women-leaders",tag:["TEDTalks","Career","Feminism"],thumbnails:{default:{url:"https://i.ytimg.com/vi/18uDutylDa4/default.jpg",height:90,width:120}},title:"Why we have too few women leaders"}},{node:{description:"\"The most dangerous thought you can have as a creative person is to think you know what you're doing.\"\nPresented at Dropbox's DBX conference on July 9, 2013.\nAll of the slides are available at: http://worrydream.com/dbx/\n\nFor his recent DBX Conference talk, Victor took attendees back to the year 1973, donning the uniform of an IBM systems engineer of the times, delivering his presentation on an overhead projector. The '60s and early '70s were a fertile time for CS ideas, reminds Victor, but even more importantly, it was a time of unfettered thinking, unconstrained by programming dogma, authority, and tradition. 'The most dangerous thought that you can have as a creative person is to think that you know what you're doing,' explains Victor. 'Because once you think you know what you're doing you stop looking around for other ways of doing things and you stop being able to see other ways of doing things. You become blind.' He concludes, 'I think you have to say: \"We don't know what programming is. We don't know what computing is. We don't even know what a computer is.\" And once you truly understand that, and once you truly believe that, then you're free, and you can think anything.'\"",meta:{duration:"PT32M56S"},presenter:{name:"Bret Victor"},source:{id:"8pTEmbeENF4",provider:"youtube"},slug:"the-future-of-programming",tag:["Inspiring","Funny","DBX conference 2013"],thumbnails:{default:{url:"https://i.ytimg.com/vi/8pTEmbeENF4/default.jpg",height:90,width:120}},title:"The Future of Programming"}},{node:{description:"This persuasive talk shows how essential and easy it is to gain a basic understanding of computer science learning principles. Our world increasingly driven by technology and software, so we all need to know the creative, problem-solving power of computer science. This is especially important to students who will lead the way in our shared future. Learn how you can take the next step at http://code.org.",meta:{duration:"PT10M33S"},presenter:{name:"Hadi Partovi"},source:{id:"FpMNs7H24X0",provider:"youtube"},slug:"computer-science-is-for-everyone",tag:["TEDtalks","Education","Inspiring"],thumbnails:{default:{url:"https://i.ytimg.com/vi/FpMNs7H24X0/default.jpg",height:90,width:120}},title:"Computer science is for everyone"}},{node:{description:"Treo creator Jeff Hawkins urges us to take a new look at the brain -- to see it not as a fast processor, but as a memory system that stores and plays back experiences to help us predict, intelligently, what will happen next.",meta:{duration:"PT22M10S"},presenter:{name:"Jeff Hawkins"},source:{id:"G6CVj5IQkzk",provider:"youtube"},slug:"how-brain-science-will-change-computing",tag:["TEDTalks","Brain Science","Neuroscience","Artificial Intelligence (AI)","Inspiring"],thumbnails:{default:{url:"https://i.ytimg.com/vi/G6CVj5IQkzk/default.jpg",height:90,width:120}},title:"How brain science will change computing"}},{node:{description:"Anyone ever give you advice on how to remain a programmer? To avoid being \"promoted\" into positions away from technology and code? Anyone ever tell you at school or university that you needed social skills to be a good developer? Did you know, without having had half a dozen different jobs, that all development roles are not created equal? Is it true that moving jobs a lot is a Bad Thing?\n\nIn this session I'm going to share some lessons I learnt the hard way while managing my career as a Java developer. I'm going to tell you secrets that others don't want to share. And I'll give you tools for working out what your next steps are.\n\nIf nothing else, you'll get to laugh at the (many) mistakes I've made in my search for The Perfect Job.",meta:{duration:"PT54M19S"},presenter:{name:"Trisha Gee"},source:{id:"LlAn452X4Lc",provider:"youtube"},slug:"career-advice-for-programmers",tag:["Career","The perfect Job","GOTO Conference"],thumbnails:{default:{url:"https://i.ytimg.com/vi/LlAn452X4Lc/default.jpg",height:90,width:120}},title:"Career Advice for Programmers"}},{node:{description:"Alan Kay talks about alternative approaches to teach Computer Science in schools.",meta:{duration:"PT1H10M32S"},presenter:{name:"Alan Kay"},source:{id:"N9c7_8Gp7gI",provider:"youtube"},slug:"rethinking-computer-science-education",tag:["Educational","CrossRoads 2015","Inspiring"],thumbnails:{default:{url:"https://i.ytimg.com/vi/N9c7_8Gp7gI/default.jpg",height:90,width:120}},title:"Rethinking Computer Science Education"}},{node:{description:"One of my all time favorite talks of Alan Kay's, given in 2015.\n\nNot my own video, though it hasn't been on YouTube before. Original location here: http://global.sap.com/campaign/na/usa/CRM-XU15-INT-STILP/index.html",meta:{duration:"PT51M7S"},presenter:{name:"Alan Kay"},source:{id:"NdSD07U5uBs",provider:"youtube"},slug:"power-of-simplicity",tag:["Inspiring","Simplicity"],thumbnails:{default:{url:"https://i.ytimg.com/vi/NdSD07U5uBs/default.jpg",height:90,width:120}},title:"Power of Simplicity"}},{node:{description:"Bret Victor invents tools that enable people to understand and create. He has designed experimental UI concepts at Apple, interactive data graphics for Al Gore, and musical instruments at Alesis.",meta:{duration:"PT54M20S"},presenter:{name:"Bret Victor"},source:{id:"PUv66718DII",provider:"youtube"},slug:"inventing-on-principle",tag:["Inspiring"],thumbnails:{default:{url:"https://i.ytimg.com/vi/PUv66718DII/default.jpg",height:90,width:120}},title:"Inventing on Principle"}},{node:{description:"Our increasingly complex needs have led us to build increasing complex software. We’ve done this in an incremental fashion, building code on top of code. We write understandable snippets of code built on programming languages we know well and then bundle them into program structures to perform complex tasks. This incremental process may seem to have low risk at the snippet level, but it leads to program structures that can be hundreds of millions of lines of code that is intractable to change, redesign, and understanding, nor in the end is it easy to design. It also leads to code with potentially unwanted emergent properties. Today, we know how to create programs that can create programming languages. So why not write software that closely follows the problem, without a programming language, then let other programs create the programming language to support it? If we apply this rethinking to the design process, both problems and solutions can be thought of in terms of relational str",meta:{duration:"PT1H7M19S"},presenter:{name:"Alan Kay"},source:{id:"QboI_1WJUlM",provider:"youtube"},slug:"rethinking-design-risk-and-software",tag:["Inspiring","Keynote","COFES 2012"],thumbnails:{default:{url:"https://i.ytimg.com/vi/QboI_1WJUlM/default.jpg",height:90,width:120}},title:"Rethinking Design, Risk, and Software"}},{node:{description:"Daphne Koller is enticing top universities to put their most intriguing courses online for free -- not just as a service, but as a way to research how people learn. With Coursera (cofounded by Andrew Ng), each keystroke, quiz, peer-to-peer discussion and self-graded assignment builds an unprecedented pool of data on how knowledge is processed.",meta:{duration:"PT20M41S"},presenter:{name:"Daphne Koller"},source:{id:"U6FvJ6jMGHU",provider:"youtube"},slug:"daphne-koller-what-were-learning-from-online-education",tag:["TEDTalks","Online Education","Inspiring"],thumbnails:{default:{url:"https://i.ytimg.com/vi/U6FvJ6jMGHU/default.jpg",height:90,width:120}},title:"What we're learning from online education"}}]}},pathContext:{slug:"you-and-your-research",tags:["Inspiring","Career","Educational"]}}}});
//# sourceMappingURL=path---talk-you-and-your-research-20fc810a4a0560d2fa17.js.map