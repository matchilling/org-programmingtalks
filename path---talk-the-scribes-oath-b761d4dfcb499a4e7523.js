webpackJsonp([82919603128370],{3224:function(e,t){e.exports={data:{talkJson:{description:"We are the modern day scribes. Nothing happens in our society without us. But so far, we are unorganized, undisciplined, and we have no unifying ethics or standards. Society is becoming aware of us.\nSoftware developers have become both villains and heroes in our culture. More importantly, our society depends critically upon us. What oath, if any, should we swear? How would we enforce it?",meta:{duration:"PT59M15S"},presenter:{name:'"Uncle Bob" - Robert Cecil Martin'},slug:"the-scribes-oath",source:{id:"Tng6Fox8EfI",provider:"youtube"},tag:["GOTO Conference","Amsterdam"],title:"The Scribe's Oath"},allTalkJson:{edges:[{node:{description:"This presentation was recorded at GOTO Chicago 2015\nhttp://gotochgo.com\n\nBrian LeRoux - PhoneGap Project Team, Adobe\n\nABSTRACT\nJavaScript has a long history of being difficult to structure and maintain. To deal with this complexity a swath of frameworks appeared over the years. Prototype.js was quickly followed by jQuery and hounded by Dojo, YUI, Mootools and [...]\nDownload slides and read the full abstract here:\nhttp://gotocon.com/chicago-2015/presentation/ECMAScript%206%20&%20Web%20Components\n\nhttps://twitter.com/gotochgo\nhttps://www.facebook.com/GOTOConference\nhttp://gotocon.com",meta:{duration:"PT36M12S"},presenter:{name:null},source:{id:"2w4sRkTnhPM",provider:"youtube"},slug:"ecmascript-6-and-web-components-brian-leroux",tag:["Brian LeRoux","ECMAScript (Programming Language)","GOTO Conference","GOTO Conference","GOTO Conference","World Wide Web (Video Game Platform)","Software Development (Industry)","Programming Language","Java"],thumbnails:{default:{url:"https://i.ytimg.com/vi/2w4sRkTnhPM/default.jpg",height:90,width:120}},title:"ECMAScript 6 & Web Components • Brian LeRoux"}},{node:{description:'There are now several frameworks designed to address the demand for "big agile."\n\nIn this talk Jez will explain the flaws in such frameworks, why they so often fail to produce the desired effects, and what we should do instead. He will also address some common organizational obstacles to moving fast at scale: governance, budgeting, and the project paradigm - and discuss how to address them. Warning: this talk will include liberal use of real, statistically sound data.',meta:{duration:"PT51M2S"},presenter:{name:"Jez Humble"},source:{id:"2zYxWEZ0gYg",provider:"youtube"},slug:"why-scaling-agile-doesnt-work",tag:["GOTO Conference","Agile","Scrum"],thumbnails:{default:{url:"https://i.ytimg.com/vi/2zYxWEZ0gYg/default.jpg",height:90,width:120}},title:"Why Scaling Agile Doesn't Work"}},{node:{description:"Cybercriminals are often perceived as having super powers to get into your systems and steal your money and data. The vast majority are just following simple cookbook recipes to take advantage of laziness, sloppiness and an failure to understand what might be risky behaviour. Defences against cybercrime do not have to be hi-tech or even very complex.\nThis talk discusses various types of cybercrime and gives some practical advice as to how to make yourself a little safer.",meta:{duration:"PT51M4S"},presenter:{name:"Richard Clayton"},source:{id:"624S9ly09Xk",provider:"youtube"},slug:"a-practical-guide-to-cybercrime",tag:["GOTO Conference","University of Cambridge","Cybercrime","Security","Privacy"],thumbnails:{default:{url:"https://i.ytimg.com/vi/624S9ly09Xk/default.jpg",height:90,width:120}},title:"A Practical Guide to Cybercrime"}},{node:{description:"R is a domain-specific language for analyzing data. Why does data analysis need its own DSL? What does R do well and what does it do poorly? How can developers take advantage of R's strengths and mitigate its weaknesses? This talk will give some answers to these questions.",meta:{duration:"PT38M9S"},presenter:{name:"John Cook"},source:{id:"6S9r_YbqHy8",provider:"youtube"},slug:"the-r-language-the-good-the-bad-and-the-ugly",tag:["GOTO Conference","Aarhus","R Programming Language","Statistics"],thumbnails:{default:{url:"https://i.ytimg.com/vi/6S9r_YbqHy8/default.jpg",height:90,width:120}},title:"The R Language: The Good The Bad & The Ugly"}},{node:{description:"This presentation was recorded at GOTO Berlin 2015\nhttp://gotober.com\n\nKevin Goldsmith - Vice President, Engineering at Spotify\n\nABSTRACT\nThe software industry used to be all about building monoliths: monolithic applications and services, with bing-bang product releasees. All that has now changed [...]\nDownload slides and read the full abstract here:\nhttp://gotocon.com/berlin-2015/presentation/Microservices%20@%20Spotify\n\nhttps://twitter.com/gotober\nhttps://www.facebook.com/GOTOConference\nhttp://gotocon.com",meta:{duration:"PT49M8S"},presenter:{name:"Kevin Goldsmith"},source:{id:"7LGPeBgNFuU",provider:"youtube"},slug:"microservices-spotify-kevin-goldsmith",tag:["GOTO Conference","Berlin","Microservices","Spotify","Programming Languages"],thumbnails:{default:{url:"https://i.ytimg.com/vi/7LGPeBgNFuU/default.jpg",height:90,width:120}},title:"Microservices at Spotify"}},{node:{description:"Check out our upcoming conferences at http://gotocon.com\nSubscribe to the GOTO Conferences YouTube Channel at https://www.youtube.com/user/GOTOConf...\n\nJanne Jul Jensen - Interaction Designer and Usability Specialist\n\nABSTRACT\nMost developers today are aware of the importance of creating a good user interface with a high level of usability, but many are lacking the methods and techniques that can help in this process. This session will present to the listeners a range of concrete methods and techniques applicable in different phases of a design process, to handle specific challenges. This will include design patterns, personas, wire framing, paper prototype testing, progressive disclosure, card sorting and creative workshops and many of the methods and techniques will be accompanied by examples.\n\nhttps://twitter.com/gotocon\nhttps://www.facebook.com/GOTOConference\nhttp://gotocon.com",meta:{duration:"PT51M20S"},presenter:{name:null},source:{id:"7OSkB4BCx00",provider:"youtube"},slug:"user-interface-ux-techniques-janne-jul-jensen",tag:["Software Development","Janne Jul Jensen","User Interface Design (Field Of Study)","User Interface (Ontology Instance)","User Interface","GOTO Conference","GOTO Conference","GOTO Conference","User Experience Design (Industry)","Technology (Industry)","User Interface (Speech Topic)","UX","Trifork","Design (Industry)","Programming Language","Videos for Developers"],thumbnails:{default:{url:"https://i.ytimg.com/vi/7OSkB4BCx00/default.jpg",height:90,width:120}},title:"User Interface (UX) Techniques • Janne Jul Jensen"}},{node:{description:'Dan North - Agile Troublemaker, Developer, Originator of BDD\n\nABSTRACT\nThus begins an old, and sadly lost in the mists of Usenet, love story about Vi and Ed (who becomes her "ex"), told entirely in Unix commands. I had no idea when I started learning these arcane (guess how the "dd" command got its name) and cryptic (what about "grep"?) Unix commands how incredibly useful they would become over the next two decades. If your primary OS is Linux or OSX on the desktop, and maybe iOS or Android on the move, you\'ll find this 40-something year joke ("Unix" itself was a bad pun) has managed to embed itself into every facet of your technological life.\n\nBeing comfortable at a shell prompt and having a healthy working knowledge of Unix commands and regular expressions will give you a whole new level of capability. In this fun talk I\'ll introduce a few commands and shell tricks you should have in your back pocket, and show you how to start taking control of your operating system. If you ask nicely I\'ll even tell you about the production system I wrote using Makefiles.',meta:{duration:"PT30M4S"},presenter:{name:null},source:{id:"7uwW20odwEk",provider:"youtube"},slug:"power-use-of-unix-dan-north",tag:["Unix (Software)","Unix Commands","Grep (Software)","Linux software","OSx86 (Software)","Android (Software)","production system","Makefiles","Dan North","GOTO Conference","GOTO Conference","GOTO Conference","Programming Language"],thumbnails:{default:{url:"https://i.ytimg.com/vi/7uwW20odwEk/default.jpg",height:90,width:120}},title:"Power Use of UNIX • Dan North"}},{node:{description:"Everything is changing. Everything is new. Frameworks, platforms and trends are displaced on a weekly basis. Skills are churning.\n\nAnd yet... Beneath this seemingly turbulent flow there is a slow current, strong and steady, changing relatively little over the decades. Concepts with a long history appear in new forms and fads and technologies. Principles are revisited. Ideas once lost to the mainstream are found again.\n\nIn this keynote we revisit the present through the past, looking at the enduring principles that shape programming languages, architecture, development practice and development process, the ideas that cycle round, each time becoming perhaps a little better defined, a little more mature, and look to see what else might be on the horizon.",meta:{duration:"PT50M23S"},presenter:{name:"Kevlin Henney"},source:{id:"AbgsfeGvg3E",provider:"youtube"},slug:"old-is-the-new-new",tag:["GOTO Conference","Keynote","Architecture","Languages"],thumbnails:{default:{url:"https://i.ytimg.com/vi/AbgsfeGvg3E/default.jpg",height:90,width:120}},title:"Old Is the New New"}},{node:{description:"Systems get bigger, technologies reach further, practices mature, advice changes... or at least some of it does. Some guidance remains unaffected by the passing of paradigms, the evolution of technology or the scaling of development: break your software into small, cohesive parts defined by clear interfaces and sound implementations, all the while striving for simplicity. The excuses for not doing so are as predictable as they are problematic. But if you want to create legacy code, make sure code is arbitrarily partitioned into large, incoherent parts characterised by unwieldy interfaces and incomprehensible implementations.\nWhile there are many definitions of what a legacy system is, common to almost all perceptions of a legacy system is the concept of size — specifically, lots of it. The phrase 'small legacy system' can be considered an oxymoron. This talk sets out to re-assess and reassert the importance of thinking and implementing small as an essential property of software systems — yes, even the large ones.",meta:{duration:"PT1H7M3S"},presenter:{name:"Kevlin Henney"},source:{id:"B3b4tremI5o",provider:"youtube"},slug:"small-is-beautiful",tag:["GOTO Conference","Keynote","GOTO Copenhagen","Scaling","Legacy System","Simplicity"],thumbnails:{default:{url:"https://i.ytimg.com/vi/B3b4tremI5o/default.jpg",height:90,width:120}},title:"Small Is Beautiful"}},{node:{description:'This presentation was recorded at GOTO Chicago 2014\nhttp://gotochgo.com\n\nAdrian Cockcroft - Technology Fellow at Battery Ventures and Former Netflix Cloud Architect Pioneer\n\nABSTRACT\nTo deliver software products at high velocity requires four things. First, a culture of innovation that can see and respond to opportunities. Second, the data and analytics to evaluate alternatives. Third, a culture that can make decisions and assign resources quickly. Fourth, agile development and self service deployment. A fine grain loosely coupled architecture scales as the team size grows, a freedom and responsibility culture provides autonomy for innovation and fast decision making, unstructured "Big Data" analytics gets answers quickly, cloud removes the latency of resource allocation, and DevOps removes the coordination latency that slows down deployment. Traditional enterprise architectures are based on monolithic applications and relational databases. Cloud native architectures are based on buiding single function REST-based microservices that support integration across denormalized NoSQL data stores and a wide range of web services. This talk will also discuss strategies, patterns and pathways to perform a gradual migration towards cloud native.\n\nLink to slides: http://gotocon.com/dl/goto-chicago-20...\n\nhttps://twitter.com/gotochgo\nhttps://www.facebook.com/GOTOConference\nhttp://gotocon.com',meta:{duration:"PT1H4M52S"},presenter:{name:null},source:{id:"BeNrVl2_nyI",provider:"youtube"},slug:"speed-and-scale-how-to-get-there-adrian-cockcroft",tag:["Software Engineering (Industry)","Innovation (Quotation Subject)","Database (Software Genre)","DevOps","big data","pathways","adrian cockcroft","GOTO Conference","GOTO Conference","GOTO Conference","Adrian Cockcroft","Speed & Scale"],thumbnails:{default:{url:"https://i.ytimg.com/vi/BeNrVl2_nyI/default.jpg",height:90,width:120}},title:"Speed & Scale: How to get there • Adrian Cockcroft"}}]}},pathContext:{slug:"the-scribes-oath",tags:["GOTO Conference","Amsterdam"]}}}});
//# sourceMappingURL=path---talk-the-scribes-oath-b761d4dfcb499a4e7523.js.map