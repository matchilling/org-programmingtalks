{"version":3,"sources":["webpack:///path---tag-geek-f5b155ce637e215e77d1.js","webpack:///./.cache/json/tag-geek.json"],"names":["webpackJsonp","2285","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,k9CAA+SC,MAAyrCC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,sCAAAC,KAAA,oDAAAC,YAAuHC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,6CAAqDC,aAAgBR,KAAA,OAAAC,IAAA","file":"path---tag-geek-f5b155ce637e215e77d1.js","sourcesContent":["webpackJsonp([110908631414236],{\n\n/***/ 2285:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Build Your Own Lisp for Great Justice\\n\\nImplementing a toy Lisp interpreter is practically a rite of passage for the budding computer scientist. This hallowed tradition is described in detail in \\\"Lisp in Small Pieces,\\\" the seminal work on the making of Lisps, but everybody loves a tl;dr, so let's do the 40 minute executive summary.\\n\\nWe'll charge at high speed\\nthrough the following topics, with Clojure code to follow along with as we go (because there's no better language for implementing a Lisp than another Lisp):\\n\\n* Parsing: turning text files into ASTs\\n* Fundamental Lisp datatypes\\n* McCarthy's elementary functions\\n* Evaluating Lisp code\\n* Lambdas and lexical scope\\n* Your friend, the state monad\\n* Beyond Lisp: pattern matching and type systems\\n\\nWhen we're done, you'll be ready to go forth and fill the world with Lisps of all shapes, colours and Greenspun violations for Great Justice. Also, it'll be good fun.\\n\\nSpeaker\\nBodil Stokke (@bodil) is a compulsive conference speaker in the fields of functional programming and internets technologies, and is a co-organiser of three annual developer conferences in her home\\ntown of Oslo, Norway, mostly because she's still learning how to stop. She is a prolific contributor to the Free Software community, primarily as a Clojure developer, and has recently taken up designing new programming languages as a hobby. In her spare time, she works as a web developer for Comoyo, which is like Hulu for non-Americans.\",\"meta\":{\"duration\":\"PT53M52S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"DHubfS8E--o\",\"provider\":\"youtube\"},\"slug\":\"functional-programming-bodil-stokke\",\"tag\":[\"programming\",\"lisp\",\"geek\",\"functional\",\"clojure\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/DHubfS8E--o/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Functional programming - Bodil Stokke\"}}]}},\"pathContext\":{\"slug\":\"geek\",\"tag\":\"geek\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-geek-f5b155ce637e215e77d1.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Build Your Own Lisp for Great Justice\\n\\nImplementing a toy Lisp interpreter is practically a rite of passage for the budding computer scientist. This hallowed tradition is described in detail in \\\"Lisp in Small Pieces,\\\" the seminal work on the making of Lisps, but everybody loves a tl;dr, so let's do the 40 minute executive summary.\\n\\nWe'll charge at high speed\\nthrough the following topics, with Clojure code to follow along with as we go (because there's no better language for implementing a Lisp than another Lisp):\\n\\n* Parsing: turning text files into ASTs\\n* Fundamental Lisp datatypes\\n* McCarthy's elementary functions\\n* Evaluating Lisp code\\n* Lambdas and lexical scope\\n* Your friend, the state monad\\n* Beyond Lisp: pattern matching and type systems\\n\\nWhen we're done, you'll be ready to go forth and fill the world with Lisps of all shapes, colours and Greenspun violations for Great Justice. Also, it'll be good fun.\\n\\nSpeaker\\nBodil Stokke (@bodil) is a compulsive conference speaker in the fields of functional programming and internets technologies, and is a co-organiser of three annual developer conferences in her home\\ntown of Oslo, Norway, mostly because she's still learning how to stop. She is a prolific contributor to the Free Software community, primarily as a Clojure developer, and has recently taken up designing new programming languages as a hobby. In her spare time, she works as a web developer for Comoyo, which is like Hulu for non-Americans.\",\"meta\":{\"duration\":\"PT53M52S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"DHubfS8E--o\",\"provider\":\"youtube\"},\"slug\":\"functional-programming-bodil-stokke\",\"tag\":[\"programming\",\"lisp\",\"geek\",\"functional\",\"clojure\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/DHubfS8E--o/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Functional programming - Bodil Stokke\"}}]}},\"pathContext\":{\"slug\":\"geek\",\"tag\":\"geek\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-geek.json\n// module id = 2285\n// module chunks = 110908631414236"],"sourceRoot":""}