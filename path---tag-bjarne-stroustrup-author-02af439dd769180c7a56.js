webpackJsonp([0x67651d370a90],{2029:function(e,t){e.exports={data:{allTalkJson:{edges:[{node:{description:'Source: http://tech.yandex.ru/events/cpp-party/june-msk/talks/1954/\n\nI especially like 36:58\n\nThe Vasa was a 17th-century Swedish warship which suffered such feature creep during construction that it sank shortly after leaving the harbour on its maiden voyage. In the early 1990s, the C++ standardisation committee adopted the Vasa as a cautionary tale, discouraging prospective language extensions with "Remember the Vasa!" Yet C++ continued to grow, and by the time C++ was standardised, its complexity made the Vasa look like a rowboat.\n\nThe Vasa sank, however, while C++ cruised, and it looks likely to continue doing so even as the latest revised standards (C++11 and C++14) add dozens of new features, each with its own idiosyncrasies. Clearly, C++ has gotten some important things right. In this talk, Scott Meyers considers the lessons to be learned from the ongoing success of a complex programming language that\'s over 30 years old, yet very much alive and kicking.',meta:{duration:"PT1H7M3S"},presenter:{name:null},source:{id:"ltCgzYcpFUI",provider:"youtube"},slug:"why-c-sails-when-the-vasa-sank",tag:["c++","C++11","C++14","scott meyers","C++ and beyond","cppcon","herb sutter","gcc","microsoft","Bjarne Stroustrup (Author)","effective C++","Vasa (Ship)"],thumbnails:{default:{url:"https://i.ytimg.com/vi/ltCgzYcpFUI/default.jpg",height:90,width:120}},title:"Why C++ Sails When the Vasa Sank"}}]}},pathContext:{slug:"bjarne-stroustrup-author",tag:"Bjarne Stroustrup (Author)"}}}});
//# sourceMappingURL=path---tag-bjarne-stroustrup-author-02af439dd769180c7a56.js.map