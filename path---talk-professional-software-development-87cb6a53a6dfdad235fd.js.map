{"version":3,"sources":["webpack:///path---talk-professional-software-development-87cb6a53a6dfdad235fd.js","webpack:///./.cache/json/talk-professional-software-development.json"],"names":["webpackJsonp","3154","module","exports","data","talkJson","description","meta","duration","presenter","name","slug","source","id","provider","tag","title","allTalkJson","edges","node","thumbnails","default","url","height","width","pathContext","tags"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,UAAYC,YAAA,iyBAAAC,MAAyzBC,SAAA,UAAoBC,WAAcC,KAAA,qCAA6CC,KAAA,oCAAAC,QAAsDC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,+DAAAC,MAAA,qCAAmHC,aAAgBC,QAAUC,MAAQb,YAAA,6dAAAC,MAAqfC,SAAA,WAAqBC,WAAcC,KAAA,cAAoBE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,gCAAAI,KAAA,mCAAAK,YAAgGC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,oCAA6CG,MAAQb,YAAA,ytBAAAC,MAA+uBC,SAAA,YAAsBC,WAAcC,KAAA,eAAqBE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,wCAAAI,KAAA,wBAAAK,YAA6FC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,4CAAqDG,MAAQb,YAAA,ymBAAAC,MAA+nBC,SAAA,YAAsBC,WAAcC,KAAA,eAAqBE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,iBAAAI,KAAA,uCAAAK,YAAqFC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,oBAA6BG,MAAQb,YAAA,0eAAAC,MAAigBC,SAAA,YAAsBC,WAAcC,KAAA,eAAqBE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,0BAAAI,KAAA,+BAAAK,YAAsFC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,mBAA4BG,MAAQb,YAAA,yrBAAAC,MAA+sBC,SAAA,YAAsBC,WAAcC,KAAA,qBAA2BE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,iDAAAI,KAAA,mCAAAK,YAAiHC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,oDAA6DG,MAAQb,YAAA,kwCAAAC,MAAwxCC,SAAA,YAAsBC,WAAcC,KAAA,aAAmBE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,kCAAAI,KAAA,mEAAAK,YAAkIC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,qCAA8CG,MAAQb,YAAA,6gBAAAC,MAAmiBC,SAAA,WAAqBC,WAAcC,KAAA,aAAmBE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,8BAAAI,KAAA,2BAAAK,YAAsFC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,mCAA2CS,aAAgBd,KAAA,oCAAAe,MAAA","file":"path---talk-professional-software-development-87cb6a53a6dfdad235fd.js","sourcesContent":["webpackJsonp([60284980927384],{\n\n/***/ 3154:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"talkJson\":{\"description\":\"We’ve come a long way in the last 20 years. We start our journey in the late 80s and our \\\"discovery\\\" of design principles such as The Open Closed Principle and the Liskov Substitution Principle. In the middle 90s, we discovered that these principle led to repeating patterns of design. We gave those patterns names such as Visitor and Decorator. At the turn of the millennium we found that the benefits gained from the principles and patterns could be amplified by combining them with practices such as Test Driven Development and Continuous Integration. And now, as the decade is coming to a close, we have found that these principles, patterns, and practices have driven us to define a true profession. What will that profession require of us, and who among us can truly claim to be professional?\",\"meta\":{\"duration\":\"PT1H8S\"},\"presenter\":{\"name\":\"\\\"Uncle Bob\\\" - Robert Cecil Martin\"},\"slug\":\"professional-software-development\",\"source\":{\"id\":\"zwtg7lIMUaQ\",\"provider\":\"youtube\"},\"tag\":[\"Software Engineering\",\"Carrer\",\"Agile\",\"NDC Conference 2012\"],\"title\":\"Professional Software Development\"},\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"There are now several frameworks designed to address the demand for \\\"big agile.\\\"\\n\\nIn this talk Jez will explain the flaws in such frameworks, why they so often fail to produce the desired effects, and what we should do instead. He will also address some common organizational obstacles to moving fast at scale: governance, budgeting, and the project paradigm - and discuss how to address them. Warning: this talk will include liberal use of real, statistically sound data.\",\"meta\":{\"duration\":\"PT51M2S\"},\"presenter\":{\"name\":\"Jez Humble\"},\"source\":{\"id\":\"2zYxWEZ0gYg\",\"provider\":\"youtube\"},\"slug\":\"why-scaling-agile-doesnt-work\",\"tag\":[\"GOTO Conference\",\"Agile\",\"Scrum\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/2zYxWEZ0gYg/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Why Scaling Agile Doesn't Work\"}},{\"node\":{\"description\":\"Mob Programming is a development practice where the whole team works on the same thing, at the same time, in the same space, and on the same computer. It is a whole-team approach to doing all the work the team does including designing, coding, testing, and working with the customers, users and other stakeholders. This is an evolutionary step beyond pair programming, and accentuates face-to-face communication, team alignment, collaboration, and self-organizing team concepts of the Agile approach to software development. Mob Programming can be a highly effective approach to software development. Please join me as I share how the concept got started, the benefits, techniques we use, and some of the problems we've faced.\",\"meta\":{\"duration\":\"PT50M25S\"},\"presenter\":{\"name\":\"Woody Zuill\"},\"source\":{\"id\":\"8cy64qkgTyI\",\"provider\":\"youtube\"},\"slug\":\"mob-programming-a-whole-team-approach\",\"tag\":[\"Agile\",\"Productivity\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/8cy64qkgTyI/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Mob Programming, A Whole Team Approach\"}},{\"node\":{\"description\":\"This presentation was recorded at GOTO Copenhagen 2015\\nhttp://gotocph.com\\n\\nErik Meijer - Founder at Applied Duality, Inc.\\n\\nABSTRACT\\nErik challenges the basic ideas on Scrum & Agile and how developers should be developing code for the future. In the next decade every business will be digitized and effectively become a software company. Leveraging software, and, in general, computational [...]\\nDownload slides and read the full abstract here:\\nhttp://gotocon.com/cph-2015/presentation/Keynote:%20One%20Hacker%20Way\\n\\nhttps://twitter.com/gotocph\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT55M37S\"},\"presenter\":{\"name\":\"Erik Meijer\"},\"source\":{\"id\":\"FvMuPtuvP5w\",\"provider\":\"youtube\"},\"slug\":\"one-hacker-way\",\"tag\":[\"GOTO 2015\",\"Keynote\",\"Scrum\",\"Agile\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/FvMuPtuvP5w/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"One Hacker Way\"}},{\"node\":{\"description\":\"Dave Thomas was one of the creators of the Agile Manifesto. A year ago, he told us that Agile is Dead. How could this be? Why had he deserted us? And what are we to do? It turns out that while the \\\"Agile\\\" industry is busy debasing the meaning of the word, the underlying values are still strong. In this talk, Dave will draw a distinction, and show us how to reclaim agility for ourselves. As usual, he'll probably end up making some friends, and making some enemies. Which will you be?\",\"meta\":{\"duration\":\"PT40M39S\"},\"presenter\":{\"name\":\"Dave Thomas\"},\"source\":{\"id\":\"a-BOSpxYJ9M\",\"provider\":\"youtube\"},\"slug\":\"agile-is-dead-pragmatic\",\"tag\":[\"Keynote\",\"Agile\",\"GOTO 2015\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/a-BOSpxYJ9M/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Agile is Dead\"}},{\"node\":{\"description\":\"Many people have experienced using Agile approaches within teams to deliver more working software, but what can be learnt from combing these approaches with Product Development?\\n\\nThis talk will cover the top seven hard-earned tips I learnt from several years spent as a Senior Product Manger for BBC Worldwide. Ever wondered how you could influence the product you were building? How can you use Agile approaches to learn about what the right product to build is? How do you overcome defensiveness? How can you design experiments that challenge assumptions and encourage change?\\n\\nThis talk will provide some answers, combining ideas from organisational learning, psychology and negotiation.\",\"meta\":{\"duration\":\"PT43M45S\"},\"presenter\":{\"name\":\"Benjamin Mitchell\"},\"source\":{\"id\":\"v7bNTqMlq-E\",\"provider\":\"youtube\"},\"slug\":\"top-7-agile-tips-i-learnt-as-a-product-manager\",\"tag\":[\"GOTO Conference\",\"Agile\",\"Scrum\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/v7bNTqMlq-E/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Top 7 Agile Tips I learnt as a Product Manager\"}},{\"node\":{\"description\":\"Software gets complicated fast. Most of good architecture and design practise is about trying to slow the rate at which software gets complicated. You can’t stop it, it’s a form of entropy. You can only slow it down and do your level best to stay on top of things.\\n\\nOne way to manage the mess is to maximise the likelihood that everyone knows what’s going on in the codebase. This requires two things: consistency and replaceability. Consistency implies you can make reasonable assumptions about unfamiliar parts of the application. Replaceability means you can kill code easily and replace it with something better.\\n\\nDan North argues that code should either be new enough that someone remembers writing it, or well-enough established that everyone knows how it works. It’s code in that awkward middle stage, between brand new and part-of-the-furniture, that gets forgotten about and starts to smell. If code is going to die it should die quickly. If it is going to stick around it should be stable.\\n\\nIn this talk, Dan describes a model for thinking about the age of code and argues for replaceability as a first class concern. He also discovers that if you optimise for both replaceability and consistency you can end up with something that looks a lot like microservices.\",\"meta\":{\"duration\":\"PT37M22S\"},\"presenter\":{\"name\":\"Dan North\"},\"source\":{\"id\":\"4Y0tOi7QWqM\",\"provider\":\"youtube\"},\"slug\":\"software-that-fits-in-your-head\",\"tag\":[\"Agile\",\"GOTO Conference\",\"Mircoservices\",\"Software Architecture\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/4Y0tOi7QWqM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Software that Fits in Your Head\"}},{\"node\":{\"description\":\"Some teams are orders of magnitude more effective than others, turning around business solutions in days or even hours. Their secret is a combination of smart technology choices, great development habits and a powerful team dynamic. In this talk Dan describes a number of patterns of behaviour that he's identified working with some great teams, beyond the basics of co-location, stand-ups and pair rotation. You'll gain a new appreciation for old techniques like code reviews, and even working in silos won't seem so bad!\",\"meta\":{\"duration\":\"PT51M4S\"},\"presenter\":{\"name\":\"Dan North\"},\"source\":{\"id\":\"lvs7VEsQzKY\",\"provider\":\"youtube\"},\"slug\":\"patterns-of-effective-teams\",\"tag\":[\"GOTO Conference\",\"Agile\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/lvs7VEsQzKY/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Patterns of Effective Teams\"}}]}},\"pathContext\":{\"slug\":\"professional-software-development\",\"tags\":[\"Software Engineering\",\"Carrer\",\"Agile\",\"NDC Conference 2012\"]}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---talk-professional-software-development-87cb6a53a6dfdad235fd.js","module.exports = {\"data\":{\"talkJson\":{\"description\":\"We’ve come a long way in the last 20 years. We start our journey in the late 80s and our \\\"discovery\\\" of design principles such as The Open Closed Principle and the Liskov Substitution Principle. In the middle 90s, we discovered that these principle led to repeating patterns of design. We gave those patterns names such as Visitor and Decorator. At the turn of the millennium we found that the benefits gained from the principles and patterns could be amplified by combining them with practices such as Test Driven Development and Continuous Integration. And now, as the decade is coming to a close, we have found that these principles, patterns, and practices have driven us to define a true profession. What will that profession require of us, and who among us can truly claim to be professional?\",\"meta\":{\"duration\":\"PT1H8S\"},\"presenter\":{\"name\":\"\\\"Uncle Bob\\\" - Robert Cecil Martin\"},\"slug\":\"professional-software-development\",\"source\":{\"id\":\"zwtg7lIMUaQ\",\"provider\":\"youtube\"},\"tag\":[\"Software Engineering\",\"Carrer\",\"Agile\",\"NDC Conference 2012\"],\"title\":\"Professional Software Development\"},\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"There are now several frameworks designed to address the demand for \\\"big agile.\\\"\\n\\nIn this talk Jez will explain the flaws in such frameworks, why they so often fail to produce the desired effects, and what we should do instead. He will also address some common organizational obstacles to moving fast at scale: governance, budgeting, and the project paradigm - and discuss how to address them. Warning: this talk will include liberal use of real, statistically sound data.\",\"meta\":{\"duration\":\"PT51M2S\"},\"presenter\":{\"name\":\"Jez Humble\"},\"source\":{\"id\":\"2zYxWEZ0gYg\",\"provider\":\"youtube\"},\"slug\":\"why-scaling-agile-doesnt-work\",\"tag\":[\"GOTO Conference\",\"Agile\",\"Scrum\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/2zYxWEZ0gYg/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Why Scaling Agile Doesn't Work\"}},{\"node\":{\"description\":\"Mob Programming is a development practice where the whole team works on the same thing, at the same time, in the same space, and on the same computer. It is a whole-team approach to doing all the work the team does including designing, coding, testing, and working with the customers, users and other stakeholders. This is an evolutionary step beyond pair programming, and accentuates face-to-face communication, team alignment, collaboration, and self-organizing team concepts of the Agile approach to software development. Mob Programming can be a highly effective approach to software development. Please join me as I share how the concept got started, the benefits, techniques we use, and some of the problems we've faced.\",\"meta\":{\"duration\":\"PT50M25S\"},\"presenter\":{\"name\":\"Woody Zuill\"},\"source\":{\"id\":\"8cy64qkgTyI\",\"provider\":\"youtube\"},\"slug\":\"mob-programming-a-whole-team-approach\",\"tag\":[\"Agile\",\"Productivity\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/8cy64qkgTyI/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Mob Programming, A Whole Team Approach\"}},{\"node\":{\"description\":\"This presentation was recorded at GOTO Copenhagen 2015\\nhttp://gotocph.com\\n\\nErik Meijer - Founder at Applied Duality, Inc.\\n\\nABSTRACT\\nErik challenges the basic ideas on Scrum & Agile and how developers should be developing code for the future. In the next decade every business will be digitized and effectively become a software company. Leveraging software, and, in general, computational [...]\\nDownload slides and read the full abstract here:\\nhttp://gotocon.com/cph-2015/presentation/Keynote:%20One%20Hacker%20Way\\n\\nhttps://twitter.com/gotocph\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT55M37S\"},\"presenter\":{\"name\":\"Erik Meijer\"},\"source\":{\"id\":\"FvMuPtuvP5w\",\"provider\":\"youtube\"},\"slug\":\"one-hacker-way\",\"tag\":[\"GOTO 2015\",\"Keynote\",\"Scrum\",\"Agile\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/FvMuPtuvP5w/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"One Hacker Way\"}},{\"node\":{\"description\":\"Dave Thomas was one of the creators of the Agile Manifesto. A year ago, he told us that Agile is Dead. How could this be? Why had he deserted us? And what are we to do? It turns out that while the \\\"Agile\\\" industry is busy debasing the meaning of the word, the underlying values are still strong. In this talk, Dave will draw a distinction, and show us how to reclaim agility for ourselves. As usual, he'll probably end up making some friends, and making some enemies. Which will you be?\",\"meta\":{\"duration\":\"PT40M39S\"},\"presenter\":{\"name\":\"Dave Thomas\"},\"source\":{\"id\":\"a-BOSpxYJ9M\",\"provider\":\"youtube\"},\"slug\":\"agile-is-dead-pragmatic\",\"tag\":[\"Keynote\",\"Agile\",\"GOTO 2015\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/a-BOSpxYJ9M/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Agile is Dead\"}},{\"node\":{\"description\":\"Many people have experienced using Agile approaches within teams to deliver more working software, but what can be learnt from combing these approaches with Product Development?\\n\\nThis talk will cover the top seven hard-earned tips I learnt from several years spent as a Senior Product Manger for BBC Worldwide. Ever wondered how you could influence the product you were building? How can you use Agile approaches to learn about what the right product to build is? How do you overcome defensiveness? How can you design experiments that challenge assumptions and encourage change?\\n\\nThis talk will provide some answers, combining ideas from organisational learning, psychology and negotiation.\",\"meta\":{\"duration\":\"PT43M45S\"},\"presenter\":{\"name\":\"Benjamin Mitchell\"},\"source\":{\"id\":\"v7bNTqMlq-E\",\"provider\":\"youtube\"},\"slug\":\"top-7-agile-tips-i-learnt-as-a-product-manager\",\"tag\":[\"GOTO Conference\",\"Agile\",\"Scrum\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/v7bNTqMlq-E/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Top 7 Agile Tips I learnt as a Product Manager\"}},{\"node\":{\"description\":\"Software gets complicated fast. Most of good architecture and design practise is about trying to slow the rate at which software gets complicated. You can’t stop it, it’s a form of entropy. You can only slow it down and do your level best to stay on top of things.\\n\\nOne way to manage the mess is to maximise the likelihood that everyone knows what’s going on in the codebase. This requires two things: consistency and replaceability. Consistency implies you can make reasonable assumptions about unfamiliar parts of the application. Replaceability means you can kill code easily and replace it with something better.\\n\\nDan North argues that code should either be new enough that someone remembers writing it, or well-enough established that everyone knows how it works. It’s code in that awkward middle stage, between brand new and part-of-the-furniture, that gets forgotten about and starts to smell. If code is going to die it should die quickly. If it is going to stick around it should be stable.\\n\\nIn this talk, Dan describes a model for thinking about the age of code and argues for replaceability as a first class concern. He also discovers that if you optimise for both replaceability and consistency you can end up with something that looks a lot like microservices.\",\"meta\":{\"duration\":\"PT37M22S\"},\"presenter\":{\"name\":\"Dan North\"},\"source\":{\"id\":\"4Y0tOi7QWqM\",\"provider\":\"youtube\"},\"slug\":\"software-that-fits-in-your-head\",\"tag\":[\"Agile\",\"GOTO Conference\",\"Mircoservices\",\"Software Architecture\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/4Y0tOi7QWqM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Software that Fits in Your Head\"}},{\"node\":{\"description\":\"Some teams are orders of magnitude more effective than others, turning around business solutions in days or even hours. Their secret is a combination of smart technology choices, great development habits and a powerful team dynamic. In this talk Dan describes a number of patterns of behaviour that he's identified working with some great teams, beyond the basics of co-location, stand-ups and pair rotation. You'll gain a new appreciation for old techniques like code reviews, and even working in silos won't seem so bad!\",\"meta\":{\"duration\":\"PT51M4S\"},\"presenter\":{\"name\":\"Dan North\"},\"source\":{\"id\":\"lvs7VEsQzKY\",\"provider\":\"youtube\"},\"slug\":\"patterns-of-effective-teams\",\"tag\":[\"GOTO Conference\",\"Agile\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/lvs7VEsQzKY/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Patterns of Effective Teams\"}}]}},\"pathContext\":{\"slug\":\"professional-software-development\",\"tags\":[\"Software Engineering\",\"Carrer\",\"Agile\",\"NDC Conference 2012\"]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/talk-professional-software-development.json\n// module id = 3154\n// module chunks = 60284980927384"],"sourceRoot":""}