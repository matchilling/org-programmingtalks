webpackJsonp([0xc0967493e34f],{2803:function(e,o){e.exports={data:{allTalkJson:{edges:[{node:{description:"Typed Clojure is an optional type system for Clojure. Typed Clojure is being used in production systems to help programmers verify, document and design correct Clojure code.\nIn this talk, we introduce the goals of Typed Clojure and discuss how effectively Typed Clojure works in practice.\nWe give an overview of the kinds of problems being solved today with Typed Clojure, and where your Clojure projects might benefit from a type system like it.\n\nby Ambrose Bonnaire-Sergeant (@ambrosebs)\n\nAmbrose is the creator of Typed Clojure.",meta:{duration:"PT41M58S"},presenter:{name:null},source:{id:"a0gT0syAXsY",provider:"youtube"},slug:"typed-clojure-in-practice-by-ambrose-bonnaire-sergeant",tag:["Clojure (Programming Language)","Typed Clojure","Type System"],thumbnails:{default:{url:"https://i.ytimg.com/vi/a0gT0syAXsY/default.jpg",height:90,width:120}},title:'"Typed Clojure in Practice" by Ambrose Bonnaire Sergeant'}}]}},pathContext:{slug:"type-system",tag:"Type System"}}}});
//# sourceMappingURL=path---tag-type-system-4e29931e25ebf61bcba8.js.map