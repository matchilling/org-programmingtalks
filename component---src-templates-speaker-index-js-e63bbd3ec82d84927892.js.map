{"version":3,"sources":["webpack:///./src/templates/speaker/index.js"],"names":["findProfileBySlug","slug","Object","keys","speakers","reduce","acc","name","SpeakerTemplate","render","this","props","location","pathname","replace","speaker","length","String","unslugify","bio","defaultProfile","title","className","list","normalizeResult","data","allTalkJson","map","talk","tags","tag","path","slugify","presenter","titleElement","React","Component","query"],"mappings":"28LASA,IAAMA,EAAoB,SAAAC,GACxB,OAAOC,OAAOC,KAAKC,GAAUC,QAAO,SAACC,EAAKC,GAQxC,OAPIN,IAASG,EAASG,GAAMN,OAC1BK,EAAG,eACDC,QACGH,EAASG,KAITD,IACN,KAUgBE,E,gLACnBC,OAAA,WAAU,IAGFR,EAFeS,KAAKC,MAAMC,SAAxBC,SAEcC,QAAQ,YAAa,IAAIA,QAAQ,IAAK,IACtDC,EAC4C,IAAhDb,OAAOC,KAAKH,EAAkBC,IAAOe,OACjChB,EAAkBC,GAdL,SAAAA,GACrB,MAAO,CACLM,KAAMU,IAAOC,UAAUjB,GACvBkB,IAAK,IAYCC,CAAenB,GAErB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQoB,MAAK,wBAA0BN,EAAQR,OAC/C,yBAAKe,UAAU,OACb,4BAAKP,EAAQR,MAEZQ,EAAQI,IAAM,yBAAKG,UAAU,OAAOP,EAAQI,KAAa,KAE1D,kBAAC,IAAD,CACEI,KAAMC,0BAAgBd,KAAKC,MAAMc,KAAKC,aAAaC,KAAI,SAAAC,GACrD,OAAO,OAAP,QACEC,KAAMD,EAAKE,IAAIH,KAAI,SAAAG,GACjB,MAAO,CAAEvB,KAAMuB,EAAKC,KAAK,QAASd,IAAOe,QAAQF,OAEnDC,KAAK,SAAUH,EAAK3B,KACpBgC,UAAW,CACT1B,KAAMqB,EAAKK,UAAU1B,KACrBwB,KAAK,YAAad,IAAOe,QAAQJ,EAAKK,UAAU1B,QAE/CqB,MAGPP,MAAK,wBAA0BN,EAAQR,KACvC2B,aAAa,U,GAjCoBC,IAAMC,WA0CtCC,EAAK","file":"component---src-templates-speaker-index-js-e63bbd3ec82d84927892.js","sourcesContent":["import Helmet from 'react-helmet'\nimport { normalizeResult } from '../../utils/graphql'\nimport React from 'react'\nimport speakers from '../../../data/speaker/index.json'\nimport String from '../../utils/string'\nimport TalkList from '../../components/TalkList'\nimport { graphql } from 'gatsby'\nimport Layout from '../../components/Layout'\n\nconst findProfileBySlug = slug => {\n  return Object.keys(speakers).reduce((acc, name) => {\n    if (slug === speakers[name].slug) {\n      acc = {\n        name,\n        ...speakers[name],\n      }\n    }\n\n    return acc\n  }, {})\n}\n\nconst defaultProfile = slug => {\n  return {\n    name: String.unslugify(slug),\n    bio: '',\n  }\n}\n\nexport default class SpeakerTemplate extends React.Component {\n  render() {\n    const { pathname } = this.props.location\n\n    const slug = pathname.replace('/speaker/', '').replace('/', '')\n    const speaker =\n      Object.keys(findProfileBySlug(slug)).length !== 0\n        ? findProfileBySlug(slug)\n        : defaultProfile(slug)\n\n    return (\n      <Layout>\n        <Helmet title={`Programming Talks by ${speaker.name}`} />\n        <div className=\"row\">\n          <h1>{speaker.name}</h1>\n\n          {speaker.bio ? <div className=\"bio\">{speaker.bio}</div> : null}\n\n          <TalkList\n            list={normalizeResult(this.props.data.allTalkJson).map(talk => {\n              return {\n                tags: talk.tag.map(tag => {\n                  return { name: tag, path: `/tag/${String.slugify(tag)}` }\n                }),\n                path: `/talk/${talk.slug}`,\n                presenter: {\n                  name: talk.presenter.name,\n                  path: `/speaker/${String.slugify(talk.presenter.name)}`,\n                },\n                ...talk,\n              }\n            })}\n            title={`Programming Talks by ${speaker.name}`}\n            titleElement=\"h3\"\n          />\n        </div>\n      </Layout>\n    )\n  }\n}\n\n/*eslint no-undef: \"off\"*/\nexport const query = graphql`\n  query SpeakerQuery($speaker: String!) {\n    allTalkJson(filter: { presenter: { name: { eq: $speaker } } }) {\n      edges {\n        node {\n          description\n          meta {\n            duration\n          }\n          presenter {\n            name\n          }\n          source {\n            id\n            provider\n          }\n          slug\n          tag\n          thumbnails {\n            default {\n              url\n              height\n              width\n            }\n          }\n          title\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}