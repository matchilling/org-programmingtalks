webpackJsonp([73158622317426],{3140:function(e,o){e.exports={data:{talkJson:{description:'Speaker: Paul Tagliamonte\n\nThis talk will cover the internals of Python, such AST, Import hooks, creating a console, and a very brief overview of Python internal formats (such as pyc files), by way of looking over the implementation of a Lisp called "Hy". No Lisp knowledge is required.\n\nSlides can be found at: https://speakerdeck.com/pycon2014 and https://github.com/PyCon/2014-slides',meta:{duration:"PT47M9S"},presenter:{name:null},slug:"paul-tagliamonte-getting-hy-on-python-how-to-implement-a-lisp-front-end-to-python-pycon-2014",source:{id:"AmMaN1AokTI",provider:"youtube"},tag:["PyCon2014"],title:"Paul Tagliamonte: Getting Hy on Python: How to implement a Lisp front-end to Python - PyCon 2014"},allTalkJson:{edges:[{node:{description:'Speaker: Alex Gaynor\n\n"The common wisdom is that Python is slow. And yet people run high performance software on it. It\'s hard to make Python fast, and yet there are incredibly high performance Python VMs. This talk breaks down the facts and the myths of Python performance."\n\nSlides can be found at: https://speakerdeck.com/pycon2014 and https://github.com/PyCon/2014-slides',meta:{duration:"PT36M11S"},presenter:{name:null},source:{id:"7eeEf_rAJds",provider:"youtube"},slug:"alex-gaynor-fast-python-slow-python-pycon-2014",tag:["PyCon2014"],thumbnails:{default:{url:"https://i.ytimg.com/vi/7eeEf_rAJds/default.jpg",height:90,width:120}},title:"Alex Gaynor: Fast Python, Slow Python - PyCon 2014"}},{node:{description:"Speaker: Colton Myers\n\nDecorators are an invaluable addition to anyone's arsenal of python tools and tricks. We will learn what a decorator is, how decorators are created, and then explore some of the cooler applications for decorators in our everyday projects.\n\nSlides can be found at: https://speakerdeck.com/pycon2014 and https://github.com/PyCon/2014-slides",meta:{duration:"PT31M31S"},presenter:{name:null},source:{id:"9oyr0mocZTg",provider:"youtube"},slug:"colton-myers-decorators-a-powerful-weapon-in-your-python-arsenal-pycon-2014",tag:["PyCon2014"],thumbnails:{default:{url:"https://i.ytimg.com/vi/9oyr0mocZTg/default.jpg",height:90,width:120}},title:"Colton Myers: Decorators: A Powerful Weapon in your Python Arsenal - PyCon 2014"}},{node:{description:"Speaker: David Beazley\n\nPython generators have long been useful for solving all sorts of problems involving iteration and data flow. However, one of their more powerful uses is in customizing various aspects of program control flow. In this tutorial, we'll look at some more exotic uses of generators such as writing context managers, inlining callback functions, eliminating recursion, implementing actors, and more.\n\nSlides can be found at: https://speakerdeck.com/pycon2014 and https://github.com/PyCon/2014-slides",meta:{duration:"PT3H50M55S"},presenter:{name:null},source:{id:"D1twn9kLmYg",provider:"youtube"},slug:"david-beazley-generators-the-final-frontier-pycon-2014",tag:["PyCon2014"],thumbnails:{default:{url:"https://i.ytimg.com/vi/D1twn9kLmYg/default.jpg",height:90,width:120}},title:"David Beazley: Generators: The Final Frontier - PyCon 2014"}},{node:{description:'Speaker: Miguel Grinberg\n\nFlask is a web framework for Python based on Werkzeug, Jinja 2 and good intentions. It is considered a micro-framework, but don\'t get the "micro" part fool you; Flask can do everything others can do, many times in a simpler, leaner way. In this tutorial session you will follow me as I write a complete web application in front of your eyes using the core framework and a handful of extensions.\n\nSlides can be found at: https://speakerdeck.com/pycon2014 and https://github.com/PyCon/2014-slides',meta:{duration:"PT3H40M29S"},presenter:{name:null},source:{id:"FGrIyBDQLPg",provider:"youtube"},slug:"miguel-grinberg-flask-by-example-pycon-2014",tag:["PyCon2014"],thumbnails:{default:{url:"https://i.ytimg.com/vi/FGrIyBDQLPg/default.jpg",height:90,width:120}},title:"Miguel Grinberg: Flask by Example - PyCon 2014"}},{node:{description:"Speaker: Craig Kerstiens\n\nTo many developers the database is a black box. You expect to be able to put data into your database, have it to stay there, and get it out when you query it... hopefully in a performant manner. When its not performant enough the two options are usually add some indexes or throw some hardware at it. We'll walk through a bit of a clearer guide of how you can understand and manage DB performance.\n\nSlides can be found at: https://speakerdeck.com/pycon2014 and https://github.com/PyCon/2014-slides",meta:{duration:"PT33M50S"},presenter:{name:null},source:{id:"MpH8W5hce9I",provider:"youtube"},slug:"craig-kerstiens-postgres-performance-for-humans-pycon-2014",tag:["PyCon2014"],thumbnails:{default:{url:"https://i.ytimg.com/vi/MpH8W5hce9I/default.jpg",height:90,width:120}},title:"Craig Kerstiens: Postgres Performance for Humans - PyCon 2014"}},{node:{description:'Speaker: David Beazley\n\nSo, what happens when you lock a Python programmer in a secret vault containing 1.5 TBytes of C++ source code and no internet connection? Find out as I describe how I used Python as a secret weapon of "discovery" in an epic legal battle.\n\nSlides can be found at: https://speakerdeck.com/pycon2014 and https://github.com/PyCon/2014-slides',meta:{duration:"PT47M50S"},presenter:{name:null},source:{id:"RZ4Sn-Y7AP8",provider:"youtube"},slug:"david-beazley-discovering-python-pycon-2014",tag:["PyCon2014"],thumbnails:{default:{url:"https://i.ytimg.com/vi/RZ4Sn-Y7AP8/default.jpg",height:90,width:120}},title:"David Beazley: Discovering Python - PyCon 2014"}}]}},pathContext:{slug:"paul-tagliamonte-getting-hy-on-python-how-to-implement-a-lisp-front-end-to-python-pycon-2014",tags:["PyCon2014"]}}}});
//# sourceMappingURL=path---talk-paul-tagliamonte-getting-hy-on-python-how-to-implement-a-lisp-front-end-to-python-pycon-2014-d6061297313dacaab4e6.js.map