{"version":3,"sources":["webpack:///path---tag-oop-2014-a004df8cc148f54449ff.js","webpack:///./.cache/json/tag-oop-2014.json"],"names":["webpackJsonp","2538","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,osBAAAC,MAA0tBC,SAAA,YAAsBC,WAAcC,KAAA,iBAAuBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,wBAAAC,KAAA,uCAAAC,YAA4FC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,6BAAwChB,MAAQC,YAAA,ilBAAAC,MAAumBC,SAAA,WAAqBC,WAAcC,KAAA,iBAAuBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,4BAAAC,KAAA,kCAAAC,YAA2FC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,gCAAwCC,aAAgBR,KAAA,UAAAC,IAAA","file":"path---tag-oop-2014-a004df8cc148f54449ff.js","sourcesContent":["webpackJsonp([209039578906306],{\n\n/***/ 2538:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"This is the second part of Martin Fowlers keynote at OOP 2014 in Munich and is a tricky talk to describe. Usually Martin likes a title and abstract to describe what the talk is about - but this talk is a journey, and he doesn't want to tell you where he's going, but instead to explore the ground with him. Martin Fowler will say that it starts with his biggest problem with most adoption of agile software development - the nature of the interaction between users, analysts, and programmers. It goes on to explore these roles, raising questions about the relationship of programmers to users, our responsibilities to them, and finally the Two Great Challenges that I think programmers need to face up to.\",\"meta\":{\"duration\":\"PT24M12S\"},\"presenter\":{\"name\":\"Martin Fowler\"},\"source\":{\"id\":\"Z8aECe4lp44\",\"provider\":\"youtube\"},\"slug\":\"not-just-code-monkeys\",\"tag\":[\"OOP2014\",\"Munich\",\"Food For Thought\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/Z8aECe4lp44/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"\\\"Not Just Code Monkeys\\\"\"}},{\"node\":{\"description\":\"Over the last decade or so, Refactoring has become a widely used technique to keep a high internal quality for a codebase. However most teams don't make enough use of refactoring because they aren't aware of the various workflows in which you can use it. In this keynote talk from OOP 2014 in Munich, Martin Fowler explores some of these workflows: such as Litter-Pickup Refactoring, Comprehension Refactoring, and Preparatory Refactoring. Martin also reminds people why common justifications for refactoring will sabotage your best efforts. (This talk also has a treatment as an infodeck.)\",\"meta\":{\"duration\":\"PT27M5S\"},\"presenter\":{\"name\":\"Martin Fowler\"},\"source\":{\"id\":\"vqEg37e4Mkw\",\"provider\":\"youtube\"},\"slug\":\"-workflows-of-refactoring\",\"tag\":[\"OOP2014\",\"Munich\",\"Refactoring\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/vqEg37e4Mkw/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Workflows of Refactoring\"}}]}},\"pathContext\":{\"slug\":\"oop2014\",\"tag\":\"OOP2014\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-oop-2014-a004df8cc148f54449ff.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"This is the second part of Martin Fowlers keynote at OOP 2014 in Munich and is a tricky talk to describe. Usually Martin likes a title and abstract to describe what the talk is about - but this talk is a journey, and he doesn't want to tell you where he's going, but instead to explore the ground with him. Martin Fowler will say that it starts with his biggest problem with most adoption of agile software development - the nature of the interaction between users, analysts, and programmers. It goes on to explore these roles, raising questions about the relationship of programmers to users, our responsibilities to them, and finally the Two Great Challenges that I think programmers need to face up to.\",\"meta\":{\"duration\":\"PT24M12S\"},\"presenter\":{\"name\":\"Martin Fowler\"},\"source\":{\"id\":\"Z8aECe4lp44\",\"provider\":\"youtube\"},\"slug\":\"not-just-code-monkeys\",\"tag\":[\"OOP2014\",\"Munich\",\"Food For Thought\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/Z8aECe4lp44/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"\\\"Not Just Code Monkeys\\\"\"}},{\"node\":{\"description\":\"Over the last decade or so, Refactoring has become a widely used technique to keep a high internal quality for a codebase. However most teams don't make enough use of refactoring because they aren't aware of the various workflows in which you can use it. In this keynote talk from OOP 2014 in Munich, Martin Fowler explores some of these workflows: such as Litter-Pickup Refactoring, Comprehension Refactoring, and Preparatory Refactoring. Martin also reminds people why common justifications for refactoring will sabotage your best efforts. (This talk also has a treatment as an infodeck.)\",\"meta\":{\"duration\":\"PT27M5S\"},\"presenter\":{\"name\":\"Martin Fowler\"},\"source\":{\"id\":\"vqEg37e4Mkw\",\"provider\":\"youtube\"},\"slug\":\"-workflows-of-refactoring\",\"tag\":[\"OOP2014\",\"Munich\",\"Refactoring\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/vqEg37e4Mkw/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Workflows of Refactoring\"}}]}},\"pathContext\":{\"slug\":\"oop2014\",\"tag\":\"OOP2014\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-oop-2014.json\n// module id = 2538\n// module chunks = 209039578906306"],"sourceRoot":""}