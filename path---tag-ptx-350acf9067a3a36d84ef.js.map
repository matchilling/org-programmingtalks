{"version":3,"sources":["webpack:///path---tag-ptx-350acf9067a3a36d84ef.js","webpack:///./.cache/json/tag-ptx.json"],"names":["webpackJsonp","2606","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,wjCAAAC,MAA8kCC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,yCAAAC,KAAA,cAAAC,YAAoFC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,+CAAuDC,aAAgBR,KAAA,MAAAC,IAAA","file":"path---tag-ptx-350acf9067a3a36d84ef.js","sourcesContent":["webpackJsonp([199650907398905],{\n\n/***/ 2606:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"In this talk, the PTX back-end for LLVM will be discussed, including its' past, present, and future. The current status of the back-end will be explored, with an emphasis on the portions of the LLVM IR instruction set and PTX intrinsics that are currently supported during code generation. This talk will also highlight the difficulties and issues that have been discovered while writing an LLVM back-end for a virtual ISA such as PTX, such as infinite register files. Through-out the talk, examples will be provided to highlight key features of the back-end and show preliminary performance data. \\nIn addition to back-end details, this talk will also highlight the use of Clang as a front-end for generating PTX code for NVIDIA GPUs. Through the use of Clang and the CUDA Driver API, GPGPU programs can be developed that harness the optimization power of the LLVM compiler infrastructure. Finally, the talk will conclude with an exploration of the open issues that remain in the backend, and a discussion on how the back-end can be used within larger GPGPU compiler projects.\",\"meta\":{\"duration\":\"PT39M34S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"Ux3F5MKuPjI\",\"provider\":\"youtube\"},\"slug\":\"ptx-back-end-gpu-programming-with-llvm\",\"tag\":[\"LLVM\",\"PTX\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/Ux3F5MKuPjI/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"PTX Back-End: GPU Programming With LLVM\"}}]}},\"pathContext\":{\"slug\":\"ptx\",\"tag\":\"PTX\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-ptx-350acf9067a3a36d84ef.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"In this talk, the PTX back-end for LLVM will be discussed, including its' past, present, and future. The current status of the back-end will be explored, with an emphasis on the portions of the LLVM IR instruction set and PTX intrinsics that are currently supported during code generation. This talk will also highlight the difficulties and issues that have been discovered while writing an LLVM back-end for a virtual ISA such as PTX, such as infinite register files. Through-out the talk, examples will be provided to highlight key features of the back-end and show preliminary performance data. \\nIn addition to back-end details, this talk will also highlight the use of Clang as a front-end for generating PTX code for NVIDIA GPUs. Through the use of Clang and the CUDA Driver API, GPGPU programs can be developed that harness the optimization power of the LLVM compiler infrastructure. Finally, the talk will conclude with an exploration of the open issues that remain in the backend, and a discussion on how the back-end can be used within larger GPGPU compiler projects.\",\"meta\":{\"duration\":\"PT39M34S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"Ux3F5MKuPjI\",\"provider\":\"youtube\"},\"slug\":\"ptx-back-end-gpu-programming-with-llvm\",\"tag\":[\"LLVM\",\"PTX\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/Ux3F5MKuPjI/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"PTX Back-End: GPU Programming With LLVM\"}}]}},\"pathContext\":{\"slug\":\"ptx\",\"tag\":\"PTX\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-ptx.json\n// module id = 2606\n// module chunks = 199650907398905"],"sourceRoot":""}