{"version":3,"sources":["webpack:///path---talk-thomas-pfaff-advanced-data-storage-3d273481220faa591d1f.js","webpack:///./.cache/json/talk-thomas-pfaff-advanced-data-storage.json"],"names":["webpackJsonp","3209","module","exports","data","talkJson","description","meta","duration","presenter","name","slug","source","id","provider","tag","title","allTalkJson","edges","node","thumbnails","default","url","height","width","pathContext","tags"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,UAAYC,YAAA,muBAAAC,MAAyvBC,SAAA,cAAwBC,WAAcC,KAAA,MAAYC,KAAA,qCAAAC,QAAuDC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,uEAAAC,MAAA,uCAA6HC,aAAgBC,QAAUC,MAAQb,YAAA,yrCAA+zBC,MAAgZC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,oCAAAI,KAAA,4CAAAK,YAA6GC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,4CAAqDG,MAAQb,YAAA,+gBAAAC,MAAqiBC,SAAA,WAAqBC,WAAcC,KAAA,mBAAyBE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,wCAAAI,KAAA,8EAAAK,YAAmJC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,8BAAuCG,MAAQb,YAAA,mWAAAC,MAAyXC,SAAA,YAAsBC,WAAcC,KAAA,kBAAwBE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,gDAAAI,KAAA,kBAAAK,YAA+FC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,mDAA4DG,MAAQb,YAAA,qkBAAAC,MAA2lBC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,uBAAAI,KAAA,qDAAAK,YAAyGC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,0BAAmCG,MAAQb,YAAA,+rBAAAC,MAAqtBC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,oEAAAI,KAAA,mDAAAK,YAAoJC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,yEAAkFG,MAAQb,YAAA,4RAAAC,MAAmTC,SAAA,aAAuBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,sDAAAI,KAAA,kRAAAK,YAAqWC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,0DAAmEG,MAAQb,YAAA,k3BAA6sBC,MAA2LC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,0DAAAI,KAAA,qEAAAK,YAA4JC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,iEAAyES,aAAgBd,KAAA,qCAAAe,MAAA","file":"path---talk-thomas-pfaff-advanced-data-storage-3d273481220faa591d1f.js","sourcesContent":["webpackJsonp([6804213096134],{\n\n/***/ 3209:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"talkJson\":{\"description\":\"In this tutorial we will give an introduction to two advanced data storage formats. HDF5 and NetCDF were designed to efficiently store the results of supercomputing applications like climate model outputs, or the data streams received from NASA's fleet of earth observing satellites. They provide a lot of optimizations concerning transparent file compression, speed of access or working with multiple files as if it were one large data set.A couple of Python libraries exist that allow fast and pythonic access to these formats.We will show you how to create and access these types of files from Python, and how to use their advanced features to tune them for maximum efficiency.Tutorial prerequisites and instructions.\\n\\nThomas Pfaff\",\"meta\":{\"duration\":\"PT1H19M39S\"},\"presenter\":{\"name\":null},\"slug\":\"thomas-pfaff-advanced-data-storage\",\"source\":{\"id\":\"AXlp7qxqu8E\",\"provider\":\"youtube\"},\"tag\":[\"pydata\",\"Berlin\",\"Python\",\"programming language\",\"lecture\",\"science\"],\"title\":\"Thomas Pfaff: Advanced Data Storage\"},\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"PyPy.js is an experiment in building a fast, compliant, in-browser python interpreter.  By compiling the PyPy interpreter into javascript, and retargeting its JIT compiler to emit asmjs code at runtime, it is possible to run python code in the browser at speeds competitive with a native python environment.  This talk will demonstrate the combination of technologies that make such a thing possible, the results that have been achieved so far, and the challenges that still remain when trying to take python onto javascript's home turf.\\n\\nWe'll cover: an overview of PyPy and why it's a good fit for this type of project; an introduction to asmjs and the rise of javascript as a compile target; what it looks like when you smoosh these two technologies together; a comparison with other approaches such as brython; and some concrete suggestions for how the result might be useful in practice.\\n\\nPyCon Australia is the national conference for users of the Python Programming Language. In August 2014, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. \\n\\nAugust 1-5, Brisbane, Queensland, Australia\",\"meta\":{\"duration\":\"PT25M38S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"8C9q94F6Uqo\",\"provider\":\"youtube\"},\"slug\":\"pypyjs-what-how-why-by-ryan-kelly\",\"tag\":[\"pyconau\",\"pycon-au 2014\",\"Python\",\"PyCon\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/8C9q94F6Uqo/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"PyPy.js: What? How? Why? by Ryan Kelly\"}},{\"node\":{\"description\":\"This presentation was recorded at GOTO Berlin 2015\\nhttp://gotober.com\\n\\nKevin Goldsmith - Vice President, Engineering at Spotify\\n\\nABSTRACT\\nThe software industry used to be all about building monoliths: monolithic applications and services, with bing-bang product releasees. All that has now changed [...]\\nDownload slides and read the full abstract here:\\nhttp://gotocon.com/berlin-2015/presentation/Microservices%20@%20Spotify\\n\\nhttps://twitter.com/gotober\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT49M8S\"},\"presenter\":{\"name\":\"Kevin Goldsmith\"},\"source\":{\"id\":\"7LGPeBgNFuU\",\"provider\":\"youtube\"},\"slug\":\"microservices-spotify-kevin-goldsmith\",\"tag\":[\"GOTO Conference\",\"Berlin\",\"Microservices\",\"Spotify\",\"Programming Languages\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/7LGPeBgNFuU/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Microservices at Spotify\"}},{\"node\":{\"description\":\"The behavior of names and values in Python can be confusing. Like many parts of Python, it has an underlying simplicity that can be hard to discern, especially if you are used to other programming languages. Here I'll explain how it all works, and present some facts and myths along the way.  Call-by-reference? Call-by-value? The answer will be clear!\",\"meta\":{\"duration\":\"PT25M20S\"},\"presenter\":{\"name\":\"Ned Batchelder\"},\"source\":{\"id\":\"_AEJHKGk9ns\",\"provider\":\"youtube\"},\"slug\":\"facts-and-myths-about-python-names-and-values\",\"tag\":[\"PyCon\",\"Python\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/_AEJHKGk9ns/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Facts and Myths about Python names and values\"}},{\"node\":{\"description\":\"Google Tech Talk (more info below)\\r\\nOctober 14, 2011\\r\\n\\r\\nPresented by Mark Lentczner.\\r\\n\\r\\nABSTRACT\\r\\n\\r\\nWant to know a little more about programming Haskell than just the buzz-words? This talk will show you some of the joys coding in Haskell through lots and lots of code examples.\\r\\n\\r\\nNo prior experience with Haskell or functional programming required. Just be ready for some strange and wondrous code!\\r\\n\\r\\nSlides: http://www.ozonehouse.com/mark/haskell-amuse-bouche/slides.html\\r\\nCode: https://github.com/mzero/haskell-amuse-bouche (tag v2 matches the video)\",\"meta\":{\"duration\":\"PT57M13S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"b9FagOVqxmI\",\"provider\":\"youtube\"},\"slug\":\"haskell-amuse-bouche\",\"tag\":[\"google tech talk\",\"programming language\",\"haskell\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/b9FagOVqxmI/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Haskell Amuse-Bouche\"}},{\"node\":{\"description\":\"PyData SV 2014 \\nIn the past two years, there has been incredible progress in Python data visualization libraries, particularly those built on client-side JavaScript tools such as D3 and Leaflet. This talk will give a brief demonstration of many of the newest charting libs: mpld3 (using Seaborn/ggplot), nvd3-python, ggplot, Vincent, Bearcart, Folium,and Kartograph will be used to visualize a newly-released USGS/FAA wind energy dataset (with an assist from Pandas and the IPython Notebook). After a demo of the current state of Python and web viz, it will discuss the future of how the Python data stack can have seamless interoperability and interactivity with JavaScript visualization libraries.\",\"meta\":{\"duration\":\"PT39M18S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"kmy-sfm3cC8\",\"provider\":\"youtube\"},\"slug\":\"rob-story-up-and-down-the-python-data-and-web-visualization-stack\",\"tag\":[\"Python\",\"Data Analysis\",\"PyData\",\"Visualization\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/kmy-sfm3cC8/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Rob Story - Up and Down the Python Data and Web Visualization Stack\"}},{\"node\":{\"description\":\"Andrew Odlyzko, Professor of Mathematics at the University of Minnesota, discusses \\\"Turing and the Riemann zeta function\\\" in a lecture given on the occasion of Princeton University's centennial celebration of Alan Turing. Learn more at www.princeton.edu/turing\\n\\n#turingprinceton\",\"meta\":{\"duration\":\"PT1H6M54S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"pQS7X_8iTCA\",\"provider\":\"youtube\"},\"slug\":\"andrew-odlyzko-turing-and-the-riemann-zeta-function\",\"tag\":[\"in\",\"lecture\",\"given\",\"on\",\"the\",\"occasion\",\"of\",\"Princeton\",\"University's\",\"centennial\",\"celebration\",\"Alan\",\"Turing.\",\"Learn\",\"more\",\"at\",\"Odlyzko\",\"#turingprinceton\",\"University of Minnesota\",\"Riemann zeta function\",\"Alan Turing\",\"Turing centennial\",\"computer science\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/pQS7X_8iTCA/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Andrew Odlyzko: Turing and the Riemann zeta function\"}},{\"node\":{\"description\":\"PyData SV 2014 \\nMany real-world datasets have missing observations, noise and outliers; usually due to logistical problems, component failures and erroneous procedures during the data collection process. Although it is easy to avoid missing points and noise to some level, it is not easy to detect wrong measurements and outliers in the dataset. These outliers may present a larger problem in time-series signals since every data point has a temporal dependency to the data point before and after. Therefore, it is crucially important to be able to detect and possibly correct these outliers. In this talk, I will introduce three different methods to be able to detect outliers in time-series signals; Fast Fourier Transform(FFT), Median Filtering and Bayesian approach. http://bugra.github.io/work/notes/2014-03-31/outlier-detection-in-time-series-signals-fft-median-filtering/\",\"meta\":{\"duration\":\"PT36M30S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"t4zEeujVht8\",\"provider\":\"youtube\"},\"slug\":\"bugra-akyildiz-outlier-detection-in-time-series-signals\",\"tag\":[\"Python\",\"Data Analysis\",\"PyData\",\"Time Series\",\"Bayesian Approach\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/t4zEeujVht8/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Bugra Akyildiz - Outlier Detection in Time Series Signals\"}}]}},\"pathContext\":{\"slug\":\"thomas-pfaff-advanced-data-storage\",\"tags\":[\"pydata\",\"Berlin\",\"Python\",\"programming language\",\"lecture\",\"science\"]}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---talk-thomas-pfaff-advanced-data-storage-3d273481220faa591d1f.js","module.exports = {\"data\":{\"talkJson\":{\"description\":\"In this tutorial we will give an introduction to two advanced data storage formats. HDF5 and NetCDF were designed to efficiently store the results of supercomputing applications like climate model outputs, or the data streams received from NASA's fleet of earth observing satellites. They provide a lot of optimizations concerning transparent file compression, speed of access or working with multiple files as if it were one large data set.A couple of Python libraries exist that allow fast and pythonic access to these formats.We will show you how to create and access these types of files from Python, and how to use their advanced features to tune them for maximum efficiency.Tutorial prerequisites and instructions.\\n\\nThomas Pfaff\",\"meta\":{\"duration\":\"PT1H19M39S\"},\"presenter\":{\"name\":null},\"slug\":\"thomas-pfaff-advanced-data-storage\",\"source\":{\"id\":\"AXlp7qxqu8E\",\"provider\":\"youtube\"},\"tag\":[\"pydata\",\"Berlin\",\"Python\",\"programming language\",\"lecture\",\"science\"],\"title\":\"Thomas Pfaff: Advanced Data Storage\"},\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"PyPy.js is an experiment in building a fast, compliant, in-browser python interpreter.  By compiling the PyPy interpreter into javascript, and retargeting its JIT compiler to emit asmjs code at runtime, it is possible to run python code in the browser at speeds competitive with a native python environment.  This talk will demonstrate the combination of technologies that make such a thing possible, the results that have been achieved so far, and the challenges that still remain when trying to take python onto javascript's home turf.\\n\\nWe'll cover: an overview of PyPy and why it's a good fit for this type of project; an introduction to asmjs and the rise of javascript as a compile target; what it looks like when you smoosh these two technologies together; a comparison with other approaches such as brython; and some concrete suggestions for how the result might be useful in practice.\\n\\nPyCon Australia is the national conference for users of the Python Programming Language. In August 2014, we're heading to Brisbane to bring together students, enthusiasts, and professionals with a love of Python from around Australia, and all around the World. \\n\\nAugust 1-5, Brisbane, Queensland, Australia\",\"meta\":{\"duration\":\"PT25M38S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"8C9q94F6Uqo\",\"provider\":\"youtube\"},\"slug\":\"pypyjs-what-how-why-by-ryan-kelly\",\"tag\":[\"pyconau\",\"pycon-au 2014\",\"Python\",\"PyCon\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/8C9q94F6Uqo/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"PyPy.js: What? How? Why? by Ryan Kelly\"}},{\"node\":{\"description\":\"This presentation was recorded at GOTO Berlin 2015\\nhttp://gotober.com\\n\\nKevin Goldsmith - Vice President, Engineering at Spotify\\n\\nABSTRACT\\nThe software industry used to be all about building monoliths: monolithic applications and services, with bing-bang product releasees. All that has now changed [...]\\nDownload slides and read the full abstract here:\\nhttp://gotocon.com/berlin-2015/presentation/Microservices%20@%20Spotify\\n\\nhttps://twitter.com/gotober\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT49M8S\"},\"presenter\":{\"name\":\"Kevin Goldsmith\"},\"source\":{\"id\":\"7LGPeBgNFuU\",\"provider\":\"youtube\"},\"slug\":\"microservices-spotify-kevin-goldsmith\",\"tag\":[\"GOTO Conference\",\"Berlin\",\"Microservices\",\"Spotify\",\"Programming Languages\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/7LGPeBgNFuU/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Microservices at Spotify\"}},{\"node\":{\"description\":\"The behavior of names and values in Python can be confusing. Like many parts of Python, it has an underlying simplicity that can be hard to discern, especially if you are used to other programming languages. Here I'll explain how it all works, and present some facts and myths along the way.  Call-by-reference? Call-by-value? The answer will be clear!\",\"meta\":{\"duration\":\"PT25M20S\"},\"presenter\":{\"name\":\"Ned Batchelder\"},\"source\":{\"id\":\"_AEJHKGk9ns\",\"provider\":\"youtube\"},\"slug\":\"facts-and-myths-about-python-names-and-values\",\"tag\":[\"PyCon\",\"Python\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/_AEJHKGk9ns/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Facts and Myths about Python names and values\"}},{\"node\":{\"description\":\"Google Tech Talk (more info below)\\r\\nOctober 14, 2011\\r\\n\\r\\nPresented by Mark Lentczner.\\r\\n\\r\\nABSTRACT\\r\\n\\r\\nWant to know a little more about programming Haskell than just the buzz-words? This talk will show you some of the joys coding in Haskell through lots and lots of code examples.\\r\\n\\r\\nNo prior experience with Haskell or functional programming required. Just be ready for some strange and wondrous code!\\r\\n\\r\\nSlides: http://www.ozonehouse.com/mark/haskell-amuse-bouche/slides.html\\r\\nCode: https://github.com/mzero/haskell-amuse-bouche (tag v2 matches the video)\",\"meta\":{\"duration\":\"PT57M13S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"b9FagOVqxmI\",\"provider\":\"youtube\"},\"slug\":\"haskell-amuse-bouche\",\"tag\":[\"google tech talk\",\"programming language\",\"haskell\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/b9FagOVqxmI/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Haskell Amuse-Bouche\"}},{\"node\":{\"description\":\"PyData SV 2014 \\nIn the past two years, there has been incredible progress in Python data visualization libraries, particularly those built on client-side JavaScript tools such as D3 and Leaflet. This talk will give a brief demonstration of many of the newest charting libs: mpld3 (using Seaborn/ggplot), nvd3-python, ggplot, Vincent, Bearcart, Folium,and Kartograph will be used to visualize a newly-released USGS/FAA wind energy dataset (with an assist from Pandas and the IPython Notebook). After a demo of the current state of Python and web viz, it will discuss the future of how the Python data stack can have seamless interoperability and interactivity with JavaScript visualization libraries.\",\"meta\":{\"duration\":\"PT39M18S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"kmy-sfm3cC8\",\"provider\":\"youtube\"},\"slug\":\"rob-story-up-and-down-the-python-data-and-web-visualization-stack\",\"tag\":[\"Python\",\"Data Analysis\",\"PyData\",\"Visualization\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/kmy-sfm3cC8/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Rob Story - Up and Down the Python Data and Web Visualization Stack\"}},{\"node\":{\"description\":\"Andrew Odlyzko, Professor of Mathematics at the University of Minnesota, discusses \\\"Turing and the Riemann zeta function\\\" in a lecture given on the occasion of Princeton University's centennial celebration of Alan Turing. Learn more at www.princeton.edu/turing\\n\\n#turingprinceton\",\"meta\":{\"duration\":\"PT1H6M54S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"pQS7X_8iTCA\",\"provider\":\"youtube\"},\"slug\":\"andrew-odlyzko-turing-and-the-riemann-zeta-function\",\"tag\":[\"in\",\"lecture\",\"given\",\"on\",\"the\",\"occasion\",\"of\",\"Princeton\",\"University's\",\"centennial\",\"celebration\",\"Alan\",\"Turing.\",\"Learn\",\"more\",\"at\",\"Odlyzko\",\"#turingprinceton\",\"University of Minnesota\",\"Riemann zeta function\",\"Alan Turing\",\"Turing centennial\",\"computer science\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/pQS7X_8iTCA/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Andrew Odlyzko: Turing and the Riemann zeta function\"}},{\"node\":{\"description\":\"PyData SV 2014 \\nMany real-world datasets have missing observations, noise and outliers; usually due to logistical problems, component failures and erroneous procedures during the data collection process. Although it is easy to avoid missing points and noise to some level, it is not easy to detect wrong measurements and outliers in the dataset. These outliers may present a larger problem in time-series signals since every data point has a temporal dependency to the data point before and after. Therefore, it is crucially important to be able to detect and possibly correct these outliers. In this talk, I will introduce three different methods to be able to detect outliers in time-series signals; Fast Fourier Transform(FFT), Median Filtering and Bayesian approach. http://bugra.github.io/work/notes/2014-03-31/outlier-detection-in-time-series-signals-fft-median-filtering/\",\"meta\":{\"duration\":\"PT36M30S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"t4zEeujVht8\",\"provider\":\"youtube\"},\"slug\":\"bugra-akyildiz-outlier-detection-in-time-series-signals\",\"tag\":[\"Python\",\"Data Analysis\",\"PyData\",\"Time Series\",\"Bayesian Approach\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/t4zEeujVht8/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Bugra Akyildiz - Outlier Detection in Time Series Signals\"}}]}},\"pathContext\":{\"slug\":\"thomas-pfaff-advanced-data-storage\",\"tags\":[\"pydata\",\"Berlin\",\"Python\",\"programming language\",\"lecture\",\"science\"]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/talk-thomas-pfaff-advanced-data-storage.json\n// module id = 3209\n// module chunks = 6804213096134"],"sourceRoot":""}