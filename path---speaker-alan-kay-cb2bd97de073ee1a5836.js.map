{"version":3,"sources":["webpack:///path---speaker-alan-kay-cb2bd97de073ee1a5836.js","webpack:///./.cache/json/speaker-alan-kay.json"],"names":["webpackJsonp","1857","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext","speaker"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,oFAAAC,MAA0GC,SAAA,cAAwBC,WAAcC,KAAA,YAAkBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,wCAAAC,KAAA,6CAAAC,YAAkHC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,2CAAoDhB,MAAQC,YAAA,4NAAAC,MAAkPC,SAAA,WAAqBC,WAAcC,KAAA,YAAkBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,sBAAAC,KAAA,0BAAAC,YAA6EC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,yBAAkChB,MAAQC,YAAA,w+BAAAC,MAA8/BC,SAAA,aAAuBC,WAAcC,KAAA,YAAkBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,sCAAAC,KAAA,oCAAAC,YAAuGC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,2CAAoDhB,MAAQC,YAAA,qmBAAAC,MAA2nBC,SAAA,YAAsBC,WAAcC,KAAA,YAAkBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,2CAAAC,KAAA,oCAAAC,YAA4GC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,+CAAwDhB,MAAQC,YAAA,8IAAAC,MAAoKC,SAAA,YAAsBC,WAAcC,KAAA,YAAkBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,kCAAAC,KAAA,uBAAAC,YAAsFC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,qCAA8ChB,MAAQC,YAAA,2RAAAC,MAAiTC,SAAA,aAAuBC,WAAcC,KAAA,YAAkBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,qEAAAC,KAAA,2BAAAC,YAA6HC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,kDAA0DC,aAAgBC,QAAA","file":"path---speaker-alan-kay-cb2bd97de073ee1a5836.js","sourcesContent":["webpackJsonp([11126414665699],{\n\n/***/ 1857:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Alan Kay talks about alternative approaches to teach Computer Science in schools.\",\"meta\":{\"duration\":\"PT1H10M32S\"},\"presenter\":{\"name\":\"Alan Kay\"},\"source\":{\"id\":\"N9c7_8Gp7gI\",\"provider\":\"youtube\"},\"slug\":\"rethinking-computer-science-education\",\"tag\":[\"Educational\",\"CrossRoads 2015\",\"Inspiring\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/N9c7_8Gp7gI/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Rethinking Computer Science Education\"}},{\"node\":{\"description\":\"One of my all time favorite talks of Alan Kay's, given in 2015.\\n\\nNot my own video, though it hasn't been on YouTube before. Original location here: http://global.sap.com/campaign/na/usa/CRM-XU15-INT-STILP/index.html\",\"meta\":{\"duration\":\"PT51M7S\"},\"presenter\":{\"name\":\"Alan Kay\"},\"source\":{\"id\":\"NdSD07U5uBs\",\"provider\":\"youtube\"},\"slug\":\"power-of-simplicity\",\"tag\":[\"Inspiring\",\"Simplicity\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/NdSD07U5uBs/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Power of Simplicity\"}},{\"node\":{\"description\":\"Our increasingly complex needs have led us to build increasing complex software. We’ve done this in an incremental fashion, building code on top of code. We write understandable snippets of code built on programming languages we know well and then bundle them into program structures to perform complex tasks. This incremental process may seem to have low risk at the snippet level, but it leads to program structures that can be hundreds of millions of lines of code that is intractable to change, redesign, and understanding, nor in the end is it easy to design. It also leads to code with potentially unwanted emergent properties. Today, we know how to create programs that can create programming languages. So why not write software that closely follows the problem, without a programming language, then let other programs create the programming language to support it? If we apply this rethinking to the design process, both problems and solutions can be thought of in terms of relational str\",\"meta\":{\"duration\":\"PT1H7M19S\"},\"presenter\":{\"name\":\"Alan Kay\"},\"source\":{\"id\":\"QboI_1WJUlM\",\"provider\":\"youtube\"},\"slug\":\"rethinking-design-risk-and-software\",\"tag\":[\"Inspiring\",\"Keynote\",\"COFES 2012\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/QboI_1WJUlM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Rethinking Design, Risk, and Software\"}},{\"node\":{\"description\":\"When thinking about the future, you can't do better than Alan Kay. In The Future Doesn't Have To Be Incremental, Kay describes how Xerox PARC was able to develop so many new technologies in such a short time, including the personal computer, bitmap displays, GUI, desktop publishing, word processing, laser printing, Ethernet, and object oriented programming. The key was a culture focused on invention - that is, fundamentally new research - instead of incremental innovation. Invention requires a significantly higher investment of money, much longer time frames, and a different approach to problem solving.\",\"meta\":{\"duration\":\"PT43M50S\"},\"presenter\":{\"name\":\"Alan Kay\"},\"source\":{\"id\":\"gTAghAJcO1o\",\"provider\":\"youtube\"},\"slug\":\"the-future-doesnt-have-to-be-incremental\",\"tag\":[\"Inspiring\",\"DEMO Conference 2014\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/gTAghAJcO1o/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"The Future Doesn't Have to Be Incremental\"}},{\"node\":{\"description\":\"How humans learn and how to build user interfaces that support it. “The parts of the body you want to have learn don’t understand English.”\",\"meta\":{\"duration\":\"PT48M21S\"},\"presenter\":{\"name\":\"Alan Kay\"},\"source\":{\"id\":\"kzDpfk8YhlE\",\"provider\":\"youtube\"},\"slug\":\"doing-with-images-makes-symbols\",\"tag\":[\"User Interface\",\"UX\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/kzDpfk8YhlE/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Doing with Images Makes Symbols\"}},{\"node\":{\"description\":\"Alan Kay's seminal 1997 OOPSLA keynote. Originally hosted on Google Video, copies of it are now only available from the squeak.org website as far as I can find.  Putting it on youtube is my attempt to preserve a really important talk and computer science and computing in general.\",\"meta\":{\"duration\":\"PT1H4M34S\"},\"presenter\":{\"name\":\"Alan Kay\"},\"source\":{\"id\":\"oKg1hTOQXoY\",\"provider\":\"youtube\"},\"slug\":\"alan-kay-at-oopsla-1997-the-computer-revolution-hasnt-happened-yet\",\"tag\":[\"Inspiring\",\"OOPSLA 1997\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/oKg1hTOQXoY/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"The computer revolution hasnt happened yet\"}}]}},\"pathContext\":{\"speaker\":\"Alan Kay\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---speaker-alan-kay-cb2bd97de073ee1a5836.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Alan Kay talks about alternative approaches to teach Computer Science in schools.\",\"meta\":{\"duration\":\"PT1H10M32S\"},\"presenter\":{\"name\":\"Alan Kay\"},\"source\":{\"id\":\"N9c7_8Gp7gI\",\"provider\":\"youtube\"},\"slug\":\"rethinking-computer-science-education\",\"tag\":[\"Educational\",\"CrossRoads 2015\",\"Inspiring\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/N9c7_8Gp7gI/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Rethinking Computer Science Education\"}},{\"node\":{\"description\":\"One of my all time favorite talks of Alan Kay's, given in 2015.\\n\\nNot my own video, though it hasn't been on YouTube before. Original location here: http://global.sap.com/campaign/na/usa/CRM-XU15-INT-STILP/index.html\",\"meta\":{\"duration\":\"PT51M7S\"},\"presenter\":{\"name\":\"Alan Kay\"},\"source\":{\"id\":\"NdSD07U5uBs\",\"provider\":\"youtube\"},\"slug\":\"power-of-simplicity\",\"tag\":[\"Inspiring\",\"Simplicity\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/NdSD07U5uBs/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Power of Simplicity\"}},{\"node\":{\"description\":\"Our increasingly complex needs have led us to build increasing complex software. We’ve done this in an incremental fashion, building code on top of code. We write understandable snippets of code built on programming languages we know well and then bundle them into program structures to perform complex tasks. This incremental process may seem to have low risk at the snippet level, but it leads to program structures that can be hundreds of millions of lines of code that is intractable to change, redesign, and understanding, nor in the end is it easy to design. It also leads to code with potentially unwanted emergent properties. Today, we know how to create programs that can create programming languages. So why not write software that closely follows the problem, without a programming language, then let other programs create the programming language to support it? If we apply this rethinking to the design process, both problems and solutions can be thought of in terms of relational str\",\"meta\":{\"duration\":\"PT1H7M19S\"},\"presenter\":{\"name\":\"Alan Kay\"},\"source\":{\"id\":\"QboI_1WJUlM\",\"provider\":\"youtube\"},\"slug\":\"rethinking-design-risk-and-software\",\"tag\":[\"Inspiring\",\"Keynote\",\"COFES 2012\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/QboI_1WJUlM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Rethinking Design, Risk, and Software\"}},{\"node\":{\"description\":\"When thinking about the future, you can't do better than Alan Kay. In The Future Doesn't Have To Be Incremental, Kay describes how Xerox PARC was able to develop so many new technologies in such a short time, including the personal computer, bitmap displays, GUI, desktop publishing, word processing, laser printing, Ethernet, and object oriented programming. The key was a culture focused on invention - that is, fundamentally new research - instead of incremental innovation. Invention requires a significantly higher investment of money, much longer time frames, and a different approach to problem solving.\",\"meta\":{\"duration\":\"PT43M50S\"},\"presenter\":{\"name\":\"Alan Kay\"},\"source\":{\"id\":\"gTAghAJcO1o\",\"provider\":\"youtube\"},\"slug\":\"the-future-doesnt-have-to-be-incremental\",\"tag\":[\"Inspiring\",\"DEMO Conference 2014\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/gTAghAJcO1o/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"The Future Doesn't Have to Be Incremental\"}},{\"node\":{\"description\":\"How humans learn and how to build user interfaces that support it. “The parts of the body you want to have learn don’t understand English.”\",\"meta\":{\"duration\":\"PT48M21S\"},\"presenter\":{\"name\":\"Alan Kay\"},\"source\":{\"id\":\"kzDpfk8YhlE\",\"provider\":\"youtube\"},\"slug\":\"doing-with-images-makes-symbols\",\"tag\":[\"User Interface\",\"UX\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/kzDpfk8YhlE/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Doing with Images Makes Symbols\"}},{\"node\":{\"description\":\"Alan Kay's seminal 1997 OOPSLA keynote. Originally hosted on Google Video, copies of it are now only available from the squeak.org website as far as I can find.  Putting it on youtube is my attempt to preserve a really important talk and computer science and computing in general.\",\"meta\":{\"duration\":\"PT1H4M34S\"},\"presenter\":{\"name\":\"Alan Kay\"},\"source\":{\"id\":\"oKg1hTOQXoY\",\"provider\":\"youtube\"},\"slug\":\"alan-kay-at-oopsla-1997-the-computer-revolution-hasnt-happened-yet\",\"tag\":[\"Inspiring\",\"OOPSLA 1997\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/oKg1hTOQXoY/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"The computer revolution hasnt happened yet\"}}]}},\"pathContext\":{\"speaker\":\"Alan Kay\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/speaker-alan-kay.json\n// module id = 1857\n// module chunks = 11126414665699"],"sourceRoot":""}