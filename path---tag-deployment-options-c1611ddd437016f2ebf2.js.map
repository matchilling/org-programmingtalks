{"version":3,"sources":["webpack:///path---tag-deployment-options-c1611ddd437016f2ebf2.js","webpack:///./.cache/json/tag-deployment-options.json"],"names":["webpackJsonp","2165","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,8oBAAAC,MAAoqBC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,iGAAAC,KAAA,gDAAAC,YAA8KC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,2GAAmHC,aAAgBR,KAAA,qBAAAC,IAAA","file":"path---tag-deployment-options-c1611ddd437016f2ebf2.js","sourcesContent":["webpackJsonp([278360125935363],{\n\n/***/ 2165:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Deployment Options: How To Ship New Code Without Taking Your System Down\\n\\nErlang is quite famous for long-running interruption-free installations. But how is this achieved in practice while still evolving the software?\\n\\nWe will look at different deployment options, from simple to advanced:\\n\\n1. Deployment by restart\\n\\n2. Hot code reloading\\n\\n3. Release handling\\n\\nSee hot code reloading in action and learn how to avoid common traps & pitfalls.\\n\\nTalk objectives: By the end of this talk you shall be able to decide: Which strategy is right for me? What do I have to consider?\\n\\nTarget audience: General familiarity with Erlang is assumed.\",\"meta\":{\"duration\":\"PT32M47S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"NfCLCmRi4_Y\",\"provider\":\"youtube\"},\"slug\":\"martin-rehfeld-how-to-ship-new-code-without-taking-your-system-down-berlin-erlang-factory-lite\",\"tag\":[\"Erlang\",\"Martin Rehfeld\",\"Deployment Options\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/NfCLCmRi4_Y/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Martin Rehfeld - How To Ship New Code Without Taking Your System Down -  Berlin Erlang Factory Lite\"}}]}},\"pathContext\":{\"slug\":\"deployment-options\",\"tag\":\"Deployment Options\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-deployment-options-c1611ddd437016f2ebf2.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Deployment Options: How To Ship New Code Without Taking Your System Down\\n\\nErlang is quite famous for long-running interruption-free installations. But how is this achieved in practice while still evolving the software?\\n\\nWe will look at different deployment options, from simple to advanced:\\n\\n1. Deployment by restart\\n\\n2. Hot code reloading\\n\\n3. Release handling\\n\\nSee hot code reloading in action and learn how to avoid common traps & pitfalls.\\n\\nTalk objectives: By the end of this talk you shall be able to decide: Which strategy is right for me? What do I have to consider?\\n\\nTarget audience: General familiarity with Erlang is assumed.\",\"meta\":{\"duration\":\"PT32M47S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"NfCLCmRi4_Y\",\"provider\":\"youtube\"},\"slug\":\"martin-rehfeld-how-to-ship-new-code-without-taking-your-system-down-berlin-erlang-factory-lite\",\"tag\":[\"Erlang\",\"Martin Rehfeld\",\"Deployment Options\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/NfCLCmRi4_Y/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Martin Rehfeld - How To Ship New Code Without Taking Your System Down -  Berlin Erlang Factory Lite\"}}]}},\"pathContext\":{\"slug\":\"deployment-options\",\"tag\":\"Deployment Options\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-deployment-options.json\n// module id = 2165\n// module chunks = 278360125935363"],"sourceRoot":""}