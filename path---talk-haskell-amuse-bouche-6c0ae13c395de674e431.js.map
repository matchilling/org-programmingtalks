{"version":3,"sources":["webpack:///path---talk-haskell-amuse-bouche-6c0ae13c395de674e431.js","webpack:///./.cache/json/talk-haskell-amuse-bouche.json"],"names":["webpackJsonp","3026","module","exports","data","talkJson","description","meta","duration","presenter","name","slug","source","id","provider","tag","title","allTalkJson","edges","node","thumbnails","default","url","height","width","pathContext","tags"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,UAAYC,YAAA,qkBAAAC,MAA2lBC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,KAAA,uBAAAC,QAAyCC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,qDAAAC,MAAA,wBAA4FC,aAAgBC,QAAUC,MAAQb,YAAA,muBAAAC,MAAyvBC,SAAA,cAAwBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,qCAAAI,KAAA,uEAAAK,YAAyIC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,yCAAkDG,MAAQb,YAAA,szDAAAC,MAA40DC,SAAA,aAAuBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,oCAAAI,KAAA,qFAAAK,YAAsJC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,2CAAmDS,aAAgBd,KAAA,uBAAAe,MAAA","file":"path---talk-haskell-amuse-bouche-6c0ae13c395de674e431.js","sourcesContent":["webpackJsonp([189930255567244],{\n\n/***/ 3026:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"talkJson\":{\"description\":\"Google Tech Talk (more info below)\\r\\nOctober 14, 2011\\r\\n\\r\\nPresented by Mark Lentczner.\\r\\n\\r\\nABSTRACT\\r\\n\\r\\nWant to know a little more about programming Haskell than just the buzz-words? This talk will show you some of the joys coding in Haskell through lots and lots of code examples.\\r\\n\\r\\nNo prior experience with Haskell or functional programming required. Just be ready for some strange and wondrous code!\\r\\n\\r\\nSlides: http://www.ozonehouse.com/mark/haskell-amuse-bouche/slides.html\\r\\nCode: https://github.com/mzero/haskell-amuse-bouche (tag v2 matches the video)\",\"meta\":{\"duration\":\"PT57M13S\"},\"presenter\":{\"name\":null},\"slug\":\"haskell-amuse-bouche\",\"source\":{\"id\":\"b9FagOVqxmI\",\"provider\":\"youtube\"},\"tag\":[\"google tech talk\",\"programming language\",\"haskell\"],\"title\":\"Haskell Amuse-Bouche\"},\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"In this tutorial we will give an introduction to two advanced data storage formats. HDF5 and NetCDF were designed to efficiently store the results of supercomputing applications like climate model outputs, or the data streams received from NASA's fleet of earth observing satellites. They provide a lot of optimizations concerning transparent file compression, speed of access or working with multiple files as if it were one large data set.A couple of Python libraries exist that allow fast and pythonic access to these formats.We will show you how to create and access these types of files from Python, and how to use their advanced features to tune them for maximum efficiency.Tutorial prerequisites and instructions.\\n\\nThomas Pfaff\",\"meta\":{\"duration\":\"PT1H19M39S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"AXlp7qxqu8E\",\"provider\":\"youtube\"},\"slug\":\"thomas-pfaff-advanced-data-storage\",\"tag\":[\"pydata\",\"Berlin\",\"Python\",\"programming language\",\"lecture\",\"science\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/AXlp7qxqu8E/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Thomas Pfaff: Advanced Data Storage\"}},{\"node\":{\"description\":\"Cross posted from msdn's channel 9.\\n\\nFunctional programming is increasing in popularity these days given the inherent problems with shared mutable state that is rife in the imperative world. As we march on to a world of multi and many-core chipsets, software engineering must evolve to better equip software engineers with the tools to exploit the vast power of multiple core processors as it won't come for free as it did in the recent past which was predictably based on Moore's law.\\n\\nOf course, learning new ways to think about programming semantics and code patterns are not always straight forward. For example, most imperative programmers (which include most of us who build software for a living...) are somewhat perplexed by the notion of functions as first class data structures that can be combined to create powerful and composable systems. Languages like Haskell are pure functional languages and require programmers to think in a different way, often in a precise mathematical fashion where composing and chaining functions is \\\"the Way\\\".\\n\\nDr. Brian Beckman, a Channel 9 celebrity, astrophysicist and senior software engineer thought it would be a very good idea to address the complexity of monads in an easy to understand way: a technical conversation at the whiteboard with yours truly for Channel 9.\\n\\nThis video interview is the result of Brian's idea that he can in fact remove the fear of monads from anybody who pays attention to his explanation. Of course, you can't just cover monads in a vacuum (category theory is not really addressed here) so the context is functional programming (Brian covers functions and composable functional structures (function chains) and of course monoids and then monads).\\n\\nTune in. There's a lot to learn here and only Brian can make monads easy to understand for the rest of us!\",\"meta\":{\"duration\":\"PT1H7M11S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"ZhuHCtR3xq8\",\"provider\":\"youtube\"},\"slug\":\"brian-beckman-dont-fear-the-monad\",\"tag\":[\"haskell\",\"monads\",\"programming\",\"brian beckman\",\"functional programming\",\"Haskell\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/ZhuHCtR3xq8/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Brian Beckman: Don't fear the Monad\"}}]}},\"pathContext\":{\"slug\":\"haskell-amuse-bouche\",\"tags\":[\"google tech talk\",\"programming language\",\"haskell\"]}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---talk-haskell-amuse-bouche-6c0ae13c395de674e431.js","module.exports = {\"data\":{\"talkJson\":{\"description\":\"Google Tech Talk (more info below)\\r\\nOctober 14, 2011\\r\\n\\r\\nPresented by Mark Lentczner.\\r\\n\\r\\nABSTRACT\\r\\n\\r\\nWant to know a little more about programming Haskell than just the buzz-words? This talk will show you some of the joys coding in Haskell through lots and lots of code examples.\\r\\n\\r\\nNo prior experience with Haskell or functional programming required. Just be ready for some strange and wondrous code!\\r\\n\\r\\nSlides: http://www.ozonehouse.com/mark/haskell-amuse-bouche/slides.html\\r\\nCode: https://github.com/mzero/haskell-amuse-bouche (tag v2 matches the video)\",\"meta\":{\"duration\":\"PT57M13S\"},\"presenter\":{\"name\":null},\"slug\":\"haskell-amuse-bouche\",\"source\":{\"id\":\"b9FagOVqxmI\",\"provider\":\"youtube\"},\"tag\":[\"google tech talk\",\"programming language\",\"haskell\"],\"title\":\"Haskell Amuse-Bouche\"},\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"In this tutorial we will give an introduction to two advanced data storage formats. HDF5 and NetCDF were designed to efficiently store the results of supercomputing applications like climate model outputs, or the data streams received from NASA's fleet of earth observing satellites. They provide a lot of optimizations concerning transparent file compression, speed of access or working with multiple files as if it were one large data set.A couple of Python libraries exist that allow fast and pythonic access to these formats.We will show you how to create and access these types of files from Python, and how to use their advanced features to tune them for maximum efficiency.Tutorial prerequisites and instructions.\\n\\nThomas Pfaff\",\"meta\":{\"duration\":\"PT1H19M39S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"AXlp7qxqu8E\",\"provider\":\"youtube\"},\"slug\":\"thomas-pfaff-advanced-data-storage\",\"tag\":[\"pydata\",\"Berlin\",\"Python\",\"programming language\",\"lecture\",\"science\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/AXlp7qxqu8E/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Thomas Pfaff: Advanced Data Storage\"}},{\"node\":{\"description\":\"Cross posted from msdn's channel 9.\\n\\nFunctional programming is increasing in popularity these days given the inherent problems with shared mutable state that is rife in the imperative world. As we march on to a world of multi and many-core chipsets, software engineering must evolve to better equip software engineers with the tools to exploit the vast power of multiple core processors as it won't come for free as it did in the recent past which was predictably based on Moore's law.\\n\\nOf course, learning new ways to think about programming semantics and code patterns are not always straight forward. For example, most imperative programmers (which include most of us who build software for a living...) are somewhat perplexed by the notion of functions as first class data structures that can be combined to create powerful and composable systems. Languages like Haskell are pure functional languages and require programmers to think in a different way, often in a precise mathematical fashion where composing and chaining functions is \\\"the Way\\\".\\n\\nDr. Brian Beckman, a Channel 9 celebrity, astrophysicist and senior software engineer thought it would be a very good idea to address the complexity of monads in an easy to understand way: a technical conversation at the whiteboard with yours truly for Channel 9.\\n\\nThis video interview is the result of Brian's idea that he can in fact remove the fear of monads from anybody who pays attention to his explanation. Of course, you can't just cover monads in a vacuum (category theory is not really addressed here) so the context is functional programming (Brian covers functions and composable functional structures (function chains) and of course monoids and then monads).\\n\\nTune in. There's a lot to learn here and only Brian can make monads easy to understand for the rest of us!\",\"meta\":{\"duration\":\"PT1H7M11S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"ZhuHCtR3xq8\",\"provider\":\"youtube\"},\"slug\":\"brian-beckman-dont-fear-the-monad\",\"tag\":[\"haskell\",\"monads\",\"programming\",\"brian beckman\",\"functional programming\",\"Haskell\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/ZhuHCtR3xq8/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Brian Beckman: Don't fear the Monad\"}}]}},\"pathContext\":{\"slug\":\"haskell-amuse-bouche\",\"tags\":[\"google tech talk\",\"programming language\",\"haskell\"]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/talk-haskell-amuse-bouche.json\n// module id = 3026\n// module chunks = 189930255567244"],"sourceRoot":""}