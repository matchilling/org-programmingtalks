{"version":3,"sources":["webpack:///path---talk-fifth-racketcon-alexis-king-generic-collections-one-interface-to-rule-them-all-0b5ed9e6807fbecfc024.js","webpack:///./.cache/json/talk-fifth-racketcon-alexis-king-generic-collections-one-interface-to-rule-them-all.json"],"names":["webpackJsonp","2963","module","exports","data","talkJson","description","meta","duration","presenter","name","slug","source","id","provider","tag","title","allTalkJson","pathContext","tags"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,UAAYC,YAAA,qrCAAAC,MAA2sCC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,KAAA,iFAAAC,QAAmGC,GAAA,cAAAC,SAAA,WAAwCC,OAAAC,MAAA,wFAAyGC,YAAA,MAAoBC,aAAgBP,KAAA,iFAAAQ","file":"path---talk-fifth-racketcon-alexis-king-generic-collections-one-interface-to-rule-them-all-0b5ed9e6807fbecfc024.js","sourcesContent":["webpackJsonp([189329470008931],{\n\n/***/ 2963:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"talkJson\":{\"description\":\"Racket encourages a functional style, but aside from immutable pairs, the collections library remains unsuitable for rich functional programming with a complement of functional data structures. Racket programmers may reach for linked lists when better structures would do to avoid the list-ref/vector-ref/stream-ref function zoo. This talk discusses the implementation of a generic collections system that encourages immutability by default, provides a more consistent and comprehensive interface across all data structures, and provides that interface in a way that can be leveraged by new, user-defined structures to feel as integrated with the language as Racket’s built-ins.\\n\\nAlexis King works as a full-stack web developer at Philosophie in Los Angeles building rich web applications with Ruby on Rails and Angular. When not tinkering with different models to create expressive RESTful APIs, she is enthusiastic about finding ways to build programming interfaces that are expressive and easy to use. In Racket, that means figuring out how to build flexible DSLs and extensible language constructs that integrate well into the rest of the Racket ecosystem without sacrificing elegance or hygiene.\",\"meta\":{\"duration\":\"PT18M27S\"},\"presenter\":{\"name\":null},\"slug\":\"fifth-racketcon-alexis-king-generic-collections-one-interface-to-rule-them-all\",\"source\":{\"id\":\"JUD_JwG0alg\",\"provider\":\"youtube\"},\"tag\":[],\"title\":\"(fifth RacketCon): Alexis King — Generic Collections: One Interface to Rule Them All\"},\"allTalkJson\":null},\"pathContext\":{\"slug\":\"fifth-racketcon-alexis-king-generic-collections-one-interface-to-rule-them-all\",\"tags\":[]}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---talk-fifth-racketcon-alexis-king-generic-collections-one-interface-to-rule-them-all-0b5ed9e6807fbecfc024.js","module.exports = {\"data\":{\"talkJson\":{\"description\":\"Racket encourages a functional style, but aside from immutable pairs, the collections library remains unsuitable for rich functional programming with a complement of functional data structures. Racket programmers may reach for linked lists when better structures would do to avoid the list-ref/vector-ref/stream-ref function zoo. This talk discusses the implementation of a generic collections system that encourages immutability by default, provides a more consistent and comprehensive interface across all data structures, and provides that interface in a way that can be leveraged by new, user-defined structures to feel as integrated with the language as Racket’s built-ins.\\n\\nAlexis King works as a full-stack web developer at Philosophie in Los Angeles building rich web applications with Ruby on Rails and Angular. When not tinkering with different models to create expressive RESTful APIs, she is enthusiastic about finding ways to build programming interfaces that are expressive and easy to use. In Racket, that means figuring out how to build flexible DSLs and extensible language constructs that integrate well into the rest of the Racket ecosystem without sacrificing elegance or hygiene.\",\"meta\":{\"duration\":\"PT18M27S\"},\"presenter\":{\"name\":null},\"slug\":\"fifth-racketcon-alexis-king-generic-collections-one-interface-to-rule-them-all\",\"source\":{\"id\":\"JUD_JwG0alg\",\"provider\":\"youtube\"},\"tag\":[],\"title\":\"(fifth RacketCon): Alexis King — Generic Collections: One Interface to Rule Them All\"},\"allTalkJson\":null},\"pathContext\":{\"slug\":\"fifth-racketcon-alexis-king-generic-collections-one-interface-to-rule-them-all\",\"tags\":[]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/talk-fifth-racketcon-alexis-king-generic-collections-one-interface-to-rule-them-all.json\n// module id = 2963\n// module chunks = 189329470008931"],"sourceRoot":""}