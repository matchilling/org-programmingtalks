{"version":3,"sources":["webpack:///path---talk-convex-optimization-in-julia-9853d99d26b4f0aaff8f.js","webpack:///./.cache/json/talk-convex-optimization-in-julia.json"],"names":["webpackJsonp","2907","module","exports","data","talkJson","description","meta","duration","presenter","name","slug","source","id","provider","tag","title","allTalkJson","pathContext","tags"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,UAAYC,YAAA,4uBAAAC,MAAkwBC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,KAAA,+BAAAC,QAAiDC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,+IAAAC,MAAA,gCAA8LC,YAAA,MAAoBC,aAAgBP,KAAA,+BAAAQ,MAAA","file":"path---talk-convex-optimization-in-julia-9853d99d26b4f0aaff8f.js","sourcesContent":["webpackJsonp([207396378506811],{\n\n/***/ 2907:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"talkJson\":{\"description\":\"Presented by Madeleine Udell at JuliaCon 2014.\\n\\nLink to slides: http://goo.gl/Nfy14D\\n\\nJulia is a high-level, high-performance dynamic programming language for technical computing, with syntax that is familiar to users of other technical computing environments. It provides a sophisticated compiler, distributed parallel execution, numerical accuracy, and an extensive mathematical function library. The library, largely written in Julia itself, also integrates mature, best-of-breed C and Fortran libraries for linear algebra, random number generation, signal processing, and string processing. In addition, the Julia developer community is contributing a number of external packages through Julia's built-in package manager at a rapid pace.\",\"meta\":{\"duration\":\"PT40M12S\"},\"presenter\":{\"name\":null},\"slug\":\"convex-optimization-in-julia\",\"source\":{\"id\":\"SoI0lEaUvTs\",\"provider\":\"youtube\"},\"tag\":[\"julialang\",\"technical computing\",\"scientific computing\",\"Convex Optimization\",\"Convex Function\",\"Mathematical Optimization (Field Of Study)\"],\"title\":\"Convex Optimization in Julia\"},\"allTalkJson\":null},\"pathContext\":{\"slug\":\"convex-optimization-in-julia\",\"tags\":[\"julialang\",\"technical computing\",\"scientific computing\",\"Convex Optimization\",\"Convex Function\",\"Mathematical Optimization (Field Of Study)\"]}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---talk-convex-optimization-in-julia-9853d99d26b4f0aaff8f.js","module.exports = {\"data\":{\"talkJson\":{\"description\":\"Presented by Madeleine Udell at JuliaCon 2014.\\n\\nLink to slides: http://goo.gl/Nfy14D\\n\\nJulia is a high-level, high-performance dynamic programming language for technical computing, with syntax that is familiar to users of other technical computing environments. It provides a sophisticated compiler, distributed parallel execution, numerical accuracy, and an extensive mathematical function library. The library, largely written in Julia itself, also integrates mature, best-of-breed C and Fortran libraries for linear algebra, random number generation, signal processing, and string processing. In addition, the Julia developer community is contributing a number of external packages through Julia's built-in package manager at a rapid pace.\",\"meta\":{\"duration\":\"PT40M12S\"},\"presenter\":{\"name\":null},\"slug\":\"convex-optimization-in-julia\",\"source\":{\"id\":\"SoI0lEaUvTs\",\"provider\":\"youtube\"},\"tag\":[\"julialang\",\"technical computing\",\"scientific computing\",\"Convex Optimization\",\"Convex Function\",\"Mathematical Optimization (Field Of Study)\"],\"title\":\"Convex Optimization in Julia\"},\"allTalkJson\":null},\"pathContext\":{\"slug\":\"convex-optimization-in-julia\",\"tags\":[\"julialang\",\"technical computing\",\"scientific computing\",\"Convex Optimization\",\"Convex Function\",\"Mathematical Optimization (Field Of Study)\"]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/talk-convex-optimization-in-julia.json\n// module id = 2907\n// module chunks = 207396378506811"],"sourceRoot":""}