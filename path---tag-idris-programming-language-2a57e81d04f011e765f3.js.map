{"version":3,"sources":["webpack:///path---tag-idris-programming-language-2a57e81d04f011e765f3.js","webpack:///./.cache/json/tag-idris-programming-language.json"],"names":["webpackJsonp","2370","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,knCAAAC,MAAwoCC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,+CAAAC,KAAA,+DAAAC,YAA2IC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,sDAA8DC,aAAgBR,KAAA,6BAAAC,IAAA","file":"path---tag-idris-programming-language-2a57e81d04f011e765f3.js","sourcesContent":["webpackJsonp([23907356171660],{\n\n/***/ 2370:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Idris is a general purpose pure functional programming language with dependent types. In Idris, types are a first class language construct, meaning that they can be manipulated and computed like any other language construct. It encourages a type-driven style of development, in which programmers give types first and use interactive editing tools to derive programs. Introductory examples typically involve length-preserving operations on lists, or ordering invariants on sorting.\\n\\nRealistically, though, programming is not so simple: programs interact with users, communicate over networks, manipulate state, deal with erroneous input, and so on. In this talk I will show how advanced type systems allow us to express such interactions precisely, and how they support verification of stateful systems as a result.\\n\\nThe talk will include several examples, leading to a verified implementation of a word game (Hangman). I will show how Type-driven Development allows programmers to specify the game rules in a direct and concise style, and how it leads to an implementation, guaranteed to correctly follow the rules by typechecking.\",\"meta\":{\"duration\":\"PT46M36S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"X36ye-1x_HQ\",\"provider\":\"youtube\"},\"slug\":\"type-driven-development-in-idris-edwin-brady\",\"tag\":[\"Scala (Programming Language)\",\"Idris (Programming Language)\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/X36ye-1x_HQ/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Type-Driven Development in Idris — Edwin Brady\"}}]}},\"pathContext\":{\"slug\":\"idris-programming-language\",\"tag\":\"Idris (Programming Language)\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-idris-programming-language-2a57e81d04f011e765f3.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Idris is a general purpose pure functional programming language with dependent types. In Idris, types are a first class language construct, meaning that they can be manipulated and computed like any other language construct. It encourages a type-driven style of development, in which programmers give types first and use interactive editing tools to derive programs. Introductory examples typically involve length-preserving operations on lists, or ordering invariants on sorting.\\n\\nRealistically, though, programming is not so simple: programs interact with users, communicate over networks, manipulate state, deal with erroneous input, and so on. In this talk I will show how advanced type systems allow us to express such interactions precisely, and how they support verification of stateful systems as a result.\\n\\nThe talk will include several examples, leading to a verified implementation of a word game (Hangman). I will show how Type-driven Development allows programmers to specify the game rules in a direct and concise style, and how it leads to an implementation, guaranteed to correctly follow the rules by typechecking.\",\"meta\":{\"duration\":\"PT46M36S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"X36ye-1x_HQ\",\"provider\":\"youtube\"},\"slug\":\"type-driven-development-in-idris-edwin-brady\",\"tag\":[\"Scala (Programming Language)\",\"Idris (Programming Language)\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/X36ye-1x_HQ/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Type-Driven Development in Idris — Edwin Brady\"}}]}},\"pathContext\":{\"slug\":\"idris-programming-language\",\"tag\":\"Idris (Programming Language)\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-idris-programming-language.json\n// module id = 2370\n// module chunks = 23907356171660"],"sourceRoot":""}