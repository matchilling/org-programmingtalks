webpackJsonp([45729466007528],{2951:function(e,t){e.exports={data:{talkJson:{description:"Go is often described as a simple language. It is not, it just seems that way. Rob explains how Go's simplicity hides a great deal of complexity, and that both the simplicity and complexity are part of the design.",meta:{duration:"PT23M12S"},presenter:{name:"Rob Pike"},slug:"dotgo-2015-rob-pike-simplicity-is-complicated",source:{id:"rFejpH_tAHM",provider:"youtube"},tag:["dotGo","Simplicity"],title:"Simplicity is Complicated"},allTalkJson:{edges:[{node:{description:"Systems get bigger, technologies reach further, practices mature, advice changes... or at least some of it does. Some guidance remains unaffected by the passing of paradigms, the evolution of technology or the scaling of development: break your software into small, cohesive parts defined by clear interfaces and sound implementations, all the while striving for simplicity. The excuses for not doing so are as predictable as they are problematic. But if you want to create legacy code, make sure code is arbitrarily partitioned into large, incoherent parts characterised by unwieldy interfaces and incomprehensible implementations.\nWhile there are many definitions of what a legacy system is, common to almost all perceptions of a legacy system is the concept of size — specifically, lots of it. The phrase 'small legacy system' can be considered an oxymoron. This talk sets out to re-assess and reassert the importance of thinking and implementing small as an essential property of software systems — yes, even the large ones.",meta:{duration:"PT1H7M3S"},presenter:{name:"Kevlin Henney"},source:{id:"B3b4tremI5o",provider:"youtube"},slug:"small-is-beautiful",tag:["GOTO Conference","Keynote","GOTO Copenhagen","Scaling","Legacy System","Simplicity"],thumbnails:{default:{url:"https://i.ytimg.com/vi/B3b4tremI5o/default.jpg",height:90,width:120}},title:"Small Is Beautiful"}},{node:{description:"One of my all time favorite talks of Alan Kay's, given in 2015.\n\nNot my own video, though it hasn't been on YouTube before. Original location here: http://global.sap.com/campaign/na/usa/CRM-XU15-INT-STILP/index.html",meta:{duration:"PT51M7S"},presenter:{name:"Alan Kay"},source:{id:"NdSD07U5uBs",provider:"youtube"},slug:"power-of-simplicity",tag:["Inspiring","Simplicity"],thumbnails:{default:{url:"https://i.ytimg.com/vi/NdSD07U5uBs/default.jpg",height:90,width:120}},title:"Power of Simplicity"}},{node:{description:'C++ faces two challenges: Helping programmers address the most demanding tasks in terms of performance, scale, and dependability. It must also help programmers be productive writing ordinary maintainable code. There is much more "ordinary code" than there is performance-critical code. Thus, C++ must make simple tasks simple while not getting in the way of tuning software for the last byte and last cycle where that\'s necessary. This talk focuses on what C++11 and C++14 offers to simplify programming: auto, range-for loops, move semantics, futures, concepts, and more. However, the focus is not primarily on language features: the key is programming: how can we write better, more readable, efficient, and more maintainable code? If you think that the essence of C++ is clever pointer manipulation and huge class hierarchies you may be in for a few surprises.',meta:{duration:"PT1H37M36S"},presenter:{name:"Bjarne Stroustrup"},source:{id:"nesCaocNjtQ",provider:"youtube"},slug:"make-simple-tasks-simple",tag:["CppCon","Simplicity"],thumbnails:{default:{url:"https://i.ytimg.com/vi/nesCaocNjtQ/default.jpg",height:90,width:120}},title:"Make Simple Tasks Simple!"}},{node:{description:"Rich Hickey, the author of Clojure and designer of Datomic, is a software developer with over 20 years of experience in various domains. Rich has worked on scheduling systems, broadcast automation, audio analysis and fingerprinting, database design, yield management, exit poll systems, and machine listening, in a variety of languages.",meta:{duration:"PT36M54S"},presenter:{name:"Rich Hickey"},source:{id:"rI8tNMsozo0",provider:"youtube"},slug:"simplicity-matters",tag:["railsconf","Ruby on Rails","Simplicity","Ruby","Keynote"],thumbnails:{default:{url:"https://i.ytimg.com/vi/rI8tNMsozo0/default.jpg",height:90,width:120}},title:"Simplicity Matters"}}]}},pathContext:{slug:"dotgo-2015-rob-pike-simplicity-is-complicated",tags:["dotGo","Simplicity"]}}}});
//# sourceMappingURL=path---talk-dotgo-2015-rob-pike-simplicity-is-complicated-828f37e1fdeede44a8c6.js.map