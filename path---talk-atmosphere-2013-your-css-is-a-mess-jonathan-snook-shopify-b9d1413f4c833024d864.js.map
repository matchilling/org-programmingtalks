{"version":3,"sources":["webpack:///path---talk-atmosphere-2013-your-css-is-a-mess-jonathan-snook-shopify-b9d1413f4c833024d864.js","webpack:///./.cache/json/talk-atmosphere-2013-your-css-is-a-mess-jonathan-snook-shopify.json"],"names":["webpackJsonp","2898","module","exports","data","talkJson","description","meta","duration","presenter","name","slug","source","id","provider","tag","title","allTalkJson","edges","node","thumbnails","default","url","height","width","pathContext","tags"],"mappings":"AAAAA,cAAc,gBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,UAAYC,YAAA,2wCAAAC,MAAiyCC,SAAA,YAAsBC,WAAcC,KAAA,MAAYC,KAAA,4DAAAC,QAA8EC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,qQAAAC,MAAA,kEAAwVC,aAAgBC,QAAUC,MAAQb,YAAA,+hBAAAC,MAAsjBC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,uCAAAI,KAAA,iGAAAK,YAAqKC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,2CAAoDG,MAAQb,YAAA,yEAAAC,MAA+FC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,4DAAAI,KAAA,gFAAAK,YAAyKC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,iEAA0EG,MAAQb,YAAA,mTAAAC,MAAyUC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,gEAAAI,KAAA,gDAAAK,YAA6IC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,qEAA8EG,MAAQb,YAAA,k9CAA+SC,MAAyrCC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,sCAAAI,KAAA,oDAAAK,YAAuHC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,2CAAoDG,MAAQb,YAAA,ysBAAAC,MAA+tBC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,mFAAAI,KAAA,2JAAAK,YAA2QC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,uFAAgGG,MAAQb,YAAA,oKAAAC,MAA0LC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,wDAAAI,KAAA,gHAAAK,YAAqMC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,+DAAwEG,MAAQb,YAAA,usBAAAC,MAA6tBC,SAAA,cAAwBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,oBAAAI,KAAA,uEAAAK,YAAwHC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,uBAAgCG,MAAQb,YAAA,itBAAAC,MAA0uBC,SAAA,aAAuBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,yDAAAI,KAAA,oUAAAK,YAA0ZC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,gEAAyEG,MAAQb,YAAA,wuBAAAC,MAA8vBC,SAAA,YAAsBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,2BAAAI,KAAA,wCAAAK,YAAgGC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,gCAAyCG,MAAQb,YAAA,szDAAAC,MAA40DC,SAAA,aAAuBC,WAAcC,KAAA,MAAYE,QAAWC,GAAA,cAAAC,SAAA,WAAwCH,KAAA,oCAAAI,KAAA,qFAAAK,YAAsJC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFR,MAAA,2CAAmDS,aAAgBd,KAAA,4DAAAe,MAAA","file":"path---talk-atmosphere-2013-your-css-is-a-mess-jonathan-snook-shopify-b9d1413f4c833024d864.js","sourcesContent":["webpackJsonp([3253892833278],{\n\n/***/ 2898:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"talkJson\":{\"description\":\"We would like to thank everyone for attending the first edition of Atmosphere Conference, which was held on the 13th-14th May 2013 in Concordia Design in Poznan. Considering the fact that the event was organised for the first time, we must admit that there was a great number of attendees interested in web scalability and performance. Together with organisers we managed to gather over 200 people. Two tracks of lectures, interviews and thousands of conversations behind the scenes guaranteed a successful conference, which we are proud to be organisers of. We hope that this event has met your expectations and gave you a chance to exchange experience, establish cooperation and meet people with similar interests. The first edition of Atmosphere would not be possible if not a great partners' support. Main Partner was the Allegro Group, which has also helped us create the conference schedule. Gold Sponsors were Akamai Technologies and Cisco Systems, whereas Silver Sponsor was the Dell Company. We would also like to thank our media partners, online services and bloggers who helped us promote the event. Photos, presentations and videos will be available soon on the website. Once again - thank you all for creating the first edition of Atmosphere Conference and see you next year.\",\"meta\":{\"duration\":\"PT51M26S\"},\"presenter\":{\"name\":null},\"slug\":\"atmosphere-2013-your-css-is-a-mess-jonathan-snook-shopify\",\"source\":{\"id\":\"C4z_9F6nfS8\",\"provider\":\"youtube\"},\"tag\":[\"atmosphere\",\"conference\",\"2013\",\"allegro\",\"allegrogroup\",\"cisco systems\",\"cisco\",\"dell\",\"akamai\",\"akamai technologies\",\"performance\",\"scalability\",\"devops\",\"web\",\"java\",\"javascript\",\"css\",\"http\",\"developer\",\"programming\",\"tdd\",\"data\",\"john paul\",\"conde nast\"],\"title\":\"Atmosphere 2013: \\\"Your CSS is a Mess\\\" Jonathan Snook (Shopify)\"},\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Anthony Bull believes that all MVC frameworks make trade-offs, but that Ember.js provides the best balance for developing well-factored and ambitious web applications. This talk at the SF HTML5 User Group meetup on January 31st, 2013, features:\\n \\n-an introduction to ember.js\\n-comparisons to other frameworks\\n-code to demonstrate the ember.js syntax.\\n \\nFind out why Anthony calls ember.js the \\\"swiss-army-knife\\\" of developing frameworks.\\n\\n**Interested in a closer look at Anthony's slides? Check them out here: http://mrkn.co/enaa6\",\"meta\":{\"duration\":\"PT28M39S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"9a0OP4in-ac\",\"provider\":\"youtube\"},\"slug\":\"snappy-performance-apps-with-emberjs\",\"tag\":[\"HTML5\",\"SFHTML5\",\"Anthony Bull\",\"ember.js\",\"applications\",\"crowdflower\",\"TechTv\",\"performance\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/9a0OP4in-ac/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Snappy Performance Apps with Ember.js\"}},{\"node\":{\"description\":\"The D Programming Language Conference, May 21-23 2014, Menlo Park, CA.\",\"meta\":{\"duration\":\"PT48M37S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"AhR4PSExnqk\",\"provider\":\"youtube\"},\"slug\":\"dconf-2014-sdc-a-d-compiler-as-a-library-by-amaury-sechet\",\"tag\":[\"D programming language\",\"programming languages\",\"programming\",\"dconf\",\"dlang\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/AhR4PSExnqk/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"DConf 2014: SDC, a D Compiler as a Library by Amaury Sechet\"}},{\"node\":{\"description\":\"I hit on some practical use cases for functors/applicatives/monads.\\n\\nPretty fast and quick run through of everything, but you can't learn the world in 30 min. Hopefully, people get some intuition or a better concrete understanding - enough to play with the code. here github.com/DrBoolean/patterns_talk\",\"meta\":{\"duration\":\"PT29M58S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"AvgwKjTPMmM\",\"provider\":\"youtube\"},\"slug\":\"functional-programming-patterns-for-the-non-mathematician-cut\",\"tag\":[\"monad\",\"lens\",\"monoid\",\"javascript\",\"functor\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/AvgwKjTPMmM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Functional programming patterns for the non-mathematician (cut)\"}},{\"node\":{\"description\":\"Build Your Own Lisp for Great Justice\\n\\nImplementing a toy Lisp interpreter is practically a rite of passage for the budding computer scientist. This hallowed tradition is described in detail in \\\"Lisp in Small Pieces,\\\" the seminal work on the making of Lisps, but everybody loves a tl;dr, so let's do the 40 minute executive summary.\\n\\nWe'll charge at high speed\\nthrough the following topics, with Clojure code to follow along with as we go (because there's no better language for implementing a Lisp than another Lisp):\\n\\n* Parsing: turning text files into ASTs\\n* Fundamental Lisp datatypes\\n* McCarthy's elementary functions\\n* Evaluating Lisp code\\n* Lambdas and lexical scope\\n* Your friend, the state monad\\n* Beyond Lisp: pattern matching and type systems\\n\\nWhen we're done, you'll be ready to go forth and fill the world with Lisps of all shapes, colours and Greenspun violations for Great Justice. Also, it'll be good fun.\\n\\nSpeaker\\nBodil Stokke (@bodil) is a compulsive conference speaker in the fields of functional programming and internets technologies, and is a co-organiser of three annual developer conferences in her home\\ntown of Oslo, Norway, mostly because she's still learning how to stop. She is a prolific contributor to the Free Software community, primarily as a Clojure developer, and has recently taken up designing new programming languages as a hobby. In her spare time, she works as a web developer for Comoyo, which is like Hulu for non-Americans.\",\"meta\":{\"duration\":\"PT53M52S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"DHubfS8E--o\",\"provider\":\"youtube\"},\"slug\":\"functional-programming-bodil-stokke\",\"tag\":[\"programming\",\"lisp\",\"geek\",\"functional\",\"clojure\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/DHubfS8E--o/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Functional programming - Bodil Stokke\"}},{\"node\":{\"description\":\"Higgs, a JIT compiler for JavaScript written in D, was presented at DConf 2013. Basic block versioning, a novel optimization technique in early stages of testing at the time, was also introduced. Experimental results demonstratring how basic block versioning fares on multiple metrics across a variety of benchmarks can now be shown. We discuss how we have interpreted these results to inform further development of Higgs and introduce a JIT compiler architecture based on the idea of lazy/incremental compilation and inlining. We also explore how D has influenced the development of Higgs and take a more in-depth look at how various D features such as templates and CTFE are used in the Higgs implementation.\",\"meta\":{\"duration\":\"PT43M57S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"FGgFMZhnXvU\",\"provider\":\"youtube\"},\"slug\":\"dconf-2014-day-2-talk-2-refactoring-jit-compilation-by-maxime-chevalier-boisvert\",\"tag\":[\"Compiler (Software Genre)\",\"Just In Time\",\"optimization\",\"javascript\",\"compilation\",\"jit\",\"dconf\",\"higgs\",\"conference\",\"talk\",\"Just-in-time Compilation\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/FGgFMZhnXvU/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"DConf 2014 Day 2 Talk 2: Refactoring JIT Compilation by Maxime Chevalier-Boisvert\"}},{\"node\":{\"description\":\"Videos from DjangoCon Europe 2013 are kindly provided by Heroku, a cloud application platform -- a new way of building and deploying web apps: http://heroku.com/\",\"meta\":{\"duration\":\"PT24M31S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"LguTqd6CtOw\",\"provider\":\"youtube\"},\"slug\":\"djangocon-eu-2013-steven-holmes-does-your-stuff-scale\",\"tag\":[\"djangocon\",\"djangocon europe\",\"djangocon europe 2013\",\"django\",\"python\",\"heroku\",\"conference\",\"steven holmes\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/LguTqd6CtOw/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"DjangoCon EU 2013: Steven Holmes - Does your stuff scale?\"}},{\"node\":{\"description\":\"Java is no longer alone on the JVM. It now has to share space with its younger siblings JRuby, Jython, Groovy, Clojure, Scala and many others. Each new language has its own set of advantages and disadvantages compared to Java, and its own niche in which it performs best, but Scala in particular is gaining momentum.\\n\\nIn this presentation to San Francisco Java User Group on January 18, 2012, Marakana's own Dan Rosen introduces Scala to Java developers and shows off some of its expressive power -- higher-order functions, type inference, and pattern matching -- by building a simple web service. You'll never look at Java the same way.\\n\\nSlides from this presentation available here http://bit.ly/ztgVxa\",\"meta\":{\"duration\":\"PT1H32M35S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"PKc5IwHG68k\",\"provider\":\"youtube\"},\"slug\":\"scala-versus-java\",\"tag\":[\"scala\",\"java\",\"marakana\",\"techtv\",\"typesafe\",\"dan rosen\",\"sbt\",\"jdk\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/PKc5IwHG68k/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Scala Versus Java\"}},{\"node\":{\"description\":\"Learn from John Papa's talk \\\"10 AngularJS Patterns\\\" from Code on the Beach 2014 at One Ocean Resort & Spa, Atlantic Beach, Florida. Sunday, August 10, 2014. www.codeonthebeach.com\\n\\nAbstract:\\n\\\"Once you get beyond the AngularJS basics there are many decisions to be made on how to build robust and maintainable apps. Come learn how to build AngularJS apps that manage multiple screens, structure your application code, maintain clean code with popular patterns, implement CRUD, perform robust HTML validation, use local storage, pass unit tests, and use a automated build tasks. This session explores solutions to several of the common challenges that AngularJS developers face while building business applications.\\\"\",\"meta\":{\"duration\":\"PT1H1M27S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"UlvCbnKAH3g\",\"provider\":\"youtube\"},\"slug\":\"john-papa-10-angularjs-patterns-code-on-the-beach-2014\",\"tag\":[\"John Papa\",\"AngularJS (Software)\",\"Beach\",\"JavaScript\",\"Single Page Apps\",\"Patterns\",\"Code on the Beach\",\"conference\",\"Software Engineering (Industry)\",\"Software Development (Industry)\",\"Software Design Pattern (Field Of Study)\",\"Programming Language\",\"programming\",\"Jacksonville (City/Town/Village)\",\"Florida (US State)\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/UlvCbnKAH3g/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"John Papa - 10 AngularJS Patterns - Code on the Beach 2014\"}},{\"node\":{\"description\":\"If you always wanted to know more about about Clang's AST [1], for example because you want to implement an awesome tool [2, 3] based on Clang, or simply because you want to start contributing, this talk is for you.\\n\\nMake sure to watch in HD to be able to read the font in the terminal!\\n\\nThe semantic code completion in the vim session is powered by YCM [4], and the quick formatting is done by clang-format [5].\\n\\n[1] http://clang.llvm.org/docs/IntroductionToTheClangAST.html\\n[2] http://clang.llvm.org/docs/Tooling.html\\n[3] http://clang.llvm.org/docs/LibTooling.html\\n[4] https://github.com/Valloric/YouCompleteMe\\n[5] http://clang.llvm.org/docs/ClangFormat.html\\n\\nFrom the LLVM Euro Conference 2013: http://llvm.org/devmtg/2013-04/\",\"meta\":{\"duration\":\"PT44M53S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"VqCkCDFLSsc\",\"provider\":\"youtube\"},\"slug\":\"the-clang-ast-a-tutorial\",\"tag\":[\"C++\",\"Clang\",\"compiler\",\"programming\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/VqCkCDFLSsc/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"The Clang AST - a Tutorial\"}},{\"node\":{\"description\":\"Cross posted from msdn's channel 9.\\n\\nFunctional programming is increasing in popularity these days given the inherent problems with shared mutable state that is rife in the imperative world. As we march on to a world of multi and many-core chipsets, software engineering must evolve to better equip software engineers with the tools to exploit the vast power of multiple core processors as it won't come for free as it did in the recent past which was predictably based on Moore's law.\\n\\nOf course, learning new ways to think about programming semantics and code patterns are not always straight forward. For example, most imperative programmers (which include most of us who build software for a living...) are somewhat perplexed by the notion of functions as first class data structures that can be combined to create powerful and composable systems. Languages like Haskell are pure functional languages and require programmers to think in a different way, often in a precise mathematical fashion where composing and chaining functions is \\\"the Way\\\".\\n\\nDr. Brian Beckman, a Channel 9 celebrity, astrophysicist and senior software engineer thought it would be a very good idea to address the complexity of monads in an easy to understand way: a technical conversation at the whiteboard with yours truly for Channel 9.\\n\\nThis video interview is the result of Brian's idea that he can in fact remove the fear of monads from anybody who pays attention to his explanation. Of course, you can't just cover monads in a vacuum (category theory is not really addressed here) so the context is functional programming (Brian covers functions and composable functional structures (function chains) and of course monoids and then monads).\\n\\nTune in. There's a lot to learn here and only Brian can make monads easy to understand for the rest of us!\",\"meta\":{\"duration\":\"PT1H7M11S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"ZhuHCtR3xq8\",\"provider\":\"youtube\"},\"slug\":\"brian-beckman-dont-fear-the-monad\",\"tag\":[\"haskell\",\"monads\",\"programming\",\"brian beckman\",\"functional programming\",\"Haskell\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/ZhuHCtR3xq8/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Brian Beckman: Don't fear the Monad\"}}]}},\"pathContext\":{\"slug\":\"atmosphere-2013-your-css-is-a-mess-jonathan-snook-shopify\",\"tags\":[\"atmosphere\",\"conference\",\"2013\",\"allegro\",\"allegrogroup\",\"cisco systems\",\"cisco\",\"dell\",\"akamai\",\"akamai technologies\",\"performance\",\"scalability\",\"devops\",\"web\",\"java\",\"javascript\",\"css\",\"http\",\"developer\",\"programming\",\"tdd\",\"data\",\"john paul\",\"conde nast\"]}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---talk-atmosphere-2013-your-css-is-a-mess-jonathan-snook-shopify-b9d1413f4c833024d864.js","module.exports = {\"data\":{\"talkJson\":{\"description\":\"We would like to thank everyone for attending the first edition of Atmosphere Conference, which was held on the 13th-14th May 2013 in Concordia Design in Poznan. Considering the fact that the event was organised for the first time, we must admit that there was a great number of attendees interested in web scalability and performance. Together with organisers we managed to gather over 200 people. Two tracks of lectures, interviews and thousands of conversations behind the scenes guaranteed a successful conference, which we are proud to be organisers of. We hope that this event has met your expectations and gave you a chance to exchange experience, establish cooperation and meet people with similar interests. The first edition of Atmosphere would not be possible if not a great partners' support. Main Partner was the Allegro Group, which has also helped us create the conference schedule. Gold Sponsors were Akamai Technologies and Cisco Systems, whereas Silver Sponsor was the Dell Company. We would also like to thank our media partners, online services and bloggers who helped us promote the event. Photos, presentations and videos will be available soon on the website. Once again - thank you all for creating the first edition of Atmosphere Conference and see you next year.\",\"meta\":{\"duration\":\"PT51M26S\"},\"presenter\":{\"name\":null},\"slug\":\"atmosphere-2013-your-css-is-a-mess-jonathan-snook-shopify\",\"source\":{\"id\":\"C4z_9F6nfS8\",\"provider\":\"youtube\"},\"tag\":[\"atmosphere\",\"conference\",\"2013\",\"allegro\",\"allegrogroup\",\"cisco systems\",\"cisco\",\"dell\",\"akamai\",\"akamai technologies\",\"performance\",\"scalability\",\"devops\",\"web\",\"java\",\"javascript\",\"css\",\"http\",\"developer\",\"programming\",\"tdd\",\"data\",\"john paul\",\"conde nast\"],\"title\":\"Atmosphere 2013: \\\"Your CSS is a Mess\\\" Jonathan Snook (Shopify)\"},\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Anthony Bull believes that all MVC frameworks make trade-offs, but that Ember.js provides the best balance for developing well-factored and ambitious web applications. This talk at the SF HTML5 User Group meetup on January 31st, 2013, features:\\n \\n-an introduction to ember.js\\n-comparisons to other frameworks\\n-code to demonstrate the ember.js syntax.\\n \\nFind out why Anthony calls ember.js the \\\"swiss-army-knife\\\" of developing frameworks.\\n\\n**Interested in a closer look at Anthony's slides? Check them out here: http://mrkn.co/enaa6\",\"meta\":{\"duration\":\"PT28M39S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"9a0OP4in-ac\",\"provider\":\"youtube\"},\"slug\":\"snappy-performance-apps-with-emberjs\",\"tag\":[\"HTML5\",\"SFHTML5\",\"Anthony Bull\",\"ember.js\",\"applications\",\"crowdflower\",\"TechTv\",\"performance\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/9a0OP4in-ac/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Snappy Performance Apps with Ember.js\"}},{\"node\":{\"description\":\"The D Programming Language Conference, May 21-23 2014, Menlo Park, CA.\",\"meta\":{\"duration\":\"PT48M37S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"AhR4PSExnqk\",\"provider\":\"youtube\"},\"slug\":\"dconf-2014-sdc-a-d-compiler-as-a-library-by-amaury-sechet\",\"tag\":[\"D programming language\",\"programming languages\",\"programming\",\"dconf\",\"dlang\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/AhR4PSExnqk/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"DConf 2014: SDC, a D Compiler as a Library by Amaury Sechet\"}},{\"node\":{\"description\":\"I hit on some practical use cases for functors/applicatives/monads.\\n\\nPretty fast and quick run through of everything, but you can't learn the world in 30 min. Hopefully, people get some intuition or a better concrete understanding - enough to play with the code. here github.com/DrBoolean/patterns_talk\",\"meta\":{\"duration\":\"PT29M58S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"AvgwKjTPMmM\",\"provider\":\"youtube\"},\"slug\":\"functional-programming-patterns-for-the-non-mathematician-cut\",\"tag\":[\"monad\",\"lens\",\"monoid\",\"javascript\",\"functor\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/AvgwKjTPMmM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Functional programming patterns for the non-mathematician (cut)\"}},{\"node\":{\"description\":\"Build Your Own Lisp for Great Justice\\n\\nImplementing a toy Lisp interpreter is practically a rite of passage for the budding computer scientist. This hallowed tradition is described in detail in \\\"Lisp in Small Pieces,\\\" the seminal work on the making of Lisps, but everybody loves a tl;dr, so let's do the 40 minute executive summary.\\n\\nWe'll charge at high speed\\nthrough the following topics, with Clojure code to follow along with as we go (because there's no better language for implementing a Lisp than another Lisp):\\n\\n* Parsing: turning text files into ASTs\\n* Fundamental Lisp datatypes\\n* McCarthy's elementary functions\\n* Evaluating Lisp code\\n* Lambdas and lexical scope\\n* Your friend, the state monad\\n* Beyond Lisp: pattern matching and type systems\\n\\nWhen we're done, you'll be ready to go forth and fill the world with Lisps of all shapes, colours and Greenspun violations for Great Justice. Also, it'll be good fun.\\n\\nSpeaker\\nBodil Stokke (@bodil) is a compulsive conference speaker in the fields of functional programming and internets technologies, and is a co-organiser of three annual developer conferences in her home\\ntown of Oslo, Norway, mostly because she's still learning how to stop. She is a prolific contributor to the Free Software community, primarily as a Clojure developer, and has recently taken up designing new programming languages as a hobby. In her spare time, she works as a web developer for Comoyo, which is like Hulu for non-Americans.\",\"meta\":{\"duration\":\"PT53M52S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"DHubfS8E--o\",\"provider\":\"youtube\"},\"slug\":\"functional-programming-bodil-stokke\",\"tag\":[\"programming\",\"lisp\",\"geek\",\"functional\",\"clojure\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/DHubfS8E--o/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Functional programming - Bodil Stokke\"}},{\"node\":{\"description\":\"Higgs, a JIT compiler for JavaScript written in D, was presented at DConf 2013. Basic block versioning, a novel optimization technique in early stages of testing at the time, was also introduced. Experimental results demonstratring how basic block versioning fares on multiple metrics across a variety of benchmarks can now be shown. We discuss how we have interpreted these results to inform further development of Higgs and introduce a JIT compiler architecture based on the idea of lazy/incremental compilation and inlining. We also explore how D has influenced the development of Higgs and take a more in-depth look at how various D features such as templates and CTFE are used in the Higgs implementation.\",\"meta\":{\"duration\":\"PT43M57S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"FGgFMZhnXvU\",\"provider\":\"youtube\"},\"slug\":\"dconf-2014-day-2-talk-2-refactoring-jit-compilation-by-maxime-chevalier-boisvert\",\"tag\":[\"Compiler (Software Genre)\",\"Just In Time\",\"optimization\",\"javascript\",\"compilation\",\"jit\",\"dconf\",\"higgs\",\"conference\",\"talk\",\"Just-in-time Compilation\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/FGgFMZhnXvU/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"DConf 2014 Day 2 Talk 2: Refactoring JIT Compilation by Maxime Chevalier-Boisvert\"}},{\"node\":{\"description\":\"Videos from DjangoCon Europe 2013 are kindly provided by Heroku, a cloud application platform -- a new way of building and deploying web apps: http://heroku.com/\",\"meta\":{\"duration\":\"PT24M31S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"LguTqd6CtOw\",\"provider\":\"youtube\"},\"slug\":\"djangocon-eu-2013-steven-holmes-does-your-stuff-scale\",\"tag\":[\"djangocon\",\"djangocon europe\",\"djangocon europe 2013\",\"django\",\"python\",\"heroku\",\"conference\",\"steven holmes\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/LguTqd6CtOw/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"DjangoCon EU 2013: Steven Holmes - Does your stuff scale?\"}},{\"node\":{\"description\":\"Java is no longer alone on the JVM. It now has to share space with its younger siblings JRuby, Jython, Groovy, Clojure, Scala and many others. Each new language has its own set of advantages and disadvantages compared to Java, and its own niche in which it performs best, but Scala in particular is gaining momentum.\\n\\nIn this presentation to San Francisco Java User Group on January 18, 2012, Marakana's own Dan Rosen introduces Scala to Java developers and shows off some of its expressive power -- higher-order functions, type inference, and pattern matching -- by building a simple web service. You'll never look at Java the same way.\\n\\nSlides from this presentation available here http://bit.ly/ztgVxa\",\"meta\":{\"duration\":\"PT1H32M35S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"PKc5IwHG68k\",\"provider\":\"youtube\"},\"slug\":\"scala-versus-java\",\"tag\":[\"scala\",\"java\",\"marakana\",\"techtv\",\"typesafe\",\"dan rosen\",\"sbt\",\"jdk\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/PKc5IwHG68k/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Scala Versus Java\"}},{\"node\":{\"description\":\"Learn from John Papa's talk \\\"10 AngularJS Patterns\\\" from Code on the Beach 2014 at One Ocean Resort & Spa, Atlantic Beach, Florida. Sunday, August 10, 2014. www.codeonthebeach.com\\n\\nAbstract:\\n\\\"Once you get beyond the AngularJS basics there are many decisions to be made on how to build robust and maintainable apps. Come learn how to build AngularJS apps that manage multiple screens, structure your application code, maintain clean code with popular patterns, implement CRUD, perform robust HTML validation, use local storage, pass unit tests, and use a automated build tasks. This session explores solutions to several of the common challenges that AngularJS developers face while building business applications.\\\"\",\"meta\":{\"duration\":\"PT1H1M27S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"UlvCbnKAH3g\",\"provider\":\"youtube\"},\"slug\":\"john-papa-10-angularjs-patterns-code-on-the-beach-2014\",\"tag\":[\"John Papa\",\"AngularJS (Software)\",\"Beach\",\"JavaScript\",\"Single Page Apps\",\"Patterns\",\"Code on the Beach\",\"conference\",\"Software Engineering (Industry)\",\"Software Development (Industry)\",\"Software Design Pattern (Field Of Study)\",\"Programming Language\",\"programming\",\"Jacksonville (City/Town/Village)\",\"Florida (US State)\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/UlvCbnKAH3g/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"John Papa - 10 AngularJS Patterns - Code on the Beach 2014\"}},{\"node\":{\"description\":\"If you always wanted to know more about about Clang's AST [1], for example because you want to implement an awesome tool [2, 3] based on Clang, or simply because you want to start contributing, this talk is for you.\\n\\nMake sure to watch in HD to be able to read the font in the terminal!\\n\\nThe semantic code completion in the vim session is powered by YCM [4], and the quick formatting is done by clang-format [5].\\n\\n[1] http://clang.llvm.org/docs/IntroductionToTheClangAST.html\\n[2] http://clang.llvm.org/docs/Tooling.html\\n[3] http://clang.llvm.org/docs/LibTooling.html\\n[4] https://github.com/Valloric/YouCompleteMe\\n[5] http://clang.llvm.org/docs/ClangFormat.html\\n\\nFrom the LLVM Euro Conference 2013: http://llvm.org/devmtg/2013-04/\",\"meta\":{\"duration\":\"PT44M53S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"VqCkCDFLSsc\",\"provider\":\"youtube\"},\"slug\":\"the-clang-ast-a-tutorial\",\"tag\":[\"C++\",\"Clang\",\"compiler\",\"programming\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/VqCkCDFLSsc/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"The Clang AST - a Tutorial\"}},{\"node\":{\"description\":\"Cross posted from msdn's channel 9.\\n\\nFunctional programming is increasing in popularity these days given the inherent problems with shared mutable state that is rife in the imperative world. As we march on to a world of multi and many-core chipsets, software engineering must evolve to better equip software engineers with the tools to exploit the vast power of multiple core processors as it won't come for free as it did in the recent past which was predictably based on Moore's law.\\n\\nOf course, learning new ways to think about programming semantics and code patterns are not always straight forward. For example, most imperative programmers (which include most of us who build software for a living...) are somewhat perplexed by the notion of functions as first class data structures that can be combined to create powerful and composable systems. Languages like Haskell are pure functional languages and require programmers to think in a different way, often in a precise mathematical fashion where composing and chaining functions is \\\"the Way\\\".\\n\\nDr. Brian Beckman, a Channel 9 celebrity, astrophysicist and senior software engineer thought it would be a very good idea to address the complexity of monads in an easy to understand way: a technical conversation at the whiteboard with yours truly for Channel 9.\\n\\nThis video interview is the result of Brian's idea that he can in fact remove the fear of monads from anybody who pays attention to his explanation. Of course, you can't just cover monads in a vacuum (category theory is not really addressed here) so the context is functional programming (Brian covers functions and composable functional structures (function chains) and of course monoids and then monads).\\n\\nTune in. There's a lot to learn here and only Brian can make monads easy to understand for the rest of us!\",\"meta\":{\"duration\":\"PT1H7M11S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"ZhuHCtR3xq8\",\"provider\":\"youtube\"},\"slug\":\"brian-beckman-dont-fear-the-monad\",\"tag\":[\"haskell\",\"monads\",\"programming\",\"brian beckman\",\"functional programming\",\"Haskell\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/ZhuHCtR3xq8/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Brian Beckman: Don't fear the Monad\"}}]}},\"pathContext\":{\"slug\":\"atmosphere-2013-your-css-is-a-mess-jonathan-snook-shopify\",\"tags\":[\"atmosphere\",\"conference\",\"2013\",\"allegro\",\"allegrogroup\",\"cisco systems\",\"cisco\",\"dell\",\"akamai\",\"akamai technologies\",\"performance\",\"scalability\",\"devops\",\"web\",\"java\",\"javascript\",\"css\",\"http\",\"developer\",\"programming\",\"tdd\",\"data\",\"john paul\",\"conde nast\"]}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/talk-atmosphere-2013-your-css-is-a-mess-jonathan-snook-shopify.json\n// module id = 2898\n// module chunks = 3253892833278"],"sourceRoot":""}