{"version":3,"sources":["webpack:///path---tag-rust-99f9be9341c6c4d5421d.js","webpack:///./.cache/json/tag-rust.json"],"names":["webpackJsonp","2685","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,8zBAAAC,MAAo1BC,SAAA,WAAqBC,WAAcC,KAAA,iBAAuBC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,mCAAAC,KAAA,0BAAAC,YAA0FC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,wBAAgCC,aAAgBR,KAAA,OAAAC,IAAA","file":"path---tag-rust-99f9be9341c6c4d5421d.js","sourcesContent":["webpackJsonp([124141153110974],{\n\n/***/ 2685:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Rust aims to build a solid foundation for building safe software systems faster. We can ensure fewer mistakes enter our code base with immutability by default, no concept of null, and proven memory safety. Rust's state of the art compiler helps developers catch errors as early as possible without paying a penalty at runtime. Developers can write high level code in a modern language without sacrificing expressiveness, development time, or execution speed. We will explore how Rust's concept of Ownership is the key to providing compile-time safety. These guarantees apply even in the face of concurrency, allowing you to easily write multi-threaded programs correctly the first time. Rust 1.0 was released May 15th. Start building better software today.\\n\\nHelp us caption & translate this video!\\n\\nhttp://amara.org/v/HdB0/\",\"meta\":{\"duration\":\"PT45M2S\"},\"presenter\":{\"name\":\"Alex Burkhart\"},\"source\":{\"id\":\"-dxqbhLIgdM\",\"provider\":\"youtube\"},\"slug\":\"lambdaconf-2015-in-rust-we-trust\",\"tag\":[\"Rust\",\"LambdaConf 2015\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/-dxqbhLIgdM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"In Rust We Trust\"}}]}},\"pathContext\":{\"slug\":\"rust\",\"tag\":\"Rust\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-rust-99f9be9341c6c4d5421d.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"Rust aims to build a solid foundation for building safe software systems faster. We can ensure fewer mistakes enter our code base with immutability by default, no concept of null, and proven memory safety. Rust's state of the art compiler helps developers catch errors as early as possible without paying a penalty at runtime. Developers can write high level code in a modern language without sacrificing expressiveness, development time, or execution speed. We will explore how Rust's concept of Ownership is the key to providing compile-time safety. These guarantees apply even in the face of concurrency, allowing you to easily write multi-threaded programs correctly the first time. Rust 1.0 was released May 15th. Start building better software today.\\n\\nHelp us caption & translate this video!\\n\\nhttp://amara.org/v/HdB0/\",\"meta\":{\"duration\":\"PT45M2S\"},\"presenter\":{\"name\":\"Alex Burkhart\"},\"source\":{\"id\":\"-dxqbhLIgdM\",\"provider\":\"youtube\"},\"slug\":\"lambdaconf-2015-in-rust-we-trust\",\"tag\":[\"Rust\",\"LambdaConf 2015\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/-dxqbhLIgdM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"In Rust We Trust\"}}]}},\"pathContext\":{\"slug\":\"rust\",\"tag\":\"Rust\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-rust.json\n// module id = 2685\n// module chunks = 124141153110974"],"sourceRoot":""}