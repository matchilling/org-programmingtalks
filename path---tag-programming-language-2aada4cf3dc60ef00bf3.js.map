{"version":3,"sources":["webpack:///path---tag-programming-language-2aada4cf3dc60ef00bf3.js","webpack:///./.cache/json/tag-programming-language.json"],"names":["webpackJsonp","2613","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"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","file":"path---tag-programming-language-2aada4cf3dc60ef00bf3.js","sourcesContent":["webpackJsonp([229725764114414],{\n\n/***/ 2613:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"This presentation was recorded at GOTO Chicago 2015\\nhttp://gotochgo.com\\n\\nBrian LeRoux - PhoneGap Project Team, Adobe\\n\\nABSTRACT\\nJavaScript has a long history of being difficult to structure and maintain. To deal with this complexity a swath of frameworks appeared over the years. Prototype.js was quickly followed by jQuery and hounded by Dojo, YUI, Mootools and [...]\\nDownload slides and read the full abstract here:\\nhttp://gotocon.com/chicago-2015/presentation/ECMAScript%206%20&%20Web%20Components\\n\\nhttps://twitter.com/gotochgo\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT36M12S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"2w4sRkTnhPM\",\"provider\":\"youtube\"},\"slug\":\"ecmascript-6-and-web-components-brian-leroux\",\"tag\":[\"Brian LeRoux\",\"ECMAScript (Programming Language)\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\",\"World Wide Web (Video Game Platform)\",\"Software Development (Industry)\",\"Programming Language\",\"Java\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/2w4sRkTnhPM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"ECMAScript 6 & Web Components • Brian LeRoux\"}},{\"node\":{\"description\":\"The time has come to think concurrently. Traditional software concurrency management leads to non-deterministic race conditions and deadlocks that are hard to reproduce and debug, leading to unreliable software. That means it's time to introduce math. Tony Hoare's paradigm of communicating sequential processes, or CSP, is not only a robust way to manage concurrency, but it's fun too! Join us to learn more about how CSP in the Go programming language allows us to reason more clearly about many things happening at once.\\n\\nAbout Eric:\\n\\nEric Shull is a software consultant and developer at Atomic Object. He enjoys working in Go and ClojureScript, writing, sketchnoting, doing math, creating data visualizations, making experimental programming languages, and much, much more.\",\"meta\":{\"duration\":\"PT43M22S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"3gXWA6WEvOM\",\"provider\":\"youtube\"},\"slug\":\"eric-shull-communicating-sequential-processes-september-22-2015\",\"tag\":[\"Communicating Sequential Processes (Programming Language)\",\"Eric Shull\",\"Atomic Object\",\"Programming Language\",\"Programmer (Profession)\",\"Software GR\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/3gXWA6WEvOM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Eric Shull: Communicating Sequential Processes (September 22, 2015)\"}},{\"node\":{\"description\":\"Dan North - Agile Troublemaker, Developer, Originator of BDD\\n\\nABSTRACT\\nThus begins an old, and sadly lost in the mists of Usenet, love story about Vi and Ed (who becomes her \\\"ex\\\"), told entirely in Unix commands. I had no idea when I started learning these arcane (guess how the \\\"dd\\\" command got its name) and cryptic (what about \\\"grep\\\"?) Unix commands how incredibly useful they would become over the next two decades. If your primary OS is Linux or OSX on the desktop, and maybe iOS or Android on the move, you'll find this 40-something year joke (\\\"Unix\\\" itself was a bad pun) has managed to embed itself into every facet of your technological life.\\n\\nBeing comfortable at a shell prompt and having a healthy working knowledge of Unix commands and regular expressions will give you a whole new level of capability. In this fun talk I'll introduce a few commands and shell tricks you should have in your back pocket, and show you how to start taking control of your operating system. If you ask nicely I'll even tell you about the production system I wrote using Makefiles.\",\"meta\":{\"duration\":\"PT30M4S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"7uwW20odwEk\",\"provider\":\"youtube\"},\"slug\":\"power-use-of-unix-dan-north\",\"tag\":[\"Unix (Software)\",\"Unix Commands\",\"Grep (Software)\",\"Linux software\",\"OSx86 (Software)\",\"Android (Software)\",\"production system\",\"Makefiles\",\"Dan North\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\",\"Programming Language\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/7uwW20odwEk/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Power Use of UNIX • Dan North\"}},{\"node\":{\"description\":\"Check out our upcoming conferences at http://gotocon.com\\nSubscribe to the GOTO Conferences YouTube Channel at https://www.youtube.com/user/GOTOConf...\\n\\nJanne Jul Jensen - Interaction Designer and Usability Specialist\\n\\nABSTRACT\\nMost developers today are aware of the importance of creating a good user interface with a high level of usability, but many are lacking the methods and techniques that can help in this process. This session will present to the listeners a range of concrete methods and techniques applicable in different phases of a design process, to handle specific challenges. This will include design patterns, personas, wire framing, paper prototype testing, progressive disclosure, card sorting and creative workshops and many of the methods and techniques will be accompanied by examples.\\n\\nhttps://twitter.com/gotocon\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT51M20S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"7OSkB4BCx00\",\"provider\":\"youtube\"},\"slug\":\"user-interface-ux-techniques-janne-jul-jensen\",\"tag\":[\"Software Development\",\"Janne Jul Jensen\",\"User Interface Design (Field Of Study)\",\"User Interface (Ontology Instance)\",\"User Interface\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\",\"User Experience Design (Industry)\",\"Technology (Industry)\",\"User Interface (Speech Topic)\",\"UX\",\"Trifork\",\"Design (Industry)\",\"Programming Language\",\"Videos for Developers\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/7OSkB4BCx00/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"User Interface (UX) Techniques • Janne Jul Jensen\"}},{\"node\":{\"description\":\"Meetup: http://www.meetup.com/papers-we-love/events/214400572/\\nPaper: http://www.cs.cmu.edu/~crary/819-f09/Hoare69.pdf\\nSlides: https://speakerdeck.com/paperswelove/jean-yang-on-an-axiomatic-basis-for-computer-programming\\nAudio: http://www.mixcloud.com/paperswelove/jean-yang-on-an-axiomatic-basis-for-computer-programming/\\n---------------------------------------------------------------------------------------------\\nSponsored by The Ladders (@TheLaddersDev)\\n---------------------------------------------------------------------------------------------\\n\\nDescription\\n---------------\\nOur lives now run on software. Bugs are becoming not just annoyances for software developers, but sources of potentially catastrophic failures. A careless programmer mistake could leak our social security numbers or crash our cars. While testing provides some assurance, it is difficult to test all possibilities in complex systems--and practically impossible in concurrent systems. For the critical systems in our lives, we should demand mathematical guarantees that the software behaves the way the programmer expected.\\n\\nA single paper influenced much of the work towards providing these mathematical guarantees. C.A.R. Hoare’s seminal 1969 paper “An Axiomatic Basis for Computer Programming” introduces a method of reasoning about program correctness now known as Hoare logic. In this paper, Hoare provides a technique that 1) allows programmers to express program properties and 2) allows these properties to be automatically checked. These ideas have influenced decades of research in automated reasoning about software correctness.\\n\\nIn this talk, I will describe the main ideas in Hoare logic, as well as the impact of these ideas. I will talk about my personal experience using Hoare logic to verify memory guarantees in an operating system. I will also discuss takeaway lessons for working programmers.\\n\\nBio\\n----\\nJean Yang (@jeanqasaur) is a final-year PhD student at MIT. For her PhD thesis she has created Jeeves, a programming language for automatically enforcing information flow policies for security and privacy. You may be more familiar with one of her other projects, Haskell Ryan Gosling.\",\"meta\":{\"duration\":\"PT1H4M32S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"GQi-6-d5ooQ\",\"provider\":\"youtube\"},\"slug\":\"jean-yang-on-an-axiomatic-basis-for-computer-programming\",\"tag\":[\"Computer Programming (Conference Subject)\",\"Mathematics (Field Of Study)\",\"Software Engineering (Industry)\",\"Program Correctness\",\"Ryan Gosling\",\"Hoare Logic\",\"Type Checking\",\"Computer (Industry)\",\"Programming Language\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/GQi-6-d5ooQ/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Jean Yang on An Axiomatic Basis for Computer Programming\"}},{\"node\":{\"description\":\"Check out our upcoming conferences at http://gotocon.com\\nSubscribe to GOTO Conference's YouTube Channel at http://www.youtube.com/user/GOTOConferences?sub_confirmation=1\\n\\nDouglas Crockford - JSON Creator & Yahoo! JS Architect\\n\\nABSTRACT\\nMuch of programming language design is dictated by fashion. As a consequence, opinions about programming languages tend to be strong, shallow, and deeply emotional. The best languages are brilliant and sadly unfashionable. But we love our stylish, over-rated syntax, and this talk presents an amazing parsing technique that helps achieve it.\\n\\nhttps://twitter.com/gotocon\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT49M40S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"Nlqv6NtBXcA\",\"provider\":\"youtube\"},\"slug\":\"syntaxation-douglas-crockford\",\"tag\":[\"Programming Language\",\"Syntaxation\",\"Douglas Crockford\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/Nlqv6NtBXcA/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Syntaxation • Douglas Crockford\"}},{\"node\":{\"description\":\"This presentation was recorded at GOTO Chicago 2015\\nhttp://gotochgo.com\\n\\nCorey Haines - Author, Speaker, Teacher & all around Groovy Guy\\n\\nABSTRACT\\nYou've probably heard about the lambda calculus, building up our computing structures from just the treasured lambda. But how much have you played with it? In this talk, armed only with Vim and the CLI, we'll explore [...]\\nDownload slides and read the full abstract here:\\nhttp://gotocon.com/chicago-2015/presentation/Fun%20with%20the%20lambda%20calculus\\n\\nhttps://twitter.com/gotochgo\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT48M49S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"QPqoFCHpLF4\",\"provider\":\"youtube\"},\"slug\":\"fun-with-the-lambda-calculus-corey-haines\",\"tag\":[\"Corey Haines\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\",\"Lambda\",\"Programming Language\",\"Software Engineering (Industry)\",\"Software Development (Industry)\",\"Anonymous Function\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/QPqoFCHpLF4/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Fun with the Lambda Calculus • Corey Haines\"}},{\"node\":{\"description\":\"Learn from John Papa's talk \\\"10 AngularJS Patterns\\\" from Code on the Beach 2014 at One Ocean Resort & Spa, Atlantic Beach, Florida. Sunday, August 10, 2014. www.codeonthebeach.com\\n\\nAbstract:\\n\\\"Once you get beyond the AngularJS basics there are many decisions to be made on how to build robust and maintainable apps. Come learn how to build AngularJS apps that manage multiple screens, structure your application code, maintain clean code with popular patterns, implement CRUD, perform robust HTML validation, use local storage, pass unit tests, and use a automated build tasks. This session explores solutions to several of the common challenges that AngularJS developers face while building business applications.\\\"\",\"meta\":{\"duration\":\"PT1H1M27S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"UlvCbnKAH3g\",\"provider\":\"youtube\"},\"slug\":\"john-papa-10-angularjs-patterns-code-on-the-beach-2014\",\"tag\":[\"John Papa\",\"AngularJS (Software)\",\"Beach\",\"JavaScript\",\"Single Page Apps\",\"Patterns\",\"Code on the Beach\",\"conference\",\"Software Engineering (Industry)\",\"Software Development (Industry)\",\"Software Design Pattern (Field Of Study)\",\"Programming Language\",\"programming\",\"Jacksonville (City/Town/Village)\",\"Florida (US State)\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/UlvCbnKAH3g/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"John Papa - 10 AngularJS Patterns - Code on the Beach 2014\"}},{\"node\":{\"description\":\"Droidcon had its first Canadian edition on April 9-10, 2015 in Montreal. \\nIt was organized by Mirego http://www.mirego.com/en \\n\\nWe had Jake Wharton telling us more about some Ok Libraries at Droidcon Montreal.\\n\\nA Few \\\"OK\\\" Libraries:\\nThis talk will be an in-depth look at Okio—a tiny library for interacting with bytes—and a few of the libraries written on top of it: OkHttp, Retrofit, and a newcomer named Moshi. \\n\\nOkio evolved naturally inside of OkHttp before being split out into its own library. It wraps common patterns behind a friendly API for reading, writing, and processing data. We'll start with some fundamentals of the library and how it can enable you to work very close to raw data with ease. \\n\\nAfter an introduction to Okio, we will look at three libraries written with it: OkHttp, a modern HTTP client; Retrofit, a high-level HTTP wrapper; and Moshi, a brand new library for serialization. \\n\\nNot only are these libraries powerful on their own, but when combined their efficiency and performance dramatically increase. We'll conclude with demonstration of how to use them in your applications to great effect. \\n\\n- Jake Wharton\\n\\nAndroid developer for Square working on Square Cash. Has a long-time severe allergy to boilerplate code and for years has been raising awareness on the issue as well as leading efforts to eradicate this horrible disease that plagues modern developers.\",\"meta\":{\"duration\":\"PT1H9M20S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"WvyScM_S88c\",\"provider\":\"youtube\"},\"slug\":\"droidcon-montreal-jake-wharton-a-few-ok-libraries\",\"tag\":[\"Droidcon\",\"Montreal (City/Town/Village)\",\"Library (Software Genre)\",\"Programming Language\",\"Canada\",\"Droidcon Montreal\",\"Google I/O (Conference Series)\",\"Android (Operating System)\",\"Conference\",\"Android Programming\",\"Developers\",\"Google\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/WvyScM_S88c/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Droidcon Montreal Jake Wharton - A Few Ok Libraries\"}},{\"node\":{\"description\":\"This presentation was recorded at GOTO Chicago 2014\\nhttp://gotochgo.com\\n\\nDan North - Agile Troublemaker, Developer, Originator of BDD\\n\\nABSTRACT\\nWithout rigorous care and attention software quickly becomes messy and unmanageable. Even with the best intentions entropy and complexity are a fact of life in growing applications. As in many other contexts it is easier to tackle the symptoms than the cause. Systems Thinking calls this behaviour \\\"Shifting the Burden\\\" and it is more widespread than you might think. From your IDE to your automated build, from DDD’s ACLs to TDD and other TLAs, from backlogs to burn-ups, we are surrounded by props for coping with complexity. As appealing as these are, they also make us less likely to address the underlying problem of complexity itself. Dan believes you can learn to recognise these coping mechanisms for what they are, and intends to set you on the path to simplicating your programming life. \\n\\nLink to slides: http://gotocon.com/dl/goto-chicago-20...\\n\\nhttps://twitter.com/gotochgo\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT55M31S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"XqgwHXsQA1g\",\"provider\":\"youtube\"},\"slug\":\"kicking-the-complexity-habit-dan-north\",\"tag\":[\"Software As A Service (Industry)\",\"Application Software (Software Genre)\",\"Programming Language\",\"dan north\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\",\"Programmer (Profession)\",\"complexity\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/XqgwHXsQA1g/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Kicking the Complexity Habit • Dan North\"}},{\"node\":{\"description\":\"Take a step back from your normal programming approach and discover a new way of looking at problems. All living organisms information systems are based on chemical processes. What can we learn by using this metaphor of chemistry in our programming? We will answer this question by looking at Artificial Chemical Computing. Building programs based on molecules and chemical reactions, we will explore new ways of thinking and opening ourselves up to innovation. We will discuss the basics of Chemical Programming and even touch on High Order Chemical Programming as well. Code examples will be in the powerful, elegant, and interactive programming language of Clojure, but you will not need to be an expert in the language to enjoy the demos. Come and join us for this adventure in looking at the programming world from a different perspective.\\n\\nCarin Meier\\nCOGNITECT\\n@gigasquid\\n\\nCarin started off as a professional ballet dancer, studied Physics in college, and has been developing software for both the enterprise and entrepreneur ever since. She has a strong background in Ruby and Clojure. Her passions lead her to the intersection of the physical and digital world, combining hardware and software, where she has helped clients develop Home Automation Systems as well as written a control library for the Parrot AR Drone in Clojure. She is highly involved in the community and spoken at many conferences, including keynoting at OSCON and Strange Loop. She helps lead the Cincinnati Functional Programmers and is the author of \\\"Living Clojure\\\".\",\"meta\":{\"duration\":\"PT36M1S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"cHoYNStQOEc\",\"provider\":\"youtube\"},\"slug\":\"unconventional-programming-with-chemical-computing-by-carin-meier\",\"tag\":[\"clojure\",\"Chemical Computer\",\"Programming Language\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/cHoYNStQOEc/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"\\\"Unconventional Programming with Chemical Computing\\\" by Carin Meier\"}},{\"node\":{\"description\":\"This presentation was recorded at GOTO Chicago 2015\\nhttp://gotochgo.com\\n\\nKyle Kingsbury - Author of Jepsen\\n\\nABSTRACT\\nStateless applications aren't: they rely on other systems storing and transforming shared state correctly. On the basis of documentation and reputation we assume that our clients and database systems comprise a safe, [...]\\nDownload slides and read the full abstract here:\\nhttp://gotocon.com/chicago-2015/presentation/Jepsen%20IV:%20Hope%20Springs%20Eternal\\n\\nhttps://twitter.com/gotochgo\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT54M34S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"dE3KT7hHkKY\",\"provider\":\"youtube\"},\"slug\":\"jepsen-iv-hope-springs-eternal-kyle-kingsbury\",\"tag\":[\"Kyle Kingsbury\",\"Jepsen IV\",\"Programming Language\",\"GOTO Conference\",\"GOTO Conference\",\"GOTOO Conference\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/dE3KT7hHkKY/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Jepsen IV: Hope Springs Eternal • Kyle Kingsbury\"}},{\"node\":{\"description\":\"Curry On Prague, July 7th 2015\\nhttp://curry-on.org\\nhttp://2015.ecoop.org\",\"meta\":{\"duration\":\"PT58M24S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"oYk8CKH7OhE\",\"provider\":\"youtube\"},\"slug\":\"evan-czaplicki-lets-be-mainstream-user-focused-design-in-elm-curry-on\",\"tag\":[\"Programming Language\",\"Programmer (Profession)\",\"Conference\",\"Curry On\",\"Prague (City/Town/Village)\",\"Elm Programming Language\",\"Front-End\",\"Functional Reactive Programming\",\"Language design\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/oYk8CKH7OhE/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Evan Czaplicki - Let's be mainstream! User focused design in Elm - Curry On\"}}]}},\"pathContext\":{\"slug\":\"programming-language\",\"tag\":\"Programming Language\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-programming-language-2aada4cf3dc60ef00bf3.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"This presentation was recorded at GOTO Chicago 2015\\nhttp://gotochgo.com\\n\\nBrian LeRoux - PhoneGap Project Team, Adobe\\n\\nABSTRACT\\nJavaScript has a long history of being difficult to structure and maintain. To deal with this complexity a swath of frameworks appeared over the years. Prototype.js was quickly followed by jQuery and hounded by Dojo, YUI, Mootools and [...]\\nDownload slides and read the full abstract here:\\nhttp://gotocon.com/chicago-2015/presentation/ECMAScript%206%20&%20Web%20Components\\n\\nhttps://twitter.com/gotochgo\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT36M12S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"2w4sRkTnhPM\",\"provider\":\"youtube\"},\"slug\":\"ecmascript-6-and-web-components-brian-leroux\",\"tag\":[\"Brian LeRoux\",\"ECMAScript (Programming Language)\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\",\"World Wide Web (Video Game Platform)\",\"Software Development (Industry)\",\"Programming Language\",\"Java\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/2w4sRkTnhPM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"ECMAScript 6 & Web Components • Brian LeRoux\"}},{\"node\":{\"description\":\"The time has come to think concurrently. Traditional software concurrency management leads to non-deterministic race conditions and deadlocks that are hard to reproduce and debug, leading to unreliable software. That means it's time to introduce math. Tony Hoare's paradigm of communicating sequential processes, or CSP, is not only a robust way to manage concurrency, but it's fun too! Join us to learn more about how CSP in the Go programming language allows us to reason more clearly about many things happening at once.\\n\\nAbout Eric:\\n\\nEric Shull is a software consultant and developer at Atomic Object. He enjoys working in Go and ClojureScript, writing, sketchnoting, doing math, creating data visualizations, making experimental programming languages, and much, much more.\",\"meta\":{\"duration\":\"PT43M22S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"3gXWA6WEvOM\",\"provider\":\"youtube\"},\"slug\":\"eric-shull-communicating-sequential-processes-september-22-2015\",\"tag\":[\"Communicating Sequential Processes (Programming Language)\",\"Eric Shull\",\"Atomic Object\",\"Programming Language\",\"Programmer (Profession)\",\"Software GR\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/3gXWA6WEvOM/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Eric Shull: Communicating Sequential Processes (September 22, 2015)\"}},{\"node\":{\"description\":\"Dan North - Agile Troublemaker, Developer, Originator of BDD\\n\\nABSTRACT\\nThus begins an old, and sadly lost in the mists of Usenet, love story about Vi and Ed (who becomes her \\\"ex\\\"), told entirely in Unix commands. I had no idea when I started learning these arcane (guess how the \\\"dd\\\" command got its name) and cryptic (what about \\\"grep\\\"?) Unix commands how incredibly useful they would become over the next two decades. If your primary OS is Linux or OSX on the desktop, and maybe iOS or Android on the move, you'll find this 40-something year joke (\\\"Unix\\\" itself was a bad pun) has managed to embed itself into every facet of your technological life.\\n\\nBeing comfortable at a shell prompt and having a healthy working knowledge of Unix commands and regular expressions will give you a whole new level of capability. In this fun talk I'll introduce a few commands and shell tricks you should have in your back pocket, and show you how to start taking control of your operating system. If you ask nicely I'll even tell you about the production system I wrote using Makefiles.\",\"meta\":{\"duration\":\"PT30M4S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"7uwW20odwEk\",\"provider\":\"youtube\"},\"slug\":\"power-use-of-unix-dan-north\",\"tag\":[\"Unix (Software)\",\"Unix Commands\",\"Grep (Software)\",\"Linux software\",\"OSx86 (Software)\",\"Android (Software)\",\"production system\",\"Makefiles\",\"Dan North\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\",\"Programming Language\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/7uwW20odwEk/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Power Use of UNIX • Dan North\"}},{\"node\":{\"description\":\"Check out our upcoming conferences at http://gotocon.com\\nSubscribe to the GOTO Conferences YouTube Channel at https://www.youtube.com/user/GOTOConf...\\n\\nJanne Jul Jensen - Interaction Designer and Usability Specialist\\n\\nABSTRACT\\nMost developers today are aware of the importance of creating a good user interface with a high level of usability, but many are lacking the methods and techniques that can help in this process. This session will present to the listeners a range of concrete methods and techniques applicable in different phases of a design process, to handle specific challenges. This will include design patterns, personas, wire framing, paper prototype testing, progressive disclosure, card sorting and creative workshops and many of the methods and techniques will be accompanied by examples.\\n\\nhttps://twitter.com/gotocon\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT51M20S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"7OSkB4BCx00\",\"provider\":\"youtube\"},\"slug\":\"user-interface-ux-techniques-janne-jul-jensen\",\"tag\":[\"Software Development\",\"Janne Jul Jensen\",\"User Interface Design (Field Of Study)\",\"User Interface (Ontology Instance)\",\"User Interface\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\",\"User Experience Design (Industry)\",\"Technology (Industry)\",\"User Interface (Speech Topic)\",\"UX\",\"Trifork\",\"Design (Industry)\",\"Programming Language\",\"Videos for Developers\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/7OSkB4BCx00/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"User Interface (UX) Techniques • Janne Jul Jensen\"}},{\"node\":{\"description\":\"Meetup: http://www.meetup.com/papers-we-love/events/214400572/\\nPaper: http://www.cs.cmu.edu/~crary/819-f09/Hoare69.pdf\\nSlides: https://speakerdeck.com/paperswelove/jean-yang-on-an-axiomatic-basis-for-computer-programming\\nAudio: http://www.mixcloud.com/paperswelove/jean-yang-on-an-axiomatic-basis-for-computer-programming/\\n---------------------------------------------------------------------------------------------\\nSponsored by The Ladders (@TheLaddersDev)\\n---------------------------------------------------------------------------------------------\\n\\nDescription\\n---------------\\nOur lives now run on software. Bugs are becoming not just annoyances for software developers, but sources of potentially catastrophic failures. A careless programmer mistake could leak our social security numbers or crash our cars. While testing provides some assurance, it is difficult to test all possibilities in complex systems--and practically impossible in concurrent systems. For the critical systems in our lives, we should demand mathematical guarantees that the software behaves the way the programmer expected.\\n\\nA single paper influenced much of the work towards providing these mathematical guarantees. C.A.R. Hoare’s seminal 1969 paper “An Axiomatic Basis for Computer Programming” introduces a method of reasoning about program correctness now known as Hoare logic. In this paper, Hoare provides a technique that 1) allows programmers to express program properties and 2) allows these properties to be automatically checked. These ideas have influenced decades of research in automated reasoning about software correctness.\\n\\nIn this talk, I will describe the main ideas in Hoare logic, as well as the impact of these ideas. I will talk about my personal experience using Hoare logic to verify memory guarantees in an operating system. I will also discuss takeaway lessons for working programmers.\\n\\nBio\\n----\\nJean Yang (@jeanqasaur) is a final-year PhD student at MIT. For her PhD thesis she has created Jeeves, a programming language for automatically enforcing information flow policies for security and privacy. You may be more familiar with one of her other projects, Haskell Ryan Gosling.\",\"meta\":{\"duration\":\"PT1H4M32S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"GQi-6-d5ooQ\",\"provider\":\"youtube\"},\"slug\":\"jean-yang-on-an-axiomatic-basis-for-computer-programming\",\"tag\":[\"Computer Programming (Conference Subject)\",\"Mathematics (Field Of Study)\",\"Software Engineering (Industry)\",\"Program Correctness\",\"Ryan Gosling\",\"Hoare Logic\",\"Type Checking\",\"Computer (Industry)\",\"Programming Language\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/GQi-6-d5ooQ/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Jean Yang on An Axiomatic Basis for Computer Programming\"}},{\"node\":{\"description\":\"Check out our upcoming conferences at http://gotocon.com\\nSubscribe to GOTO Conference's YouTube Channel at http://www.youtube.com/user/GOTOConferences?sub_confirmation=1\\n\\nDouglas Crockford - JSON Creator & Yahoo! JS Architect\\n\\nABSTRACT\\nMuch of programming language design is dictated by fashion. As a consequence, opinions about programming languages tend to be strong, shallow, and deeply emotional. The best languages are brilliant and sadly unfashionable. But we love our stylish, over-rated syntax, and this talk presents an amazing parsing technique that helps achieve it.\\n\\nhttps://twitter.com/gotocon\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT49M40S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"Nlqv6NtBXcA\",\"provider\":\"youtube\"},\"slug\":\"syntaxation-douglas-crockford\",\"tag\":[\"Programming Language\",\"Syntaxation\",\"Douglas Crockford\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/Nlqv6NtBXcA/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Syntaxation • Douglas Crockford\"}},{\"node\":{\"description\":\"This presentation was recorded at GOTO Chicago 2015\\nhttp://gotochgo.com\\n\\nCorey Haines - Author, Speaker, Teacher & all around Groovy Guy\\n\\nABSTRACT\\nYou've probably heard about the lambda calculus, building up our computing structures from just the treasured lambda. But how much have you played with it? In this talk, armed only with Vim and the CLI, we'll explore [...]\\nDownload slides and read the full abstract here:\\nhttp://gotocon.com/chicago-2015/presentation/Fun%20with%20the%20lambda%20calculus\\n\\nhttps://twitter.com/gotochgo\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT48M49S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"QPqoFCHpLF4\",\"provider\":\"youtube\"},\"slug\":\"fun-with-the-lambda-calculus-corey-haines\",\"tag\":[\"Corey Haines\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\",\"Lambda\",\"Programming Language\",\"Software Engineering (Industry)\",\"Software Development (Industry)\",\"Anonymous Function\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/QPqoFCHpLF4/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Fun with the Lambda Calculus • Corey Haines\"}},{\"node\":{\"description\":\"Learn from John Papa's talk \\\"10 AngularJS Patterns\\\" from Code on the Beach 2014 at One Ocean Resort & Spa, Atlantic Beach, Florida. Sunday, August 10, 2014. www.codeonthebeach.com\\n\\nAbstract:\\n\\\"Once you get beyond the AngularJS basics there are many decisions to be made on how to build robust and maintainable apps. Come learn how to build AngularJS apps that manage multiple screens, structure your application code, maintain clean code with popular patterns, implement CRUD, perform robust HTML validation, use local storage, pass unit tests, and use a automated build tasks. This session explores solutions to several of the common challenges that AngularJS developers face while building business applications.\\\"\",\"meta\":{\"duration\":\"PT1H1M27S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"UlvCbnKAH3g\",\"provider\":\"youtube\"},\"slug\":\"john-papa-10-angularjs-patterns-code-on-the-beach-2014\",\"tag\":[\"John Papa\",\"AngularJS (Software)\",\"Beach\",\"JavaScript\",\"Single Page Apps\",\"Patterns\",\"Code on the Beach\",\"conference\",\"Software Engineering (Industry)\",\"Software Development (Industry)\",\"Software Design Pattern (Field Of Study)\",\"Programming Language\",\"programming\",\"Jacksonville (City/Town/Village)\",\"Florida (US State)\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/UlvCbnKAH3g/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"John Papa - 10 AngularJS Patterns - Code on the Beach 2014\"}},{\"node\":{\"description\":\"Droidcon had its first Canadian edition on April 9-10, 2015 in Montreal. \\nIt was organized by Mirego http://www.mirego.com/en \\n\\nWe had Jake Wharton telling us more about some Ok Libraries at Droidcon Montreal.\\n\\nA Few \\\"OK\\\" Libraries:\\nThis talk will be an in-depth look at Okio—a tiny library for interacting with bytes—and a few of the libraries written on top of it: OkHttp, Retrofit, and a newcomer named Moshi. \\n\\nOkio evolved naturally inside of OkHttp before being split out into its own library. It wraps common patterns behind a friendly API for reading, writing, and processing data. We'll start with some fundamentals of the library and how it can enable you to work very close to raw data with ease. \\n\\nAfter an introduction to Okio, we will look at three libraries written with it: OkHttp, a modern HTTP client; Retrofit, a high-level HTTP wrapper; and Moshi, a brand new library for serialization. \\n\\nNot only are these libraries powerful on their own, but when combined their efficiency and performance dramatically increase. We'll conclude with demonstration of how to use them in your applications to great effect. \\n\\n- Jake Wharton\\n\\nAndroid developer for Square working on Square Cash. Has a long-time severe allergy to boilerplate code and for years has been raising awareness on the issue as well as leading efforts to eradicate this horrible disease that plagues modern developers.\",\"meta\":{\"duration\":\"PT1H9M20S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"WvyScM_S88c\",\"provider\":\"youtube\"},\"slug\":\"droidcon-montreal-jake-wharton-a-few-ok-libraries\",\"tag\":[\"Droidcon\",\"Montreal (City/Town/Village)\",\"Library (Software Genre)\",\"Programming Language\",\"Canada\",\"Droidcon Montreal\",\"Google I/O (Conference Series)\",\"Android (Operating System)\",\"Conference\",\"Android Programming\",\"Developers\",\"Google\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/WvyScM_S88c/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Droidcon Montreal Jake Wharton - A Few Ok Libraries\"}},{\"node\":{\"description\":\"This presentation was recorded at GOTO Chicago 2014\\nhttp://gotochgo.com\\n\\nDan North - Agile Troublemaker, Developer, Originator of BDD\\n\\nABSTRACT\\nWithout rigorous care and attention software quickly becomes messy and unmanageable. Even with the best intentions entropy and complexity are a fact of life in growing applications. As in many other contexts it is easier to tackle the symptoms than the cause. Systems Thinking calls this behaviour \\\"Shifting the Burden\\\" and it is more widespread than you might think. From your IDE to your automated build, from DDD’s ACLs to TDD and other TLAs, from backlogs to burn-ups, we are surrounded by props for coping with complexity. As appealing as these are, they also make us less likely to address the underlying problem of complexity itself. Dan believes you can learn to recognise these coping mechanisms for what they are, and intends to set you on the path to simplicating your programming life. \\n\\nLink to slides: http://gotocon.com/dl/goto-chicago-20...\\n\\nhttps://twitter.com/gotochgo\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT55M31S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"XqgwHXsQA1g\",\"provider\":\"youtube\"},\"slug\":\"kicking-the-complexity-habit-dan-north\",\"tag\":[\"Software As A Service (Industry)\",\"Application Software (Software Genre)\",\"Programming Language\",\"dan north\",\"GOTO Conference\",\"GOTO Conference\",\"GOTO Conference\",\"Programmer (Profession)\",\"complexity\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/XqgwHXsQA1g/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Kicking the Complexity Habit • Dan North\"}},{\"node\":{\"description\":\"Take a step back from your normal programming approach and discover a new way of looking at problems. All living organisms information systems are based on chemical processes. What can we learn by using this metaphor of chemistry in our programming? We will answer this question by looking at Artificial Chemical Computing. Building programs based on molecules and chemical reactions, we will explore new ways of thinking and opening ourselves up to innovation. We will discuss the basics of Chemical Programming and even touch on High Order Chemical Programming as well. Code examples will be in the powerful, elegant, and interactive programming language of Clojure, but you will not need to be an expert in the language to enjoy the demos. Come and join us for this adventure in looking at the programming world from a different perspective.\\n\\nCarin Meier\\nCOGNITECT\\n@gigasquid\\n\\nCarin started off as a professional ballet dancer, studied Physics in college, and has been developing software for both the enterprise and entrepreneur ever since. She has a strong background in Ruby and Clojure. Her passions lead her to the intersection of the physical and digital world, combining hardware and software, where she has helped clients develop Home Automation Systems as well as written a control library for the Parrot AR Drone in Clojure. She is highly involved in the community and spoken at many conferences, including keynoting at OSCON and Strange Loop. She helps lead the Cincinnati Functional Programmers and is the author of \\\"Living Clojure\\\".\",\"meta\":{\"duration\":\"PT36M1S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"cHoYNStQOEc\",\"provider\":\"youtube\"},\"slug\":\"unconventional-programming-with-chemical-computing-by-carin-meier\",\"tag\":[\"clojure\",\"Chemical Computer\",\"Programming Language\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/cHoYNStQOEc/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"\\\"Unconventional Programming with Chemical Computing\\\" by Carin Meier\"}},{\"node\":{\"description\":\"This presentation was recorded at GOTO Chicago 2015\\nhttp://gotochgo.com\\n\\nKyle Kingsbury - Author of Jepsen\\n\\nABSTRACT\\nStateless applications aren't: they rely on other systems storing and transforming shared state correctly. On the basis of documentation and reputation we assume that our clients and database systems comprise a safe, [...]\\nDownload slides and read the full abstract here:\\nhttp://gotocon.com/chicago-2015/presentation/Jepsen%20IV:%20Hope%20Springs%20Eternal\\n\\nhttps://twitter.com/gotochgo\\nhttps://www.facebook.com/GOTOConference\\nhttp://gotocon.com\",\"meta\":{\"duration\":\"PT54M34S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"dE3KT7hHkKY\",\"provider\":\"youtube\"},\"slug\":\"jepsen-iv-hope-springs-eternal-kyle-kingsbury\",\"tag\":[\"Kyle Kingsbury\",\"Jepsen IV\",\"Programming Language\",\"GOTO Conference\",\"GOTO Conference\",\"GOTOO Conference\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/dE3KT7hHkKY/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Jepsen IV: Hope Springs Eternal • Kyle Kingsbury\"}},{\"node\":{\"description\":\"Curry On Prague, July 7th 2015\\nhttp://curry-on.org\\nhttp://2015.ecoop.org\",\"meta\":{\"duration\":\"PT58M24S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"oYk8CKH7OhE\",\"provider\":\"youtube\"},\"slug\":\"evan-czaplicki-lets-be-mainstream-user-focused-design-in-elm-curry-on\",\"tag\":[\"Programming Language\",\"Programmer (Profession)\",\"Conference\",\"Curry On\",\"Prague (City/Town/Village)\",\"Elm Programming Language\",\"Front-End\",\"Functional Reactive Programming\",\"Language design\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/oYk8CKH7OhE/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Evan Czaplicki - Let's be mainstream! User focused design in Elm - Curry On\"}}]}},\"pathContext\":{\"slug\":\"programming-language\",\"tag\":\"Programming Language\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-programming-language.json\n// module id = 2613\n// module chunks = 229725764114414"],"sourceRoot":""}