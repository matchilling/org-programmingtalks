webpackJsonp([0x85fd6e3cc7a5],{2013:function(e,a){e.exports={data:{allTalkJson:{edges:[{node:{description:"Laws are our friends! They make it easier to reason about things by eliminating possibilities and constraining the problem space. Applying lawful, principled and reasonable programming to the thorny problem of asynchronous and concurrent systems seems like a natural fit, but the devil is in the details.\n\nThis talk will explore scalaz-stream, both the present and the future designs at a very low-level. We'll look at where we can apply lawful reasoning and where we can't. We'll also examine some of our past failures in this area, and how we think we can do better in upcoming releases.",meta:{duration:"PT1H4M32S"},presenter:{name:null},source:{id:"B0L91sW3XHw",provider:"youtube"},slug:"lawful-asynchronous-programming-daniel-spiewak",tag:["Scala (Programming Language)","asynchronicity"],thumbnails:{default:{url:"https://i.ytimg.com/vi/B0L91sW3XHw/default.jpg",height:90,width:120}},title:"Lawful Asynchronous Programming â€” Daniel Spiewak"}}]}},pathContext:{slug:"asynchronicity",tag:"asynchronicity"}}}});
//# sourceMappingURL=path---tag-asynchronicity-0fb9b832b3ef5cf54690.js.map