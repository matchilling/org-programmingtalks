{"version":3,"sources":["webpack:///path---tag-boostcon-07d8519d5c41b66a7a18.js","webpack:///./.cache/json/tag-boostcon.json"],"names":["webpackJsonp","2028","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,w/BAAAC,MAA+gCC,SAAA,cAAwBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,oCAAAC,KAAA,4BAAAC,YAA6FC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,4CAAoDC,aAAgBR,KAAA,WAAAC,IAAA","file":"path---tag-boostcon-07d8519d5c41b66a7a18.js","sourcesContent":["webpackJsonp([218291871384422],{\n\n/***/ 2028:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"As the number of cores per processor increases, software need to be able to execute multiple tasks in parallel in order to benefit from Moore's law. This is not only a question of writing parallel algorithms, but also a matter of designing the application properly to reduce inter-thread dependencies. These dependencies may be very hard to find and are the results of decades of serial programming. Thus, writing truly scalable software is less a question of technical expertise than adopting the appropriate state of mind.\\n\\nThis presentation is about the design, techniques and tools used by the team who wrote the hyperscalable database \\\"quasardb.\\\" Building upon concrete scalability challenges, the presenter will expose typical multithreading anti-patterns and how to avoid them. The topics covered include: atomics, micro locks, lock-free and wait-free containers, memory management strategies (copy on write, smart pointers, perfect forwarding...), thread local storage, asynchronous I/O, and much more!\",\"meta\":{\"duration\":\"PT1H18M27S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"Zrq9Mxllk74\",\"provider\":\"youtube\"},\"slug\":\"edouard-alligand-scaling-with-c11\",\"tag\":[\"C++Now\",\"BoostCon\",\"2013\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/Zrq9Mxllk74/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Edouard Alligand: Scaling with C++11\"}}]}},\"pathContext\":{\"slug\":\"boostcon\",\"tag\":\"BoostCon\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-boostcon-07d8519d5c41b66a7a18.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"As the number of cores per processor increases, software need to be able to execute multiple tasks in parallel in order to benefit from Moore's law. This is not only a question of writing parallel algorithms, but also a matter of designing the application properly to reduce inter-thread dependencies. These dependencies may be very hard to find and are the results of decades of serial programming. Thus, writing truly scalable software is less a question of technical expertise than adopting the appropriate state of mind.\\n\\nThis presentation is about the design, techniques and tools used by the team who wrote the hyperscalable database \\\"quasardb.\\\" Building upon concrete scalability challenges, the presenter will expose typical multithreading anti-patterns and how to avoid them. The topics covered include: atomics, micro locks, lock-free and wait-free containers, memory management strategies (copy on write, smart pointers, perfect forwarding...), thread local storage, asynchronous I/O, and much more!\",\"meta\":{\"duration\":\"PT1H18M27S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"Zrq9Mxllk74\",\"provider\":\"youtube\"},\"slug\":\"edouard-alligand-scaling-with-c11\",\"tag\":[\"C++Now\",\"BoostCon\",\"2013\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/Zrq9Mxllk74/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Edouard Alligand: Scaling with C++11\"}}]}},\"pathContext\":{\"slug\":\"boostcon\",\"tag\":\"BoostCon\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-boostcon.json\n// module id = 2028\n// module chunks = 218291871384422"],"sourceRoot":""}