webpackJsonp([0xaae24d4eadfe],{3097:function(e,t){e.exports={data:{talkJson:{description:"We are confronted today with the increasing complexity of our C++ software systems. To manage this complexity and build larger applications and systems, C++ strives to form emergent structures (often found in nature, such as snowflakes' symmetrical structures), where simple patterns combine to form a remarkably complex and powerful system. These structures provide both a means to limit the complexity of each component and the essential economies of scale we rely on when developing software.\n\nFrom handheld devices to warehouse-sized data centers, motivated by smaller devices and increased concerns over power consumption, we are relying upon C++ to deliver these complex systems with unmatched efficiency. Our optimizing compilers today are more important than ever before and are utterly opaque to most practicing programmers. Compounding matters, the very emergent structures which allow C++ systems to scale for humans often provide unique and unsolved challenges to optimization.\n\nIn this talk, I will start with a brief overview of how modern optimizing compilers work with C++ code at a very high level. I will then walk through the specific structures and patterns of C++ code, which are at the core of forming emergent structures out of simple, elegant elements. I will also address how these interactions can be effectively modeled and analyzed by a compiler to produce efficient final programs. All of this will be illustrated by a collection of real world case studies, which are broadly applicable and show up throughout modern C++ code bases. My goal is to give a framework for understanding these interactions both in the C++ code and the optimizing compiler, so that programmers are aware of the implications posed by these patterns. Finally, I will introduce a set of principles and techniques for designing and implementing C++ programs and libraries to specifically clear the way for modern optimizers while retaining the simplicity of each component and the power of the combined whole.",meta:{duration:"PT1H33M2S"},presenter:{name:"Chandler Carruth"},slug:"optimizing-the-emergent-structures-of-c",source:{id:"eR34r7HOU14",provider:"youtube"},tag:["c++now","Boostcon","keynote"],title:"Optimizing the Emergent Structures of C++"},allTalkJson:{edges:[{node:{description:"Don't miss an upload! Subscribe! http://goo.gl/szEauh\n\nHow does the pervasiveness of JavaScript on the client change how we architect applications? We can create hundreds virtual machines in the cloud, but we are using the millions of visual machines that visit our sites every day?\n\nSuddenly we are scripting against thousands of Virtual Machines from the command line while creating things today with JavaScript in the browser that were impossible yesterday. LiveScript becomes JavaScript becomes ES6 and now we're compiling C++ to JavaScript.\n\nJoin Scott Hanselman as he explores the relationship between the Cloud and the Browser, many Languages and one Language, how it might all fit together and what comes next.\n\nBuy Scott's books here. http://goo.gl/Y2Zsdh\n\nStay Connected to O'Reilly Media by Email - http://goo.gl/YZSWbO\n\nFollow O'Reilly Media:\nhttp://plus.google.com/+oreillymedia\nhttps://www.facebook.com/OReilly\nhttps://twitter.com/OReillyMedia",meta:{duration:"PT25M57S"},presenter:{name:null},source:{id:"UzyoT4DziQ4",provider:"youtube"},slug:"scott-hanselman-virtual-machines-javascript-and-assembler-fluent-2014-keynote",tag:["JavaScript","Assembly Language (Programming Language)","fluent 2014","fluentconf","fluent conference","Virtual Machine (Programming Language Paradigm)","scott hanselman","keynote","speaker","podcaster","Programming Language (Literary Genre)","o'reilly books","O'Reilly Media (Business Operation)","oreilly","oreilly media","O'Reilly"],thumbnails:{default:{url:"https://i.ytimg.com/vi/UzyoT4DziQ4/default.jpg",height:90,width:120}},title:'Scott Hanselman, "Virtual Machines, JavaScript and Assembler" -  Fluent 2014 Keynote'}},{node:{description:"Videos from DjangoCon Europe 2013 are kindly provided by Heroku, a cloud application platform -- a new way of building and deploying web apps: http://heroku.com/",meta:{duration:"PT31M10S"},presenter:{name:null},source:{id:"yvMWUGx7Fx8",provider:"youtube"},slug:"djangocon-eu-2013-brandon-rhodes-keynote",tag:["djangocon","djangocon europe 2013","djangocon europe","python","heroku","keynote","brandon rhodes"],thumbnails:{default:{url:"https://i.ytimg.com/vi/yvMWUGx7Fx8/default.jpg",height:90,width:120}},title:"DjangoCon EU 2013: Brandon Rhodes - Keynote"}}]}},pathContext:{slug:"optimizing-the-emergent-structures-of-c",tags:["c++now","Boostcon","keynote"]}}}});
//# sourceMappingURL=path---talk-optimizing-the-emergent-structures-of-c-d2b8c8eac77d49858db4.js.map