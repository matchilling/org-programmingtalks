webpackJsonp([0x94121ae4d06c],{2575:function(e,i){e.exports={data:{allTalkJson:{edges:[{node:{description:"Slides and more info: http://www.elixirconf.eu/elixirconf2016/keith-salisbury\n\nPhoenix and Phaser might sound like a cheesy pop band but get these two frameworks playing nice together and you're guaranteed a party. Both are blistering fast, and incredibly easy to use. Building multiplayer games has never been easier.\n\nTalk objectives\n\nThis talk will take you on a step by step guide building yourself a game template, and then using that template to create several multiplayer games. We will introduce you to the joy of creating games using these two wonderful frameworks, and demonstrate some of the possibilities, as well as highlighting some of the challenges and common pitfalls to avoid when developing multiplayer games.\n\nTarget audience\n\nBeginners and anyone interested in having fun with Phoenix channels.\n\n\nKeith is a programmer, sailor and kitesurfer in any order. He is passionate software development and particularly enjoying building fun social games. He is currently writing a book of the same title as this talk.\n\nGithub: ktec\n\nTwitter: @ktec",meta:{duration:"PT34M48S"},presenter:{name:null},source:{id:"I5L9_cXwBcU",provider:"youtube"},slug:"keith-salisbury-building-multiplayer-games-with-phoenix-and-phaser-elixirconfeu-2016",tag:["Keith Salisbury","Phoenix","Phaser","ElixirConfEU"],thumbnails:{default:{url:"https://i.ytimg.com/vi/I5L9_cXwBcU/default.jpg",height:90,width:120}},title:"Keith Salisbury - Building Multiplayer Games with Phoenix and Phaser (ElixirConfEU 2016)"}},{node:{description:"Slides and more info: http://www.elixirconf.eu/elixirconf2016/bram-verburg\n\nEvery new language or framework needs time to prove itself in production, for its early adopter to try, fail, iterate, and document what they have learned. Elixir and Phoenix can leverage the 30 years head-start of the underlying Erlang platform, but for newcomers to the platform it is not always easy to find and apply Erlang best practices. This talk explores some specific security-related aspects of Elixir, Phoenix and the Erlang VM, through practical demonstrations and use-cases. Topics covered include: use of Erlang's 'ssl' module, distributed Erlang, and VM hardening against DoS attacks.\n\nTalk objectives\n\nThe purpose of this talk is to make people familiar with some of the Erlang/Elixir specific security considerations. It is focussed on those things that may surprise people coming to Elixir from other languages, and therefore skims over common attack patterns (XSS, CSRF, SQLI, etc.) and their mitigations.\n\nTarget audience\n\nAnyone planning to deploy an Elixir application, with or without experience in deployment/security using other languages/platforms.\n\n\nBram is a system architect and security advocate at Cisco Systems. His work focusses on massively concurrent back-end systems for IoT/IoE applications, preferably built using Erlang/Elixir, as well as PKI-based security solutions for such environments. He has previously built/designed API servers using Ruby on Rails, as well as VoIP soft switches in Java.",meta:{duration:"PT42M53S"},presenter:{name:null},source:{id:"r0DuAse9tK8",provider:"youtube"},slug:"bram-verburg-securing-elixir-applications-elixirconfeu-2016",tag:["Bram Verburg","Elixir","ElixirConfEU","Phoenix"],thumbnails:{default:{url:"https://i.ytimg.com/vi/r0DuAse9tK8/default.jpg",height:90,width:120}},title:"Bram Verburg - Securing Elixir Applications (ElixirConfEU 2016)"}}]}},pathContext:{slug:"phoenix",tag:"Phoenix"}}}});
//# sourceMappingURL=path---tag-phoenix-c6737c97df598e18b782.js.map