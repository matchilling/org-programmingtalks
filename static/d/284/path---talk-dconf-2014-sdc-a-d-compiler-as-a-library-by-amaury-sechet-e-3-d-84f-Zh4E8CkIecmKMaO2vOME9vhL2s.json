{"data":{"talkJson":{"description":"The D Programming Language Conference, May 21-23 2014, Menlo Park, CA.","meta":{"duration":"PT48M37S"},"presenter":{"name":null},"slug":"dconf-2014-sdc-a-d-compiler-as-a-library-by-amaury-sechet","source":{"id":"AhR4PSExnqk","provider":"youtube"},"tag":["D programming language","programming languages","programming","dconf","dlang"],"title":"DConf 2014: SDC, a D Compiler as a Library by Amaury Sechet"},"allTalkJson":{"edges":[{"node":{"description":"We would like to thank everyone for attending the first edition of Atmosphere Conference, which was held on the 13th-14th May 2013 in Concordia Design in Poznan. Considering the fact that the event was organised for the first time, we must admit that there was a great number of attendees interested in web scalability and performance. Together with organisers we managed to gather over 200 people. Two tracks of lectures, interviews and thousands of conversations behind the scenes guaranteed a successful conference, which we are proud to be organisers of. We hope that this event has met your expectations and gave you a chance to exchange experience, establish cooperation and meet people with similar interests. The first edition of Atmosphere would not be possible if not a great partners' support. Main Partner was the Allegro Group, which has also helped us create the conference schedule. Gold Sponsors were Akamai Technologies and Cisco Systems, whereas Silver Sponsor was the Dell Company. We would also like to thank our media partners, online services and bloggers who helped us promote the event. Photos, presentations and videos will be available soon on the website. Once again - thank you all for creating the first edition of Atmosphere Conference and see you next year.","meta":{"duration":"PT51M26S"},"presenter":{"name":null},"source":{"id":"C4z_9F6nfS8","provider":"youtube"},"slug":"atmosphere-2013-your-css-is-a-mess-jonathan-snook-shopify","tag":["atmosphere","conference","2013","allegro","allegrogroup","cisco systems","cisco","dell","akamai","akamai technologies","performance","scalability","devops","web","java","javascript","css","http","developer","programming","tdd","data","john paul","conde nast"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/C4z_9F6nfS8/default.jpg","height":90,"width":120}},"title":"Atmosphere 2013: \"Your CSS is a Mess\" Jonathan Snook (Shopify)"}},{"node":{"description":"Build Your Own Lisp for Great Justice\n\nImplementing a toy Lisp interpreter is practically a rite of passage for the budding computer scientist. This hallowed tradition is described in detail in \"Lisp in Small Pieces,\" the seminal work on the making of Lisps, but everybody loves a tl;dr, so let's do the 40 minute executive summary.\n\nWe'll charge at high speed\nthrough the following topics, with Clojure code to follow along with as we go (because there's no better language for implementing a Lisp than another Lisp):\n\n* Parsing: turning text files into ASTs\n* Fundamental Lisp datatypes\n* McCarthy's elementary functions\n* Evaluating Lisp code\n* Lambdas and lexical scope\n* Your friend, the state monad\n* Beyond Lisp: pattern matching and type systems\n\nWhen we're done, you'll be ready to go forth and fill the world with Lisps of all shapes, colours and Greenspun violations for Great Justice. Also, it'll be good fun.\n\nSpeaker\nBodil Stokke (@bodil) is a compulsive conference speaker in the fields of functional programming and internets technologies, and is a co-organiser of three annual developer conferences in her home\ntown of Oslo, Norway, mostly because she's still learning how to stop. She is a prolific contributor to the Free Software community, primarily as a Clojure developer, and has recently taken up designing new programming languages as a hobby. In her spare time, she works as a web developer for Comoyo, which is like Hulu for non-Americans.","meta":{"duration":"PT53M52S"},"presenter":{"name":null},"source":{"id":"DHubfS8E--o","provider":"youtube"},"slug":"functional-programming-bodil-stokke","tag":["programming","lisp","geek","functional","clojure"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/DHubfS8E--o/default.jpg","height":90,"width":120}},"title":"Functional programming - Bodil Stokke"}},{"node":{"description":"Higgs, a JIT compiler for JavaScript written in D, was presented at DConf 2013. Basic block versioning, a novel optimization technique in early stages of testing at the time, was also introduced. Experimental results demonstratring how basic block versioning fares on multiple metrics across a variety of benchmarks can now be shown. We discuss how we have interpreted these results to inform further development of Higgs and introduce a JIT compiler architecture based on the idea of lazy/incremental compilation and inlining. We also explore how D has influenced the development of Higgs and take a more in-depth look at how various D features such as templates and CTFE are used in the Higgs implementation.","meta":{"duration":"PT43M57S"},"presenter":{"name":null},"source":{"id":"FGgFMZhnXvU","provider":"youtube"},"slug":"dconf-2014-day-2-talk-2-refactoring-jit-compilation-by-maxime-chevalier-boisvert","tag":["Compiler (Software Genre)","Just In Time","optimization","javascript","compilation","jit","dconf","higgs","conference","talk","Just-in-time Compilation"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/FGgFMZhnXvU/default.jpg","height":90,"width":120}},"title":"DConf 2014 Day 2 Talk 2: Refactoring JIT Compilation by Maxime Chevalier-Boisvert"}},{"node":{"description":"Learn from John Papa's talk \"10 AngularJS Patterns\" from Code on the Beach 2014 at One Ocean Resort & Spa, Atlantic Beach, Florida. Sunday, August 10, 2014. www.codeonthebeach.com\n\nAbstract:\n\"Once you get beyond the AngularJS basics there are many decisions to be made on how to build robust and maintainable apps. Come learn how to build AngularJS apps that manage multiple screens, structure your application code, maintain clean code with popular patterns, implement CRUD, perform robust HTML validation, use local storage, pass unit tests, and use a automated build tasks. This session explores solutions to several of the common challenges that AngularJS developers face while building business applications.\"","meta":{"duration":"PT1H1M27S"},"presenter":{"name":null},"source":{"id":"UlvCbnKAH3g","provider":"youtube"},"slug":"john-papa-10-angularjs-patterns-code-on-the-beach-2014","tag":["John Papa","AngularJS (Software)","Beach","JavaScript","Single Page Apps","Patterns","Code on the Beach","conference","Software Engineering (Industry)","Software Development (Industry)","Software Design Pattern (Field Of Study)","Programming Language","programming","Jacksonville (City/Town/Village)","Florida (US State)"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/UlvCbnKAH3g/default.jpg","height":90,"width":120}},"title":"John Papa - 10 AngularJS Patterns - Code on the Beach 2014"}},{"node":{"description":"If you always wanted to know more about about Clang's AST [1], for example because you want to implement an awesome tool [2, 3] based on Clang, or simply because you want to start contributing, this talk is for you.\n\nMake sure to watch in HD to be able to read the font in the terminal!\n\nThe semantic code completion in the vim session is powered by YCM [4], and the quick formatting is done by clang-format [5].\n\n[1] http://clang.llvm.org/docs/IntroductionToTheClangAST.html\n[2] http://clang.llvm.org/docs/Tooling.html\n[3] http://clang.llvm.org/docs/LibTooling.html\n[4] https://github.com/Valloric/YouCompleteMe\n[5] http://clang.llvm.org/docs/ClangFormat.html\n\nFrom the LLVM Euro Conference 2013: http://llvm.org/devmtg/2013-04/","meta":{"duration":"PT44M53S"},"presenter":{"name":null},"source":{"id":"VqCkCDFLSsc","provider":"youtube"},"slug":"the-clang-ast-a-tutorial","tag":["C++","Clang","compiler","programming"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/VqCkCDFLSsc/default.jpg","height":90,"width":120}},"title":"The Clang AST - a Tutorial"}},{"node":{"description":"Help us caption & translate this video!\n\nhttp://amara.org/v/FGYe/","meta":{"duration":"PT59M32S"},"presenter":{"name":null},"source":{"id":"aZXc11eOEpI","provider":"youtube"},"slug":"elixir-conf-2014-keynote-elixir-by-jose-valim","tag":["computer science","technology","elixir","apps","programming","mobile"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/aZXc11eOEpI/default.jpg","height":90,"width":120}},"title":"Elixir Conf 2014 - Keynote: Elixir by Jose Valim"}},{"node":{"description":"Meetup: http://www.meetup.com/papers-we-love/events/220902753/\nPaper: http://www.cs.cmu.edu/~crary/819-f09/Strachey67.pdf\nSlides: http://bit.ly/1BnBb08\nAudio: http://bit.ly/1HAdXci\n\n---------------------------------------------------------------------------------------------\nSponsored by Two Sigma (@twosigma) and The Ladders (@TheLaddersDev)\n---------------------------------------------------------------------------------------------\n\nDescription\n---------------\nStrachey's lectures on \"Fundamental Concepts in Programming Languages\" provided an extremely broad survey of core issues in programming language design that provided much of the terminology we use today, including definitions of the kinds of polymorphism and the kinds of expressions we see in programming languages. Published as a paper many years later, Strachey's lectures provide an especially readable overview of programming languages concepts.\n\nBio\n----\nJohn Myles White (@johnmyleswhite) is a Julia hacker who loves thinking about the ways in which the design of technical programming languages influences the way in which we think about statistics and machine learning. He's written two books about machine learning for O'Reilly and works at Facebook.","meta":{"duration":"PT1H16M39S"},"presenter":{"name":null},"source":{"id":"cO41uoi5cZs","provider":"youtube"},"slug":"john-myles-white-on-fundamental-concepts-in-programming-languages","tag":["programming languages","paperswelove","Papers We Love","computer science","john myles white","julia","semantics","foundations of computing"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/cO41uoi5cZs/default.jpg","height":90,"width":120}},"title":"John Myles White on Fundamental Concepts in Programming Languages"}},{"node":{"description":"Facebook's Dave Lee presents a talk about \"RACifying\" non-reactive code at the 2014 Reactive Cocoa Developer Conference hosted by GitHub.\n\nAs always, feel free to leave us a comment below and don't forget to subscribe: http://bit.ly/subgithub\n\nThanks!\n\nConnect with us.\nFacebook: http://fb.com/github\nTwitter: http://twitter.com/github\nGoogle+: http://google.com/+github\nLinkedIn: http://linkedin.com/company/github\n\nAbout GitHub\nGitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Millions of people use GitHub to build amazing things together. For more info, go to http://github.com","meta":{"duration":"PT24M23S"},"presenter":{"name":null},"source":{"id":"sek0ohbboNU","provider":"youtube"},"slug":"racify-non-reactive-code-by-dave-lee-github-reactive-cocoa-developer-conference","tag":["git","github","github training","github foundations","basics","collaboration","git basics","VCS","programming","versioncontrol","version control","open source","software development","mercurial","bazaar","perforce","subversion","CVS","octocat"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/sek0ohbboNU/default.jpg","height":90,"width":120}},"title":"RACify Non-Reactive Code by Dave Lee • GitHub Reactive Cocoa Developer Conference"}},{"node":{"description":"This talk is part of Cerner's Tech Talk series. Check us out at http://engineering.cerner.com/ and @CernerEng\n\nAt most companies, advanced analytics expertise is contained in a lab environment: a small team of analysts sitting at their computers and churning out reports and insights to support business decisions. But the real impact from advanced analytics comes from building models that make real-time decisions within production workflows. We will discuss how to use the ecosystem of technologies around Hadoop to support bringing models out of the lab and into the factory, with a focus on strategies for data integration, large-scale machine learning, and experimentation.\n\nAbout the Speaker:\nJosh Wills (@josh_wills) is the Senior Director of Data Science at Cloudera, a leading distrubtor of Hadoop and related services. Wills is the creator of Apache Crunch (a top level Apache project) and serves as the project's chair. Prior to Cloudera, Wills was an engineer at Google. Wills is an open source advocate and all around awesome guy.","meta":{"duration":"PT1H4M28S"},"presenter":{"name":null},"source":{"id":"v-91JycaKjc","provider":"youtube"},"slug":"from-the-lab-to-the-factory-building-a-production-machine-learning-infrastructure","tag":["Cerner (Organization)","tech talk","Machine Learning (Field Of Study)","Apache Software Foundation (Organization)","programming","Statistics (Field Of Study)","Apache Hadoop (Software)","apache crunch"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/v-91JycaKjc/default.jpg","height":90,"width":120}},"title":"From the Lab to the Factory: Building a Production Machine Learning Infrastructure"}},{"node":{"description":"Clojure is a dynamic programming language created by Rich Hickey that targets both the Java Virtual Machine and the CLR. It is designed to be a general-purpose language, combining the approachability and interactive development of a scripting language with an efficient and robust infrastructure for multithreaded programming. Clojure is a compiled language - it compiles directly to JVM bytecode, yet remains completely dynamic. Every feature supported by Clojure is supported at runtime. Clojure provides easy access to the Java frameworks, with optional type hints and type inference, to ensure that calls to Java can avoid reflection.\n\nClojure is a dialect of Lisp, and shares with Lisp the code-as-data philosophy and a powerful macro system. Clojure is predominantly a functional programming language, and features a rich set of immutable, persistent data structures. When mutable state is needed, Clojure offers a software transactional memory system and reactive Agent system that ensure clean, correct, multithreaded designs.\n\nAstrophysicist and Software Architect Brian Beckman interviews Rich Hickey to dig into the details of this very interesting language. If you don't know much about Clojure and the general problems it aims to solve, well, watch and listen carefully to this great conversation with plenty of whiteboarding and outstanding questions. Expert to Expert simply rocks! Thank you for spending time with us, Rich! Clojure is great!","meta":{"duration":"PT53M56S"},"presenter":{"name":"Rich Hickey and Brian Beckman"},"source":{"id":"wASCH_gPnDw","provider":"youtube"},"slug":"expert-to-expert-rich-hickey-and-brian-beckman-inside-clojure","tag":["clojure","programming languages"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/wASCH_gPnDw/default.jpg","height":90,"width":120}},"title":"Expert to Expert: Inside Clojure"}}]}},"pageContext":{"slug":"dconf-2014-sdc-a-d-compiler-as-a-library-by-amaury-sechet","tags":["D programming language","programming languages","programming","dconf","dlang"]}}