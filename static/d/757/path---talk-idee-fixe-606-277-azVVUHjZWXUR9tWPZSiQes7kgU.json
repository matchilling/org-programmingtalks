{"data":{"talkJson":{"description":"For an industry steeped in a mythos of innovation and invention, the path towards reliable software is often obstructed by a web of fixed ideas. Fixed ideas, by actively obscuring alternatives, lead us to inaccurately the weigh the risks and benefits associated with our choices whether they be of an engineering, managerial or business nature. Alan Kay famously quipped that a difference in perspective is worth 80 IQ points but in this talk we'll see that it's worth considerably more than that.","meta":{"duration":"PT39M37S"},"presenter":{"name":"David Nolen"},"slug":"idee-fixe","source":{"id":"lzXHMy4ewtM","provider":"youtube"},"tag":["GOTO Conference","Chicago","Keynote","Innovation"],"title":"Idée Fixe"},"allTalkJson":{"edges":[{"node":{"description":"In this keynote speech from JaxConf 2012, Rich Hickey, creator of Clojure and founder of Datomic gives an awesome analysis of the changing way we think about values (not the philosphoical kind) in light of the increasing complexity of information technology and the advent of Big Data. The broad subject of the talk makes it worth watching for almost anyone in the programming world, and was one of the highlights of the JaxConf lineup.","meta":{"duration":"PT31M44S"},"presenter":{"name":"Rich Hickey"},"source":{"id":"-6BsiVyC1kM","provider":"youtube"},"slug":"the-value-of-values","tag":["JaxConf 2012","Keynote"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/-6BsiVyC1kM/default.jpg","height":90,"width":120}},"title":"The Value of Values"}},{"node":{"description":"We know how to write bad code: litter our programs with casts, macros, pointers, naked new and deletes, and complicated control structures. Alternatively (or additionally), we could obscure every design decision in a mess of deeply nested abstractions using the latest object-oriented programming and generic programming tricks. Then, for good measure, we might complicate our algorithms with interesting special cases. Such code is incomprehensible, unmaintainable, usually inefficient, and not uncommon.\n\nBut how do we write good code? What principles, techniques, and idioms can we exploit to make it easier to produce quality code? In this presentation, I make an argument for type-rich interfaces, compact data structures, integrated resource management and error handling, and highly-structured algorithmic code. I illustrate my ideas and guidelines with a few idiomatic code examples.\n\nI use C++11 freely. Examples include auto, general constant expressions, uniform initialization, type aliases, type safe threading, and user-defined literals. C++11 features are only just starting to appear in production compilers, so some of my suggestions are conjecture. Developing a \"modern style,\" however, is essential if we don't want to maintain newly-written 1970s and 1980s style code in 2020.\n\nThis presentation reflects my thoughts on what \"Modern C++\" should mean in the 2010s: a language for programming based on light-weight abstraction with direct and efficient mapping to hardware, suitable for infrastructure code.","meta":{"duration":"PT1H29M48S"},"presenter":{"name":"Bjarne Stroustrup"},"source":{"id":"0iWb_qi2-uI","provider":"youtube"},"slug":"keynote-goingnative-2012","tag":["C++","GoingNative","Keynote"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/0iWb_qi2-uI/default.jpg","height":90,"width":120}},"title":"Keynote GoingNative 2012 C++"}},{"node":{"description":"This presentation was recorded at GOTO Chicago 2015\nhttp://gotochgo.com\n\nBrian LeRoux - PhoneGap Project Team, Adobe\n\nABSTRACT\nJavaScript has a long history of being difficult to structure and maintain. To deal with this complexity a swath of frameworks appeared over the years. Prototype.js was quickly followed by jQuery and hounded by Dojo, YUI, Mootools and [...]\nDownload slides and read the full abstract here:\nhttp://gotocon.com/chicago-2015/presentation/ECMAScript%206%20&%20Web%20Components\n\nhttps://twitter.com/gotochgo\nhttps://www.facebook.com/GOTOConference\nhttp://gotocon.com","meta":{"duration":"PT36M12S"},"presenter":{"name":null},"source":{"id":"2w4sRkTnhPM","provider":"youtube"},"slug":"ecmascript-6-and-web-components-brian-leroux","tag":["Brian LeRoux","ECMAScript (Programming Language)","GOTO Conference","GOTO Conference","GOTO Conference","World Wide Web (Video Game Platform)","Software Development (Industry)","Programming Language","Java"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/2w4sRkTnhPM/default.jpg","height":90,"width":120}},"title":"ECMAScript 6 & Web Components • Brian LeRoux"}},{"node":{"description":"There are now several frameworks designed to address the demand for \"big agile.\"\n\nIn this talk Jez will explain the flaws in such frameworks, why they so often fail to produce the desired effects, and what we should do instead. He will also address some common organizational obstacles to moving fast at scale: governance, budgeting, and the project paradigm - and discuss how to address them. Warning: this talk will include liberal use of real, statistically sound data.","meta":{"duration":"PT51M2S"},"presenter":{"name":"Jez Humble"},"source":{"id":"2zYxWEZ0gYg","provider":"youtube"},"slug":"why-scaling-agile-doesnt-work","tag":["GOTO Conference","Agile","Scrum"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/2zYxWEZ0gYg/default.jpg","height":90,"width":120}},"title":"Why Scaling Agile Doesn't Work"}},{"node":{"description":"Hartmut Kaisers Keynote from Meeting C++ 2014\n\nSlides:\nhttp://meetingcpp.com/index.php/tv14/items/26.html","meta":{"duration":"PT1H27M36S"},"presenter":{"name":null},"source":{"id":"4OCUEgSNIAY","provider":"youtube"},"slug":"plain-threads-are-the-goto-of-todays-computing-hartmut-kaiser-keynote-meeting-c-2014","tag":["Software (Industry)","C (Programming Language)","C++","Meeting C++","Keynote","Parallelism","Concurrency","Threading","Thread","HPX","Meeting C++ 2014"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/4OCUEgSNIAY/default.jpg","height":90,"width":120}},"title":"Plain Threads are the GOTO of todays computing - Hartmut Kaiser - Keynote Meeting C++ 2014"}},{"node":{"description":"Software gets complicated fast. Most of good architecture and design practise is about trying to slow the rate at which software gets complicated. You can’t stop it, it’s a form of entropy. You can only slow it down and do your level best to stay on top of things.\n\nOne way to manage the mess is to maximise the likelihood that everyone knows what’s going on in the codebase. This requires two things: consistency and replaceability. Consistency implies you can make reasonable assumptions about unfamiliar parts of the application. Replaceability means you can kill code easily and replace it with something better.\n\nDan North argues that code should either be new enough that someone remembers writing it, or well-enough established that everyone knows how it works. It’s code in that awkward middle stage, between brand new and part-of-the-furniture, that gets forgotten about and starts to smell. If code is going to die it should die quickly. If it is going to stick around it should be stable.\n\nIn this talk, Dan describes a model for thinking about the age of code and argues for replaceability as a first class concern. He also discovers that if you optimise for both replaceability and consistency you can end up with something that looks a lot like microservices.","meta":{"duration":"PT37M22S"},"presenter":{"name":"Dan North"},"source":{"id":"4Y0tOi7QWqM","provider":"youtube"},"slug":"software-that-fits-in-your-head","tag":["Agile","GOTO Conference","Mircoservices","Software Architecture"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/4Y0tOi7QWqM/default.jpg","height":90,"width":120}},"title":"Software that Fits in Your Head"}},{"node":{"description":"Cybercriminals are often perceived as having super powers to get into your systems and steal your money and data. The vast majority are just following simple cookbook recipes to take advantage of laziness, sloppiness and an failure to understand what might be risky behaviour. Defences against cybercrime do not have to be hi-tech or even very complex.\nThis talk discusses various types of cybercrime and gives some practical advice as to how to make yourself a little safer.","meta":{"duration":"PT51M4S"},"presenter":{"name":"Richard Clayton"},"source":{"id":"624S9ly09Xk","provider":"youtube"},"slug":"a-practical-guide-to-cybercrime","tag":["GOTO Conference","University of Cambridge","Cybercrime","Security","Privacy"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/624S9ly09Xk/default.jpg","height":90,"width":120}},"title":"A Practical Guide to Cybercrime"}},{"node":{"description":"R is a domain-specific language for analyzing data. Why does data analysis need its own DSL? What does R do well and what does it do poorly? How can developers take advantage of R's strengths and mitigate its weaknesses? This talk will give some answers to these questions.","meta":{"duration":"PT38M9S"},"presenter":{"name":"John Cook"},"source":{"id":"6S9r_YbqHy8","provider":"youtube"},"slug":"the-r-language-the-good-the-bad-and-the-ugly","tag":["GOTO Conference","Aarhus","R Programming Language","Statistics"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/6S9r_YbqHy8/default.jpg","height":90,"width":120}},"title":"The R Language: The Good The Bad & The Ugly"}},{"node":{"description":"Check out our upcoming conferences at http://gotocon.com\nSubscribe to the GOTO Conferences YouTube Channel at https://www.youtube.com/user/GOTOConf...\n\nJanne Jul Jensen - Interaction Designer and Usability Specialist\n\nABSTRACT\nMost developers today are aware of the importance of creating a good user interface with a high level of usability, but many are lacking the methods and techniques that can help in this process. This session will present to the listeners a range of concrete methods and techniques applicable in different phases of a design process, to handle specific challenges. This will include design patterns, personas, wire framing, paper prototype testing, progressive disclosure, card sorting and creative workshops and many of the methods and techniques will be accompanied by examples.\n\nhttps://twitter.com/gotocon\nhttps://www.facebook.com/GOTOConference\nhttp://gotocon.com","meta":{"duration":"PT51M20S"},"presenter":{"name":null},"source":{"id":"7OSkB4BCx00","provider":"youtube"},"slug":"user-interface-ux-techniques-janne-jul-jensen","tag":["Software Development","Janne Jul Jensen","User Interface Design (Field Of Study)","User Interface (Ontology Instance)","User Interface","GOTO Conference","GOTO Conference","GOTO Conference","User Experience Design (Industry)","Technology (Industry)","User Interface (Speech Topic)","UX","Trifork","Design (Industry)","Programming Language","Videos for Developers"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/7OSkB4BCx00/default.jpg","height":90,"width":120}},"title":"User Interface (UX) Techniques • Janne Jul Jensen"}},{"node":{"description":"Dan North - Agile Troublemaker, Developer, Originator of BDD\n\nABSTRACT\nThus begins an old, and sadly lost in the mists of Usenet, love story about Vi and Ed (who becomes her \"ex\"), told entirely in Unix commands. I had no idea when I started learning these arcane (guess how the \"dd\" command got its name) and cryptic (what about \"grep\"?) Unix commands how incredibly useful they would become over the next two decades. If your primary OS is Linux or OSX on the desktop, and maybe iOS or Android on the move, you'll find this 40-something year joke (\"Unix\" itself was a bad pun) has managed to embed itself into every facet of your technological life.\n\nBeing comfortable at a shell prompt and having a healthy working knowledge of Unix commands and regular expressions will give you a whole new level of capability. In this fun talk I'll introduce a few commands and shell tricks you should have in your back pocket, and show you how to start taking control of your operating system. If you ask nicely I'll even tell you about the production system I wrote using Makefiles.","meta":{"duration":"PT30M4S"},"presenter":{"name":null},"source":{"id":"7uwW20odwEk","provider":"youtube"},"slug":"power-use-of-unix-dan-north","tag":["Unix (Software)","Unix Commands","Grep (Software)","Linux software","OSx86 (Software)","Android (Software)","production system","Makefiles","Dan North","GOTO Conference","GOTO Conference","GOTO Conference","Programming Language"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/7uwW20odwEk/default.jpg","height":90,"width":120}},"title":"Power Use of UNIX • Dan North"}}]}},"pageContext":{"slug":"idee-fixe","tags":["GOTO Conference","Chicago","Keynote","Innovation"]}}