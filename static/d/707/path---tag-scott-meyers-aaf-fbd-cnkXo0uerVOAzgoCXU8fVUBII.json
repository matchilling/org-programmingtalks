{"data":{"allTalkJson":{"edges":[{"node":{"description":"http://dconf.org/2014/talks/meyers.html","meta":{"duration":"PT54M55S"},"presenter":{"name":null},"source":{"id":"48kP_Ssg2eY","provider":"youtube"},"slug":"dconf-2014-the-last-thing-d-needs-scott-meyers","tag":["Scott Meyers","dlang","dconf","dconf2014"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/48kP_Ssg2eY/default.jpg","height":90,"width":120}},"title":"DConf 2014:  The Last Thing D Needs (Scott Meyers)"}},{"node":{"description":"What’s the single most important design guideline for the creation of high-quality software? For Scott Meyers, it’s all about interface design. That includes user interfaces, of course, but also APIs, i.e., class interfaces, function interfaces, template interfaces, etc. The guideline is simple: make interfaces easy to use correctly and hard to use incorrectly, but achieving it can be challenging. In this presentation, Scott describes a number of specific ways to approach the design of high-quality interfaces. Much of the material is language- and domain-independent, but some of the ideas assume that you’re using a programming language with relatively strong static typing (e.g., C, C++, Java, C#).","meta":{"duration":"PT58M42S"},"presenter":{"name":null},"source":{"id":"5tg1ONG18H8","provider":"youtube"},"slug":"scott-meyers-the-most-important-design-guideline","tag":["Application Programming Interface (Literature Subject)","Scott Meyers","C++"],"thumbnails":{"default":{"url":"https://i.ytimg.com/vi/5tg1ONG18H8/default.jpg","height":90,"width":120}},"title":"Scott Meyers – The Most Important Design Guideline"}}]}},"pageContext":{"slug":"scott-meyers","tag":"Scott Meyers"}}