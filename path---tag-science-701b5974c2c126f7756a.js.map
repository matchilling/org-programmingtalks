{"version":3,"sources":["webpack:///path---tag-science-701b5974c2c126f7756a.js","webpack:///./.cache/json/tag-science.json"],"names":["webpackJsonp","2684","module","exports","data","allTalkJson","edges","node","description","meta","duration","presenter","name","source","id","provider","slug","tag","thumbnails","default","url","height","width","title","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,aAAeC,QAAUC,MAAQC,YAAA,muBAAAC,MAAyvBC,SAAA,cAAwBC,WAAcC,KAAA,MAAYC,QAAWC,GAAA,cAAAC,SAAA,WAAwCC,KAAA,qCAAAC,KAAA,uEAAAC,YAAyIC,SAAWC,IAAA,iDAAAC,OAAA,GAAAC,MAAA,MAAgFC,MAAA,2CAAmDC,aAAgBR,KAAA,UAAAC,IAAA","file":"path---tag-science-701b5974c2c126f7756a.js","sourcesContent":["webpackJsonp([29040938846230],{\n\n/***/ 2684:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"In this tutorial we will give an introduction to two advanced data storage formats. HDF5 and NetCDF were designed to efficiently store the results of supercomputing applications like climate model outputs, or the data streams received from NASA's fleet of earth observing satellites. They provide a lot of optimizations concerning transparent file compression, speed of access or working with multiple files as if it were one large data set.A couple of Python libraries exist that allow fast and pythonic access to these formats.We will show you how to create and access these types of files from Python, and how to use their advanced features to tune them for maximum efficiency.Tutorial prerequisites and instructions.\\n\\nThomas Pfaff\",\"meta\":{\"duration\":\"PT1H19M39S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"AXlp7qxqu8E\",\"provider\":\"youtube\"},\"slug\":\"thomas-pfaff-advanced-data-storage\",\"tag\":[\"pydata\",\"Berlin\",\"Python\",\"programming language\",\"lecture\",\"science\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/AXlp7qxqu8E/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Thomas Pfaff: Advanced Data Storage\"}}]}},\"pathContext\":{\"slug\":\"science\",\"tag\":\"science\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tag-science-701b5974c2c126f7756a.js","module.exports = {\"data\":{\"allTalkJson\":{\"edges\":[{\"node\":{\"description\":\"In this tutorial we will give an introduction to two advanced data storage formats. HDF5 and NetCDF were designed to efficiently store the results of supercomputing applications like climate model outputs, or the data streams received from NASA's fleet of earth observing satellites. They provide a lot of optimizations concerning transparent file compression, speed of access or working with multiple files as if it were one large data set.A couple of Python libraries exist that allow fast and pythonic access to these formats.We will show you how to create and access these types of files from Python, and how to use their advanced features to tune them for maximum efficiency.Tutorial prerequisites and instructions.\\n\\nThomas Pfaff\",\"meta\":{\"duration\":\"PT1H19M39S\"},\"presenter\":{\"name\":null},\"source\":{\"id\":\"AXlp7qxqu8E\",\"provider\":\"youtube\"},\"slug\":\"thomas-pfaff-advanced-data-storage\",\"tag\":[\"pydata\",\"Berlin\",\"Python\",\"programming language\",\"lecture\",\"science\"],\"thumbnails\":{\"default\":{\"url\":\"https://i.ytimg.com/vi/AXlp7qxqu8E/default.jpg\",\"height\":90,\"width\":120}},\"title\":\"Thomas Pfaff: Advanced Data Storage\"}}]}},\"pathContext\":{\"slug\":\"science\",\"tag\":\"science\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tag-science.json\n// module id = 2684\n// module chunks = 29040938846230"],"sourceRoot":""}